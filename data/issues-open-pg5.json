[
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4505",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4505/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4505/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4505/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4505",
    "id": 234646563,
    "number": 4505,
    "title": "OnBoardCellularInterface fails for CDMA radios.",
    "user": {
      "login": "sarahmarshy",
      "id": 12565767,
      "avatar_url": "https://avatars3.githubusercontent.com/u/12565767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sarahmarshy",
      "html_url": "https://github.com/sarahmarshy",
      "followers_url": "https://api.github.com/users/sarahmarshy/followers",
      "following_url": "https://api.github.com/users/sarahmarshy/following{/other_user}",
      "gists_url": "https://api.github.com/users/sarahmarshy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sarahmarshy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sarahmarshy/subscriptions",
      "organizations_url": "https://api.github.com/users/sarahmarshy/orgs",
      "repos_url": "https://api.github.com/users/sarahmarshy/repos",
      "events_url": "https://api.github.com/users/sarahmarshy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sarahmarshy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-06-08T20:28:04Z",
    "updated_at": "2017-09-28T09:25:59Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug \r\n- Priority: Major \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nMTS Dragonfly \r\nModule : MTQ-EV3-B01\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Expected behavior**\r\n\r\nDevice connects \r\n\r\n**Actual behavior**\r\n\r\nDevice fails to connect \r\nHere is the log: \r\n```shell\r\n\r\nmbed-os-example-cellular, Connecting...\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\n\r\n\r\nCouldn't connect: -3012, will retry\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT(Timeout)\r\nAT> AT\r\nAT? OK%n\r\nAT< AT\r\nAT<\r\nAT= OK\r\nAT> ATE0;+CMEE=2;&K0+IPR=115200;&C1;&D0\r\nAT? OK%n\r\nAT<\r\nAT< ATE0;+CMEE=2;&K0+IPR=115200;&C1;&D0\r\nAT<\r\nAT= OK\r\nAT> AT+CPIN?\r\nAT? +CPIN: %*15[^\r\n]\r\n%n\r\nAT<\r\nAT! ERROR\r\nAT(Aborted)\r\nAT> AT+CPIN?\r\nAT? +CPIN: %*15[^\r\n]\r\n%n\r\nAT<\r\nAT! ERROR\r\nAT(Aborted)\r\nAT> AT+CPIN?\r\nAT? +CPIN: %*15[^\r\n]\r\n%n\r\nAT<\r\nAT! ERROR\r\nAT(Aborted)\r\nAT> AT+CPIN?\r\nAT? +CPIN: %*15[^\r\n]\r\n%n\r\nAT<\r\nAT! ERROR\r\nAT(Aborted)\r\nAT> AT+CPIN?\r\nAT? +CPIN: %*15[^\r\n]\r\n%n\r\nAT<\r\nAT! ERROR\r\nAT(Aborted)\r\nAT> AT+CPIN?\r\nAT? +CPIN: %*15[^\r\n]\r\n%n\r\nAT<\r\nAT! ERROR\r\nAT(Aborted)\r\nAT> AT+CPIN?\r\nAT? +CPIN: %*15[^\r\n]\r\n%n\r\nAT<\r\nAT! ERROR\r\nAT(Aborted)\r\nAT> AT+CPIN?\r\nAT? +CPIN: %*15[^\r\n]\r\n%n\r\nAT<\r\nAT! ERROR\r\nAT(Aborted)\r\nAT> AT+CPIN?\r\nAT? +CPIN: %*15[^\r\n]\r\n%n\r\nAT<\r\nAT! ERROR\r\nAT(Aborted)\r\nAT> AT+CPIN?\r\nAT? +CPIN: %*15[^\r\n]\r\n%n\r\nAT<\r\nAT! ERROR\r\nAT(Aborted)\r\n\r\n\r\nAuthentication Failure. Exiting application\r\n\r\n\r\nFailure. Exiting\r\n```\r\n\r\n**Steps to reproduce**\r\n\r\nUse an MTS dragonfly with a CDMA radio and this repo - https://github.com/armmbed/mbed-os-example-cellular.\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\nYou can see in the log that we are querying for the status of the SIM PIN with CPIN? ([AT command ref](http://www.telit.com/fileadmin/user_upload/products/Downloads/2G/Telit_AT_Commands_Reference_Guide_r23.pdf)). However, this is a CDMA radio. There is no SIM card....\r\n\r\n**Suggested enhancement**\r\n\r\nSupport for CDMA radios. Remove this check if the device is CDMA.\r\n\r\n@hasnainvirk "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4458",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4458/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4458/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4458/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4458",
    "id": 233848720,
    "number": 4458,
    "title": "mbed OS support USBDevice feature on nRF52840 ?",
    "user": {
      "login": "andcor02",
      "id": 20902962,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20902962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andcor02",
      "html_url": "https://github.com/andcor02",
      "followers_url": "https://api.github.com/users/andcor02/followers",
      "following_url": "https://api.github.com/users/andcor02/following{/other_user}",
      "gists_url": "https://api.github.com/users/andcor02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andcor02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andcor02/subscriptions",
      "organizations_url": "https://api.github.com/users/andcor02/orgs",
      "repos_url": "https://api.github.com/users/andcor02/repos",
      "events_url": "https://api.github.com/users/andcor02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andcor02/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-06-06T10:35:27Z",
    "updated_at": "2018-04-04T18:14:29Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "This is a common recurring question, what are the plans for USBDevice for devices and mbed os.\r\n\r\nSpecifically the nRF52840 mbed enabled board, is this available in the future for USBDevice?\r\n\r\nThis has been flagged here: https://developer.mbed.org/questions/78204/Will-the-mbed-OS-support-USBDevice-featu/\r\n\r\nRegards,\r\n\r\nAndrea\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4457",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4457/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4457/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4457/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4457",
    "id": 233848034,
    "number": 4457,
    "title": "NXP K22F RAM issue",
    "user": {
      "login": "andcor02",
      "id": 20902962,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20902962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andcor02",
      "html_url": "https://github.com/andcor02",
      "followers_url": "https://api.github.com/users/andcor02/followers",
      "following_url": "https://api.github.com/users/andcor02/following{/other_user}",
      "gists_url": "https://api.github.com/users/andcor02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andcor02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andcor02/subscriptions",
      "organizations_url": "https://api.github.com/users/andcor02/orgs",
      "repos_url": "https://api.github.com/users/andcor02/repos",
      "events_url": "https://api.github.com/users/andcor02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andcor02/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 534372905,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20online%20deployment",
        "name": "type: online deployment",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-06-06T10:32:43Z",
    "updated_at": "2017-06-06T13:24:08Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Hi just a quick heads up,\r\n\r\nIt seems when building any example with the NXP K22F that from the build information it reports that the max RAM size for the program can be 32kB, even though the K22F supports 128kB.\r\n\r\nThis was originally flagged up here:\r\n\r\nhttps://developer.mbed.org/questions/78201/Fix-K22F-Ram-size-it-should-show-128K-bu/\r\n\r\nRegards,\r\n\r\nAndrea"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4443",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4443/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4443/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4443/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4443",
    "id": 233539375,
    "number": 4443,
    "title": "Implement recvmsg support for netsocket API",
    "user": {
      "login": "tommikas",
      "id": 18394311,
      "avatar_url": "https://avatars0.githubusercontent.com/u/18394311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tommikas",
      "html_url": "https://github.com/tommikas",
      "followers_url": "https://api.github.com/users/tommikas/followers",
      "following_url": "https://api.github.com/users/tommikas/following{/other_user}",
      "gists_url": "https://api.github.com/users/tommikas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tommikas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tommikas/subscriptions",
      "organizations_url": "https://api.github.com/users/tommikas/orgs",
      "repos_url": "https://api.github.com/users/tommikas/repos",
      "events_url": "https://api.github.com/users/tommikas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tommikas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-06-05T09:39:03Z",
    "updated_at": "2017-06-26T11:03:41Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Enhancement\r\n\r\nWithout support for `socket_recvmsg` for example resolving the destination address of a received UDP packet is not possible. This is needed to distinguish between multiple multicast groups when receiving on a single socket.\r\n\r\nCurrently at least nanostack provides `socket_recvmsg`.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4429",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4429/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4429/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4429/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4429",
    "id": 233129864,
    "number": 4429,
    "title": "ATCmdParser enhancement requests",
    "user": {
      "login": "RobMeades",
      "id": 6726745,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6726745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RobMeades",
      "html_url": "https://github.com/RobMeades",
      "followers_url": "https://api.github.com/users/RobMeades/followers",
      "following_url": "https://api.github.com/users/RobMeades/following{/other_user}",
      "gists_url": "https://api.github.com/users/RobMeades/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RobMeades/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RobMeades/subscriptions",
      "organizations_url": "https://api.github.com/users/RobMeades/orgs",
      "repos_url": "https://api.github.com/users/RobMeades/repos",
      "events_url": "https://api.github.com/users/RobMeades/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RobMeades/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-06-02T09:41:39Z",
    "updated_at": "2017-06-05T15:38:15Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n## Enhancement\r\n\r\n#4119 introduce the new `ATCmdParser`, which is very useful indeed.  However it's lacking some stuff to make it properly usable.  These stuffs are:\r\n\r\n1. A method that simply allows URCs to run. Often all the application has to do is wait for the modem to spit out a URC saying it's got something, which will be trapped by a `oob()`.  However `oob()`s are only processed when a `recv()` call is in progress. My workaround, at the moment is to do `recv(\"\\x01\")`, since I know the modem will never send \"\\x01\", but that is a somewhat peculiar hack and looks very strange in terms of the debug prints (smiley faces and timeouts appear).  It would be better to have a specific method for this, maybe with its own personal timeout.  Something like `wait(int timeout)`.\r\n2. A method to remove an `oob()`.  Currently they can only be added, and many may be taking up RAM unnecessarily.\r\n3. The `read()` method reads an exact number of characters from the serial stream, or -1 if there is a timeout.  The problem with this is that it might have read, say, 99 out of 100 characters from the serial stream and then timed out.  When -1 is returned the application has no idea that there really have been some characters received, so those are effectively lost.  It would be *much* better if `read()` simply returned the number of characters read, 0 representing the timeout case.\r\n4. This is an optional one: since there can be many `oob()`s, they can take up a lot of processing time during the `recv()` call.  If there is a lot of data coming in, this could result in data loss if there is no flow control on the incoming stream.  So it would be nice to have an option to not allow `oob()`s to run on `recv()` calls where timing is critical.  This could be done as an additional bool parameter to `recv()`, which defaults to allowing `oob()`s to run."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4428",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4428/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4428/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4428/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4428",
    "id": 233126183,
    "number": 4428,
    "title": "UARTSerial enhancement request: flow control",
    "user": {
      "login": "RobMeades",
      "id": 6726745,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6726745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RobMeades",
      "html_url": "https://github.com/RobMeades",
      "followers_url": "https://api.github.com/users/RobMeades/followers",
      "following_url": "https://api.github.com/users/RobMeades/following{/other_user}",
      "gists_url": "https://api.github.com/users/RobMeades/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RobMeades/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RobMeades/subscriptions",
      "organizations_url": "https://api.github.com/users/RobMeades/orgs",
      "repos_url": "https://api.github.com/users/RobMeades/repos",
      "events_url": "https://api.github.com/users/RobMeades/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RobMeades/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2017-06-02T09:26:59Z",
    "updated_at": "2017-07-06T13:43:38Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type:  Enhancement\r\n- Priority: Minor\r\n\r\n## Enhancement\r\n\r\n#4119 introduced `UARTSerial`, which provides a very neat interface to buffered serial operations.  One thing it is missing, though, is flow control.  If `UARTSerial` receives data faster than it can get rid of it, characters are lost without notice.  This is a particular issue when using the `recv()` method of the equally new `ATCmdParser` with the serial stream, since the `sscanf()`ing involved can take quite some time and could cause data loss, especially if there are out of band thingies to capture.\r\n\r\nAll that is required is for `UARTSerial` to expose the `set_flow_control()` bit of `SerialBase`, I think."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4416",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4416/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4416/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4416/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4416",
    "id": 232692701,
    "number": 4416,
    "title": "Extend tests for memap",
    "user": {
      "login": "MarceloSalazar",
      "id": 1931553,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarceloSalazar",
      "html_url": "https://github.com/MarceloSalazar",
      "followers_url": "https://api.github.com/users/MarceloSalazar/followers",
      "following_url": "https://api.github.com/users/MarceloSalazar/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarceloSalazar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarceloSalazar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarceloSalazar/subscriptions",
      "organizations_url": "https://api.github.com/users/MarceloSalazar/orgs",
      "repos_url": "https://api.github.com/users/MarceloSalazar/repos",
      "events_url": "https://api.github.com/users/MarceloSalazar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarceloSalazar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "MarceloSalazar",
      "id": 1931553,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarceloSalazar",
      "html_url": "https://github.com/MarceloSalazar",
      "followers_url": "https://api.github.com/users/MarceloSalazar/followers",
      "following_url": "https://api.github.com/users/MarceloSalazar/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarceloSalazar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarceloSalazar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarceloSalazar/subscriptions",
      "organizations_url": "https://api.github.com/users/MarceloSalazar/orgs",
      "repos_url": "https://api.github.com/users/MarceloSalazar/repos",
      "events_url": "https://api.github.com/users/MarceloSalazar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarceloSalazar/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "MarceloSalazar",
        "id": 1931553,
        "avatar_url": "https://avatars2.githubusercontent.com/u/1931553?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarceloSalazar",
        "html_url": "https://github.com/MarceloSalazar",
        "followers_url": "https://api.github.com/users/MarceloSalazar/followers",
        "following_url": "https://api.github.com/users/MarceloSalazar/following{/other_user}",
        "gists_url": "https://api.github.com/users/MarceloSalazar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MarceloSalazar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MarceloSalazar/subscriptions",
        "organizations_url": "https://api.github.com/users/MarceloSalazar/orgs",
        "repos_url": "https://api.github.com/users/MarceloSalazar/repos",
        "events_url": "https://api.github.com/users/MarceloSalazar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MarceloSalazar/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-05-31T20:53:17Z",
    "updated_at": "2018-02-13T19:22:52Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Major\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\nNeed to extend tests for memap to catch potential regression problems when parsing multiple memory map files for multiple toolchains.\r\n\r\nDepends on: https://github.com/ARMmbed/mbed-os/pull/4392"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4408",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4408/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4408/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4408/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4408",
    "id": 232304629,
    "number": 4408,
    "title": "C HAL function to check Serial FIFO status",
    "user": {
      "login": "bridadan",
      "id": 3123977,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3123977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridadan",
      "html_url": "https://github.com/bridadan",
      "followers_url": "https://api.github.com/users/bridadan/followers",
      "following_url": "https://api.github.com/users/bridadan/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridadan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridadan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridadan/subscriptions",
      "organizations_url": "https://api.github.com/users/bridadan/orgs",
      "repos_url": "https://api.github.com/users/bridadan/repos",
      "events_url": "https://api.github.com/users/bridadan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridadan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-05-30T16:09:36Z",
    "updated_at": "2017-08-16T11:36:23Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Related issue: #1849 \r\n- Priority: Minor\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nWhen using the Serial API, most implementations take the to-be-transmitted data and place it in the UART hardware's FIFO. At this point the function returns, however there is no way to actually check via the mbed API whether this data has actually been transmitted \"on the wire\".\r\n\r\n**Suggested enhancement**\r\nIt has been suggested in past discussions ([#1849](https://github.com/ARMmbed/mbed-os/issues/1849#issuecomment-256097072), #3132, [#2966](https://github.com/ARMmbed/mbed-os/pull/2966#issuecomment-253559798)) to add a C HAL function that would allow applications to check if the FIFO buffer is empty. This would allow applications to ensure all data has been transmitted before doing certain actions that affect the serial hardware (eg. sleep/deepsleep).\r\n\r\n**Pros**\r\n- Allows applications to delay until all data has been transmitted before moving on to other tasks.\r\n\r\n**Cons**\r\n\r\n- Time intensive task of ensure all targets implement this function\r\n- Not all targets may support this functionality\r\n\r\nFYI @LMESTM @0xc0170 "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4394",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4394/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4394/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4394/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4394",
    "id": 231437534,
    "number": 4394,
    "title": "MOTE_L152RC mbedOS 5 Support",
    "user": {
      "login": "loverdeg-ep",
      "id": 24318071,
      "avatar_url": "https://avatars0.githubusercontent.com/u/24318071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loverdeg-ep",
      "html_url": "https://github.com/loverdeg-ep",
      "followers_url": "https://api.github.com/users/loverdeg-ep/followers",
      "following_url": "https://api.github.com/users/loverdeg-ep/following{/other_user}",
      "gists_url": "https://api.github.com/users/loverdeg-ep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loverdeg-ep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loverdeg-ep/subscriptions",
      "organizations_url": "https://api.github.com/users/loverdeg-ep/orgs",
      "repos_url": "https://api.github.com/users/loverdeg-ep/repos",
      "events_url": "https://api.github.com/users/loverdeg-ep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loverdeg-ep/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 778089272,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20semtech",
        "name": "devices: semtech",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-05-25T19:38:14Z",
    "updated_at": "2017-12-13T21:03:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nBoard currently only supports mbedOS 2\r\n\r\n**Suggested enhancement**\r\nUpdate board support for mbedOS 5\r\n\r\n**Pros**\r\nIncreases number of Lora boards with mbedOS 5 support\r\n\r\n**Cons**\r\nSemtech LoRaWAN mac and radio driver support will adjustments\r\n\r\n-----------------------------------------------------------------"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4380",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4380/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4380/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4380/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4380",
    "id": 230983659,
    "number": 4380,
    "title": "Update vscode exporter for the new intellisense engine",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "janjongboom",
        "id": 816856,
        "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janjongboom",
        "html_url": "https://github.com/janjongboom",
        "followers_url": "https://api.github.com/users/janjongboom/followers",
        "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
        "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
        "organizations_url": "https://api.github.com/users/janjongboom/orgs",
        "repos_url": "https://api.github.com/users/janjongboom/repos",
        "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
        "received_events_url": "https://api.github.com/users/janjongboom/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-05-24T09:54:56Z",
    "updated_at": "2017-12-20T16:11:28Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/Microsoft/vscode-cpptools/blob/master/Documentation/LanguageServer/FAQ.md#what-is-the-difference-between-includepath-and-browsepath-in-c_cpp_propertiesjson\r\n\r\nThe intellisense engine has changed and now requires us to set a number of extra parameters and macros. For now we'll be on the old engine, but we should update the exporter."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4374",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4374/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4374/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4374/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4374",
    "id": 230686482,
    "number": 4374,
    "title": "Maximum COAP message resending buffer size limited to 255 bytes.",
    "user": {
      "login": "Apocalyt",
      "id": 8822240,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8822240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Apocalyt",
      "html_url": "https://github.com/Apocalyt",
      "followers_url": "https://api.github.com/users/Apocalyt/followers",
      "following_url": "https://api.github.com/users/Apocalyt/following{/other_user}",
      "gists_url": "https://api.github.com/users/Apocalyt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Apocalyt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Apocalyt/subscriptions",
      "organizations_url": "https://api.github.com/users/Apocalyt/orgs",
      "repos_url": "https://api.github.com/users/Apocalyt/repos",
      "events_url": "https://api.github.com/users/Apocalyt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Apocalyt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-05-23T12:16:56Z",
    "updated_at": "2017-09-13T07:09:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\nIn the existing solution it is impossible for the maximum size of the COAP retransmission buffer to be bigger than 255 bytes. If you try to define YOTTA_CFG_COAP_RESENDING_QUEUE_SIZE_BYTES to be larger than 255 in application the value gets truncated to a uint8_t. This is probably because the sn_coap_resending_queue_bytes -variable is defined as uint8_t in:\r\nmbed-os/features/FEATURE_COMMON_PAL/mbed-coap/source/include/sn_coap_protocol_internal.h \r\n\r\nThe maximum size of 255 bytes for the whole retransmission buffer can be too small for many applications especially when using COAP over WIFI or cellular network where multiple messages may require retransmission simultaneously. Even a single packet with a big payload (~512 bytes) can fill the whole buffer. The RAM available on many microcontrollers can easily handle a bigger buffer, so it should be possible to set the maximum size of the retransmission buffer to be bigger atleast using yotta config.\r\n\r\n**Suggested enhancement**\r\nChange the type of the sn_coap_resending_queue_bytes to be bigger to allow a bigger retransmission buffer if the programmer using the library so chooses. uint16_t or maybe even uint32_t should work better. The related unit test may also need to be changed.\r\n\r\n**Pros**\r\n- Allows bigger coap retransmission buffer size if the user so chooses\r\n- Makes coap retransmission feature relevant in applications which require big amounts of data to be sent over unreliable network.\r\n\r\n**Cons**\r\n- Few (~1-3) extra bytes of ram usage when using COAP to store the bigger variable"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4350",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4350/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4350/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4350/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4350",
    "id": 229927744,
    "number": 4350,
    "title": "Issues with MbedTLS and LPC4088",
    "user": {
      "login": "marineDE",
      "id": 26294377,
      "avatar_url": "https://avatars1.githubusercontent.com/u/26294377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marineDE",
      "html_url": "https://github.com/marineDE",
      "followers_url": "https://api.github.com/users/marineDE/followers",
      "following_url": "https://api.github.com/users/marineDE/following{/other_user}",
      "gists_url": "https://api.github.com/users/marineDE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marineDE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marineDE/subscriptions",
      "organizations_url": "https://api.github.com/users/marineDE/orgs",
      "repos_url": "https://api.github.com/users/marineDE/repos",
      "events_url": "https://api.github.com/users/marineDE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marineDE/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-19T09:59:15Z",
    "updated_at": "2017-05-19T12:28:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I try to compile mbedTLS with LPC4088 but I got systematically these errors:\r\n![errors](https://cloud.githubusercontent.com/assets/26294377/26242852/769dcb66-3cbc-11e7-94d3-7c847d462a30.PNG)\r\n\r\nActually, I imported in the mbed compiler the HelloMQTT program of Vergil Cola, I updated the mbed-os library to the latest one and I removed the easy-connect library (I just kept and added inside the main file, the easy_connect function for Ethernet). Also, I added in the mbed_app.json file this macro:\r\n\"macros\": [\"MBEDTLS_NO_DEFAULT_ENTROPY_SOURCES\",\"MBEDTLS_TEST_NULL_ENTROPY\"]\r\n\r\nBut I still cannot compile... Is there any issue for mbedTLS with LPC4088?\r\nThank you in advance for any help!\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4348",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4348/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4348/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4348/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4348",
    "id": 229899227,
    "number": 4348,
    "title": "Need a MBED test for serial.format() settings like parity ",
    "user": {
      "login": "LMESTM",
      "id": 17590297,
      "avatar_url": "https://avatars2.githubusercontent.com/u/17590297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LMESTM",
      "html_url": "https://github.com/LMESTM",
      "followers_url": "https://api.github.com/users/LMESTM/followers",
      "following_url": "https://api.github.com/users/LMESTM/following{/other_user}",
      "gists_url": "https://api.github.com/users/LMESTM/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LMESTM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LMESTM/subscriptions",
      "organizations_url": "https://api.github.com/users/LMESTM/orgs",
      "repos_url": "https://api.github.com/users/LMESTM/repos",
      "events_url": "https://api.github.com/users/LMESTM/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LMESTM/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-05-19T08:00:26Z",
    "updated_at": "2017-12-14T17:34:28Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement \r\n- Related to : #4216 \r\n- Priority: Major \r\n\r\n**Target**\r\nALL\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Expected behavior**\r\nThere is a need for an automated test to verify the various supported settings of serial link, \r\nin particular the parity one.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4341",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4341/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4341/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4341/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4341",
    "id": 229590989,
    "number": 4341,
    "title": "HAL_LOCK in ST Devices",
    "user": {
      "login": "daniel-cesarini-tridonic-com",
      "id": 16016924,
      "avatar_url": "https://avatars0.githubusercontent.com/u/16016924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daniel-cesarini-tridonic-com",
      "html_url": "https://github.com/daniel-cesarini-tridonic-com",
      "followers_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/followers",
      "following_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/following{/other_user}",
      "gists_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/subscriptions",
      "organizations_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/orgs",
      "repos_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/repos",
      "events_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-05-18T08:22:30Z",
    "updated_at": "2017-05-19T13:31:21Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\nHAL_LOCK mechanism in ST HAL seems not ready for RTOS context.\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nSTMF32F0 and F4\r\n\r\n**Toolchain:**\r\nAll\r\n\r\n**mbed-os sha:**\r\n4eea8fa8633751fc91095e24eeb154ac3df3afd9\r\n\r\n**Actual behavior**\r\nThe HAL_LOCK mechanism (https://github.com/ARMmbed/mbed-os/blob/master/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_def.h#L105) is not set to be used in the RTOS context. \r\n\r\n**Observed issue**\r\nWhen using the CRC hardware for checking data coming in from an I2C interrupt and from a scheduled thread we observed not proper behavior on the handling of HAL_LOCK.\r\nWe are working on a workaround, to schedule the CRC check outside of the interrupt context, but are still unsure whether this solution then will completely overcome the limitations of the current implementation of the HAL_LOCK mechanism.\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**How to?**\r\nHow to use the ST HAL in the context of mbed-os considering that it is an RTOS? And as such it could access the HAL from both interrupts and thread context.\r\nRelated to this I found https://community.st.com/thread/13989, where also it is reported that the HAL_LOCK mechanism is not completely reliable in the context of RTOS systems.\r\n\r\n@bcostm\r\n-------------------------\r\nFYI: @markus-becker-tridonic-com @ivan-adzic-tridonic-com @MarceloSalazar @karsev  "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4301",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4301/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4301/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4301/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4301",
    "id": 227971886,
    "number": 4301,
    "title": "New version of st-link interface firmware doesn't work with greentea on mac os",
    "user": {
      "login": "LiyouZhou",
      "id": 2660805,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2660805?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LiyouZhou",
      "html_url": "https://github.com/LiyouZhou",
      "followers_url": "https://api.github.com/users/LiyouZhou/followers",
      "following_url": "https://api.github.com/users/LiyouZhou/following{/other_user}",
      "gists_url": "https://api.github.com/users/LiyouZhou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LiyouZhou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LiyouZhou/subscriptions",
      "organizations_url": "https://api.github.com/users/LiyouZhou/orgs",
      "repos_url": "https://api.github.com/users/LiyouZhou/repos",
      "events_url": "https://api.github.com/users/LiyouZhou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LiyouZhou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 25,
    "created_at": "2017-05-11T12:18:23Z",
    "updated_at": "2017-12-06T22:51:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2 and NUCLEO_F429ZI\r\n\r\n**DAPLink version:**\r\n0200 works\r\n0221 fails\r\n\r\n**Actual behavior**\r\nThere is no output from the device serial console. when running mbedgt -v -V hence tests fail\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4287",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4287/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4287/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4287/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4287",
    "id": 227146479,
    "number": 4287,
    "title": "Multithreading pyOCD debugging doesn't work on visual studio code",
    "user": {
      "login": "c1728p9",
      "id": 2916772,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2916772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/c1728p9",
      "html_url": "https://github.com/c1728p9",
      "followers_url": "https://api.github.com/users/c1728p9/followers",
      "following_url": "https://api.github.com/users/c1728p9/following{/other_user}",
      "gists_url": "https://api.github.com/users/c1728p9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/c1728p9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/c1728p9/subscriptions",
      "organizations_url": "https://api.github.com/users/c1728p9/orgs",
      "repos_url": "https://api.github.com/users/c1728p9/repos",
      "events_url": "https://api.github.com/users/c1728p9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/c1728p9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-08T19:19:53Z",
    "updated_at": "2017-05-13T18:43:27Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Reporting at the request of @janjongboom \r\n\r\nWhen using a project exported to visual studio code with and pyOCD with RTOS integration (https://github.com/mbedmicro/pyOCD/pull/242) the debugging session is abruptly terminated due to thread ID 1 not existing. A log of this can be found here [visual_studio_log.txt](https://github.com/ARMmbed/mbed-os/files/984593/visual_studio_log.txt).\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4285",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4285/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4285/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4285/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4285",
    "id": 227062497,
    "number": 4285,
    "title": "Is there any plan to upgrade the ChaN FAT filesystem to R0.12 ?",
    "user": {
      "login": "RdaZhongyao",
      "id": 17607961,
      "avatar_url": "https://avatars0.githubusercontent.com/u/17607961?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RdaZhongyao",
      "html_url": "https://github.com/RdaZhongyao",
      "followers_url": "https://api.github.com/users/RdaZhongyao/followers",
      "following_url": "https://api.github.com/users/RdaZhongyao/following{/other_user}",
      "gists_url": "https://api.github.com/users/RdaZhongyao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RdaZhongyao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RdaZhongyao/subscriptions",
      "organizations_url": "https://api.github.com/users/RdaZhongyao/orgs",
      "repos_url": "https://api.github.com/users/RdaZhongyao/repos",
      "events_url": "https://api.github.com/users/RdaZhongyao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RdaZhongyao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-05-08T14:22:36Z",
    "updated_at": "2017-11-15T23:02:57Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement\r\n- Related issue: `#FAT`\r\n- Priority: Minor\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n- ChaN FAT filesystem supports `exFAT` since R0.12, the latest is R0.12c, mbed is using R0.11a\r\n- `exFAT` has better support to storage device over 32GB\r\n\r\n**Suggested enhancement**\r\n- Upgrade to R0.12c\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4283",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4283/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4283/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4283/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4283",
    "id": 227004851,
    "number": 4283,
    "title": "Regarding SerialBase class",
    "user": {
      "login": "YarivCol",
      "id": 12260153,
      "avatar_url": "https://avatars2.githubusercontent.com/u/12260153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YarivCol",
      "html_url": "https://github.com/YarivCol",
      "followers_url": "https://api.github.com/users/YarivCol/followers",
      "following_url": "https://api.github.com/users/YarivCol/following{/other_user}",
      "gists_url": "https://api.github.com/users/YarivCol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YarivCol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YarivCol/subscriptions",
      "organizations_url": "https://api.github.com/users/YarivCol/orgs",
      "repos_url": "https://api.github.com/users/YarivCol/repos",
      "events_url": "https://api.github.com/users/YarivCol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YarivCol/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-08T10:34:25Z",
    "updated_at": "2017-05-12T20:26:19Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement | Question\r\n\r\n---------------------------------------------------------------\r\nHey!\r\n\r\nIs there any reason why SerialBase class's methodes start_read, start_write, abort_read and abort_write arent virtual?\r\n\r\nIf they'll be it will be easier for me to imlplement my own types of serial comm...\r\nIll be also able to wrap serialBase functionality with my needs...\r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4271",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4271/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4271/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4271/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4271",
    "id": 226278746,
    "number": 4271,
    "title": "Detecting RAM/FLASH overflows",
    "user": {
      "login": "bulislaw",
      "id": 107253,
      "avatar_url": "https://avatars2.githubusercontent.com/u/107253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bulislaw",
      "html_url": "https://github.com/bulislaw",
      "followers_url": "https://api.github.com/users/bulislaw/followers",
      "following_url": "https://api.github.com/users/bulislaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/bulislaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bulislaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bulislaw/subscriptions",
      "organizations_url": "https://api.github.com/users/bulislaw/orgs",
      "repos_url": "https://api.github.com/users/bulislaw/repos",
      "events_url": "https://api.github.com/users/bulislaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bulislaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-05-04T13:21:59Z",
    "updated_at": "2017-05-04T13:22:12Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Description\r\n- Type: Enhancement\r\n- Related issue: https://github.com/ARMmbed/mbed-os-cliapp/issues/274\r\n- Priority: Minor\r\n\r\nmbed OS will happily build even if the memory usage is clearly off the platform capabilities. Eg the mbed-os-cliapp build for Arch Pro using Ethernet is reported to use almost 40K of RAM (of 32K available):\r\n```\r\n+-----------------------------+--------+-------+-------+\r\n| Module                      |  .text | .data |  .bss |\r\n+-----------------------------+--------+-------+-------+\r\n| Misc                        |  72453 |   171 |  4038 |\r\n| drivers                     |   1857 |     4 |    28 |\r\n| events                      |     70 |     0 |     0 |\r\n| events/equeue               |   2100 |     8 |    56 |\r\n| features/FEATURE_COMMON_PAL |   1360 |     0 |   120 |\r\n| features/FEATURE_LWIP       |  44335 | 16720 |  8736 |\r\n| features/filesystem         |    586 |     0 |     0 |\r\n| features/netsocket          |   6074 |    85 |    60 |\r\n| hal                         |    836 |     8 |     0 |\r\n| platform                    |   2999 |    24 |   432 |\r\n| rtos                        |    778 |     8 |     0 |\r\n| rtos/rtx                    |   9094 |   100 |  8396 |\r\n| targets/TARGET_NXP          |   3784 |    24 |   224 |\r\n| Subtotals                   | 146326 | 17152 | 22090 |\r\n+-----------------------------+--------+-------+-------+\r\nAllocated Heap: unknown\r\nAllocated Stack: unknown\r\nTotal Static RAM memory (data + bss): 39242 bytes\r\nTotal RAM memory (data + bss + heap + stack): 39242 bytes\r\nTotal Flash memory (text + data + misc): 163478 bytes\r\n```\r\n\r\nLater we get weird issues, in this case it's a hang in the CLI when some commands are executed.\r\n\r\nI know that right now we don't have a way of detecting memory overflow, unless something overflows linker defined section, but maybe adding available memory in `targets.json` both for RAM and FLASH would be good idea? It would let us to detect cases like that and save ourselves and our users a lot of time when debugging this kind of issues.\r\n\r\n@tommikas @VeliMattiLahtela "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4268",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4268/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4268/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4268/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4268",
    "id": 226009553,
    "number": 4268,
    "title": "How to Monitor CPU Usage of Thread Like FreeRTOS",
    "user": {
      "login": "nightseas",
      "id": 4987044,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4987044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nightseas",
      "html_url": "https://github.com/nightseas",
      "followers_url": "https://api.github.com/users/nightseas/followers",
      "following_url": "https://api.github.com/users/nightseas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightseas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nightseas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightseas/subscriptions",
      "organizations_url": "https://api.github.com/users/nightseas/orgs",
      "repos_url": "https://api.github.com/users/nightseas/repos",
      "events_url": "https://api.github.com/users/nightseas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nightseas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345118,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20rtos",
        "name": "component: rtos",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-03T14:41:17Z",
    "updated_at": "2017-05-04T10:07:33Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Question\r\n- Related issue: N/A\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n\r\n## Question\r\n\r\nHow to monitor Threads' CPU usage in mbed OS like FreeRTOS?\r\nI know it's basically measuring the run time, But how to get the idle thread run time, and is there any other time should be counted to calculate the whole system run time?\r\n\r\nThanks.\r\n\r\nFor an OS it's quite an important feature to monitor the CPU usage/utilization.\r\nHere's an example from FreeRTOS.\r\n![image](https://cloud.githubusercontent.com/assets/4987044/25665709/f6f14c0c-3050-11e7-9504-1f353972801b.png)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4247",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4247/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4247/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4247/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4247",
    "id": 225120643,
    "number": 4247,
    "title": "ublox_evk_odin_w2 need to drag and drop twice in order to flash properly",
    "user": {
      "login": "LiyouZhou",
      "id": 2660805,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2660805?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LiyouZhou",
      "html_url": "https://github.com/LiyouZhou",
      "followers_url": "https://api.github.com/users/LiyouZhou/followers",
      "following_url": "https://api.github.com/users/LiyouZhou/following{/other_user}",
      "gists_url": "https://api.github.com/users/LiyouZhou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LiyouZhou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LiyouZhou/subscriptions",
      "organizations_url": "https://api.github.com/users/LiyouZhou/orgs",
      "repos_url": "https://api.github.com/users/LiyouZhou/repos",
      "events_url": "https://api.github.com/users/LiyouZhou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LiyouZhou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 15,
    "created_at": "2017-04-28T15:48:30Z",
    "updated_at": "2018-05-22T06:58:38Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\nublox_evk_odin_w2 need to drag and drop twice in order to flash properly\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nublox_evk_odin_w2\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**DAPLink version:**\r\n0221\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4246",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4246/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4246/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4246/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4246",
    "id": 225105685,
    "number": 4246,
    "title": "Can't use TCPSockets over 6LoWPAN on others targets than K64F",
    "user": {
      "login": "pmancele",
      "id": 25764849,
      "avatar_url": "https://avatars0.githubusercontent.com/u/25764849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmancele",
      "html_url": "https://github.com/pmancele",
      "followers_url": "https://api.github.com/users/pmancele/followers",
      "following_url": "https://api.github.com/users/pmancele/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmancele/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmancele/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmancele/subscriptions",
      "organizations_url": "https://api.github.com/users/pmancele/orgs",
      "repos_url": "https://api.github.com/users/pmancele/repos",
      "events_url": "https://api.github.com/users/pmancele/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmancele/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 49,
    "created_at": "2017-04-28T14:55:39Z",
    "updated_at": "2017-07-06T10:35:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nSTM32L476\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**mbed-cli version:** \r\n1.0.0\r\n\r\n**Hardware**\r\nFirefly 6LoWPAN shield + STM32L476ZG\r\n \r\n**Expected behavior**\r\nWe are using the last version of mbed-os and tried to run a simple easy-connect example using 6LoWPAN. It worked well on the K64F, we can create a NetworkInterface, open a TCPSocket, connect to a website (\"linkedin.com\") and send a simple HTTP GET request.\r\n\r\nBut we did not achieve to make this work on any other MCU. Our main target is a STM32L476ZG. \r\nWith the same program, it connects sucessfully to the 6LoWPAN network, we can create a socket but we cant  connect to any website as the DNS requests are not working.\r\n\r\nBoth the K64F and the STM32L476 have the same main:\r\n ```c\r\n#include \"mbed.h\"\r\n#include \"easy-connect.h\"\r\n\r\nnsapi_error_t ret;\r\n\r\nTCPSocket socket;\r\nNetworkInterface* LoWPAN;\r\nint main()\r\n{\r\n\tLoWPAN = easy_connect(true);\r\n\tret = socket.open(LoWPAN);\r\n\tif (ret != NSAPI_ERROR_OK) {\r\n\t\tprintf(\"Error opening socket : %d\", ret);\r\n\t}\r\n\r\n\t//ret = socket.connect(\"2620:109:c002::6cae:a0a\",80);\r\n\tret = socket.connect(\"linkedin.com\",80);\r\n\tprintf(\"nsapi_error : %d \\n\", ret);\r\n\r\n\tif (ret == 0) {\r\n\t\tprintf(\"It's OK ! \\n\");\r\n\t}\r\n\telse {\r\n\t\tprintf(\"Failed ! \\n\");\r\n\t}\r\n}\r\n```\r\n**K64F output:**\r\n\r\n> [EasyConnect] Using Mesh\r\n[EasyConnect] Connecting to Mesh..\r\n[EasyConnect] Connected to Network successfully\r\n[EasyConnect] IP address 2001:470:1f13:af3:fec2:3d00:4:583\r\n[EasyConnect] MAC address fc:c2:3d:00:00:04:05:83\r\nnsapi_error : 0 \r\nIt's OK !\r\n\r\n**STM32 Output:**\r\n\r\n> [EasyConnect] Using Mesh\r\n[EasyConnect] Connecting to Mesh..\r\n[EasyConnect] Connected to Network successfully\r\n[EasyConnect] IP address 2001:470:1f13:af3:fec2:3d00:4:583\r\n[EasyConnect] MAC address fc:c2:3d:00:00:04:05:83\r\nnsapi_error : -3009 \r\nFailed\r\n\r\nThe **-3009** error is a DNS error. We debugged the program and the DNS packet seems to be built correctly but never sent by the firefly 6LoWPAN shield. \r\n```err = socket.sendto(SocketAddress(dns_servers[i], 53), packet, DNS_BUFFER_SIZE);``` indicate us that the DNS packet has been transmitted (size 512), but it seems it hasnt  as we cant see it with whireshark sniffing our IPv6 network.\r\n\r\n**If we use *socket.connect()* with an IPV6 address instead of a website address it is working both on K64F and STM32L476..**\r\n\r\nFinally we used mbed-trace both on the K64F and on the STM32L476. On the K64F there is no error reported by mbed trace during all the process, but on the STM32 we have this **ERROR** occuring several times:\r\n```\r\n[ERR ][mMCp]: MAC tx fail\r\n\r\n[DBG ][rplc]: Triggering parent selection due to ETX change on fc:c2:3d:00:00:04:df:8b\r\n\r\n[ERR ][6lAd]: MCPS Data fail by status 233\r\n```\r\n\r\nHow to fix it ? Have you any idea ?\r\n\r\nWe tried to use the same 6LoWPAN shied on NUCLEO_F401RE and NUCLEO_L152RE to try DNS resolution but we cant get it working. EasyConnect return -3012 error which is *NSAPI_ERROR_DEVICE_ERROR*."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4227",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4227/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4227/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4227/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4227",
    "id": 224337693,
    "number": 4227,
    "title": "[LPC15xx] Using UARTs at different baudrates can set conflicting fractional baud rate clocks",
    "user": {
      "login": "devanlai",
      "id": 1348448,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1348448?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/devanlai",
      "html_url": "https://github.com/devanlai",
      "followers_url": "https://api.github.com/users/devanlai/followers",
      "following_url": "https://api.github.com/users/devanlai/following{/other_user}",
      "gists_url": "https://api.github.com/users/devanlai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/devanlai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/devanlai/subscriptions",
      "organizations_url": "https://api.github.com/users/devanlai/orgs",
      "repos_url": "https://api.github.com/users/devanlai/repos",
      "events_url": "https://api.github.com/users/devanlai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/devanlai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-04-26T04:04:09Z",
    "updated_at": "2018-01-23T01:21:36Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nLPCXpresso1549\r\n\r\n**Toolchain:**\r\nAll toolchains\r\n\r\n**mbed-os sha:**\r\n450701f\r\n\r\n**Expected behavior**\r\nUsing multiple UARTs at baudrates that are not multiples of each other should generate the correct bit timing for each UART independent of the baudrate of other UARTs.\r\n\r\n**Actual behavior**\r\nCreating a second UART can affect the bit timing of existing UARTs, causing the bit timing to be incorrect. The `FRGCTRL` register is shared among all UARTs to set the common UART clock, but `serial_baud` updates `FRGCTRL` only for the most recent baudrate, which can invalidate the timing of any previously initialized UARTs.\r\n\r\n**Steps to reproduce**\r\nSample code with incorrect timing on serial1 (should be 115200):\r\n\r\n```\r\n#include \"mbed.h\"\r\n\r\nSerial serial1(D8, NC, 115200);\r\nSerial serial2(D9, NC, 100000);\r\n\r\nint main() {\r\n    while(1) {\r\n        serial1.putc('U');\r\n        serial2.putc('U');\r\n    }\r\n}\r\n```\r\n\r\nHere's the incorrect output from the above code when creating two serial objects. Note that the bit time is 8.56us, vs the expected nominal bit time of 8.68us.\r\n![lpc15xx-serial1-and-serial2](https://cloud.githubusercontent.com/assets/1348448/25417510/74b69132-29f9-11e7-8fe9-5f9a7e5dab11.png)\r\n\r\nSample code (correct timing, after removing serial2):\r\n```\r\n#include \"mbed.h\"\r\n\r\nSerial serial1(D8, NC, 115200);\r\nint main() {\r\n    while(1) {\r\n        serial1.putc('U');\r\n    }\r\n}\r\n```\r\n\r\nHere's the correct output using only a single serial object. Note the bit time is very close to 8.68us, as expected.\r\n![lpc15xx-serial1-only](https://cloud.githubusercontent.com/assets/1348448/25417558/b4e55b6c-29f9-11e7-995d-37f19eda3e4e.png)\r\n\r\n**My comments**\r\nI'm not sure if there's a good way to resolve this issue, since the only register that controls the baud rate that is not shared between all UARTs is `BRG`, which controls the integral clock divider for each UART. This makes it possible to have multiple UARTs that are multiples of the UART clock rate like 9600/19200/57600, but not to mix rates like 115200 and 1000000."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4222",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4222/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4222/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4222/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4222",
    "id": 224111752,
    "number": 4222,
    "title": "MCUXpresso: warnings in fsl_ headers - enum out of range",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-04-25T11:53:36Z",
    "updated_at": "2017-07-27T16:08:21Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Description\r\n- Type: Bug \r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nPossibly more targets, tested with K64F\r\n\r\n**Toolchain:**\r\nARM\r\n\r\n**meed-os sha:**\r\nmaster as it's today\r\n\r\n**Expected behavior**\r\nNo warnings\r\n\r\n**Actual behavior**\r\n\r\nThese are the warnings, they are seen multiple times for various compilation units.\r\n```\r\n[Warning] fsl_dspi.h@68,0:  #66-D: enumeration value is out of \"int\" range\r\n[Warning] fsl_dspi.h@75,0:  #66-D: enumeration value is out of \"int\" range\r\n[Warning] fsl_dspi.h@82,0:  #66-D: enumeration value is out of \"int\" range\r\n[Warning] fsl_dspi.h@88,0:  #66-D: enumeration value is out of \"int\" range\r\n[Warning] fsl_edma.h@145,0:  #66-D: enumeration value is out of \"int\" range\r\n[Warning] fsl_uart.h@159,0:  #66-D: enumeration value is out of \"int\" range\r\n```\r\n\r\n**Steps to reproduce**\r\nCompile blinky example, should see the warnings\r\n\r\ncc @mmahadevan108 - please can you  have a look, or the newer drivers might contain fix ?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4220",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4220/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4220/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4220/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4220",
    "id": 224076690,
    "number": 4220,
    "title": "I2C: stuck bus",
    "user": {
      "login": "chrissnow",
      "id": 3310276,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3310276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrissnow",
      "html_url": "https://github.com/chrissnow",
      "followers_url": "https://api.github.com/users/chrissnow/followers",
      "following_url": "https://api.github.com/users/chrissnow/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrissnow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrissnow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrissnow/subscriptions",
      "organizations_url": "https://api.github.com/users/chrissnow/orgs",
      "repos_url": "https://api.github.com/users/chrissnow/repos",
      "events_url": "https://api.github.com/users/chrissnow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrissnow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 14,
    "created_at": "2017-04-25T09:31:02Z",
    "updated_at": "2017-08-03T16:47:08Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: | Question\r\n\r\n---------------------------------------------------------------\r\n\r\n## Question\r\n\r\nHow should a stuck I2C bus be cleared in mbed? My current method of a calling NVIC_SystemReset() is a bit extreme!"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4213",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4213/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4213/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4213/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4213",
    "id": 223431063,
    "number": 4213,
    "title": "Build tools leak compiler process in CI",
    "user": {
      "login": "mazimkhan",
      "id": 13520658,
      "avatar_url": "https://avatars0.githubusercontent.com/u/13520658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mazimkhan",
      "html_url": "https://github.com/mazimkhan",
      "followers_url": "https://api.github.com/users/mazimkhan/followers",
      "following_url": "https://api.github.com/users/mazimkhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mazimkhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mazimkhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mazimkhan/subscriptions",
      "organizations_url": "https://api.github.com/users/mazimkhan/orgs",
      "repos_url": "https://api.github.com/users/mazimkhan/repos",
      "events_url": "https://api.github.com/users/mazimkhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mazimkhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 19,
    "created_at": "2017-04-21T16:17:12Z",
    "updated_at": "2017-11-09T17:08:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "# Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n# Bug\r\n\r\n**Target**\r\nK64F|??\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n## Expected behavior\r\n\r\nNo processes are orphaned from a compile process.\r\n\r\n## Actual behavior\r\nPlease see the screenshots:\r\n![mbed-cli-process-leak1](https://cloud.githubusercontent.com/assets/13520658/25286607/42a5e8fa-26b6-11e7-8c41-8300739bf704.png)\r\n![mbed-cli-process-leak2](https://cloud.githubusercontent.com/assets/13520658/25286608/42a62af4-26b6-11e7-8da8-d663c0e363eb.png)\r\n\r\n\r\nSuspended/Zombi arm-none-eabi-g++.exe prevent recursive deletion of workspace. Causing subsequent builds to fail.\r\n\r\n## Steps to reproduce\r\nSeen frequently on CI"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4194",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4194/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4194/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4194/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4194",
    "id": 222441883,
    "number": 4194,
    "title": "mbed os should not expose device unique IDs via MAC address",
    "user": {
      "login": "bremoran",
      "id": 2636227,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2636227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bremoran",
      "html_url": "https://github.com/bremoran",
      "followers_url": "https://api.github.com/users/bremoran/followers",
      "following_url": "https://api.github.com/users/bremoran/following{/other_user}",
      "gists_url": "https://api.github.com/users/bremoran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bremoran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bremoran/subscriptions",
      "organizations_url": "https://api.github.com/users/bremoran/orgs",
      "repos_url": "https://api.github.com/users/bremoran/repos",
      "events_url": "https://api.github.com/users/bremoran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bremoran/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-04-18T14:47:43Z",
    "updated_at": "2017-04-19T08:17:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F\r\n\r\n**mbed-os sha:**\r\n65adf446c52fa4e3045d12c761f23948d0d271fd\r\n\r\n**Expected behavior**\r\nmbed OS should use a non-reversible hashing function to transform any on-device unique ID\r\n\r\n**Actual behavior**\r\nmbed OS uses CRC16 to transform the unique ID into a MAC address.\r\n\r\nUsers of mbed OS may consider the on-chip unique ID to have sufficient entropy to act as a device-private secret. If mbed OS exposes the unique ID in any way without transforming it with a strong hashing function, it could expose some portion of the device-private secret.\r\n\r\nThe current implementation of `mbed_mac_address()` leaks information about the unique ID in a way that a user may not expect:\r\n\r\nhttps://github.com/ARMmbed/mbed-os/blob/920db8e4a33fb5c13ccda5f9a39d6434562bc956/targets/TARGET_Freescale/TARGET_MCUXpresso_MCUS/TARGET_MCU_K64F/TARGET_FRDM/mbed_overrides.c#L57-L59\r\n\r\nThis could reduce the potential entropy of a device-private secret from 128 bits to 80 bits. If the MAC address were calculated with a secure hash, such as SHA-256, this would not be a problem.\r\n\r\ncc @bulislaw @marcuschangarm "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4193",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4193/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4193/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4193/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4193",
    "id": 222323560,
    "number": 4193,
    "title": "mbed os 2.0, bind in UDPSocket",
    "user": {
      "login": "sstaub",
      "id": 6450325,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6450325?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sstaub",
      "html_url": "https://github.com/sstaub",
      "followers_url": "https://api.github.com/users/sstaub/followers",
      "following_url": "https://api.github.com/users/sstaub/following{/other_user}",
      "gists_url": "https://api.github.com/users/sstaub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sstaub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sstaub/subscriptions",
      "organizations_url": "https://api.github.com/users/sstaub/orgs",
      "repos_url": "https://api.github.com/users/sstaub/repos",
      "events_url": "https://api.github.com/users/sstaub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sstaub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-04-18T07:15:04Z",
    "updated_at": "2017-04-18T16:15:36Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Can you extend the UDPSocket API with an **int bind(const char *address, int port)** function in mbed os 2.0?\r\nMaybe that help me with a multicast problem described in #2766 \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4188",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4188/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4188/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4188/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4188",
    "id": 221870381,
    "number": 4188,
    "title": "Issue in Serial RX interrupt processing?",
    "user": {
      "login": "maiorfi-at-innovactive",
      "id": 13045653,
      "avatar_url": "https://avatars3.githubusercontent.com/u/13045653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maiorfi-at-innovactive",
      "html_url": "https://github.com/maiorfi-at-innovactive",
      "followers_url": "https://api.github.com/users/maiorfi-at-innovactive/followers",
      "following_url": "https://api.github.com/users/maiorfi-at-innovactive/following{/other_user}",
      "gists_url": "https://api.github.com/users/maiorfi-at-innovactive/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maiorfi-at-innovactive/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maiorfi-at-innovactive/subscriptions",
      "organizations_url": "https://api.github.com/users/maiorfi-at-innovactive/orgs",
      "repos_url": "https://api.github.com/users/maiorfi-at-innovactive/repos",
      "events_url": "https://api.github.com/users/maiorfi-at-innovactive/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maiorfi-at-innovactive/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 512448248,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20docs",
        "name": "component: docs",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-04-14T19:04:42Z",
    "updated_at": "2017-12-01T01:04:54Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO_F410RB, NUCLEO_F411RE\r\n\r\n**Toolchain:**\r\nARM\r\n\r\n**Toolchain version:**\r\n5.x\r\n\r\n**Expected behavior**\r\nled blinking when data received by serial RX channel\r\n\r\n**Actual behavior**\r\nprogram halts in HardFault_Handler when flushing serial backing stream\r\n\r\n**Steps to reproduce**\r\n\r\n```c++\r\n#include \"mbed.h\"\r\n\r\nDigitalOut led1(LED1);\r\n\r\nSerial pc(USBTX, USBRX);\r\n\r\nvoid callback_ex() {\r\n    // Note: you need to actually read from the serial to clear the RX interrupt\r\n    pc.getc();\r\n    led1 = !led1;\r\n}\r\n\r\nint main() {\r\n    pc.attach(&callback_ex);\r\n}\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4182",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4182/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4182/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4182/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4182",
    "id": 221351988,
    "number": 4182,
    "title": "Adding change directory ability to FileSystem",
    "user": {
      "login": "mbartling",
      "id": 5848519,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5848519?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mbartling",
      "html_url": "https://github.com/mbartling",
      "followers_url": "https://api.github.com/users/mbartling/followers",
      "following_url": "https://api.github.com/users/mbartling/following{/other_user}",
      "gists_url": "https://api.github.com/users/mbartling/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mbartling/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mbartling/subscriptions",
      "organizations_url": "https://api.github.com/users/mbartling/orgs",
      "repos_url": "https://api.github.com/users/mbartling/repos",
      "events_url": "https://api.github.com/users/mbartling/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mbartling/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-04-12T18:34:10Z",
    "updated_at": "2017-04-19T06:59:39Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n----------------------------------------------------------------\r\n## Enhancement\r\nhaving to prepend \"/sd/\" or \"/fs/\" to every filename is tedious and can lead to a bunch of polluted code. It would be nice to have the ability to change directories into the mounted root.\r\n\r\nfor example:\r\n\r\n```cpp\r\n#include \"mbed.h\"\r\n#include \"FATFileSystem.h\"\r\n#include \"HeapBlockDevice.h\"\r\n#include <stdio.h>\r\n#include <errno.h>\r\n\r\nHeapBlockDevice bd(128 * 512, 512);\r\nFATFileSystem fs(\"fs\");\r\n\r\n...\r\n\r\n  error = fs.mount(&bd, /*mount_as_root=*/ true);\r\n  return_error(error);\r\n\r\n  printf(\"Opening a new file, numbers.txt.\");\r\n  FILE* fd = fopen(\"numbers.txt\", \"w\");\r\n```\r\n\r\ncomments/concerns? @geky @theotherjimmy "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4181",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4181/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4181/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4181/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4181",
    "id": 221329205,
    "number": 4181,
    "title": "nRF51822 pstorage APIs are broken since mbed OS 5.2",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-04-12T17:05:44Z",
    "updated_at": "2017-11-09T17:08:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker\r\n\r\n## Bug\r\n\r\n**Target**\r\nnRF51-DK, also seen on Minewtech nRF51 and Minewtech nRF52\r\n\r\n**Toolchain:**\r\nGCC_ARM and ARMCC\r\n\r\n**Toolchain version:**\r\n4.9.3 and online compiler\r\n\r\n**meed-os sha:**\r\nThe problem is present in mbed OS 5.2.3 and 5.4.2, but not in mbed OS 5.1.5.\r\n\r\n**Expected behavior**\r\nTake https://github.com/roywant/EddystoneBeacon. Change the adv interval (3rd characteristic, has value 0x2bc), and persist. On mbed OS 5.1.5 this is persisted in persistent storage. mbed OS 5.2.3 does not persist.\r\n\r\nThe first call to `pstorage_store` goes fine, but then a call to `pstorage_update` will wipe out the flash... Just restart the board and inspect the persistence signature (not even required to power cut). I see that we used to get 2x `pstorageNotificationCallback` after updating, but now only one... Maybe that's a hint?\r\n\r\nI bisected the problem:\r\n\r\n```\r\ne67117b8eafb6dada5f0cc4c09e140c95a001cb3 is the first bad commit\r\ncommit e67117b8eafb6dada5f0cc4c09e140c95a001cb3\r\nAuthor: Andrzej Puzdrowski <andrzej.puzdrowski@nordicsemi.no>\r\nDate:   Tue Aug 23 08:52:32 2016 +0200\r\n\r\n    introduce the SDK nRF5 Peer manager into BLE security features\r\n\r\n    PM will be used for SoftDevices s13x, otherwise DM will be used.\r\n\r\n    Fix - security key distribution settings - Signing is not supported.\r\n\r\n    declare usage of encryption LTK and IRK if boonding enabled\r\n\r\n    deleted unused local reference to nRF5xGap class in bleGattcEventHandler.\r\n    fix PM internal bug (For gcc with -0s optimization an application fail to save a boonding data)\r\n    fuse redeclaration of PACKED macro in nRF5 SDK sources\r\n```\r\n\r\nSeems legit.\r\n\r\n@nvlsianpu "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4140",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4140/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4140/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4140/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4140",
    "id": 220525176,
    "number": 4140,
    "title": "TCP server don't update the ack num ",
    "user": {
      "login": "kyliuxing",
      "id": 14165205,
      "avatar_url": "https://avatars0.githubusercontent.com/u/14165205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kyliuxing",
      "html_url": "https://github.com/kyliuxing",
      "followers_url": "https://api.github.com/users/kyliuxing/followers",
      "following_url": "https://api.github.com/users/kyliuxing/following{/other_user}",
      "gists_url": "https://api.github.com/users/kyliuxing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kyliuxing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kyliuxing/subscriptions",
      "organizations_url": "https://api.github.com/users/kyliuxing/orgs",
      "repos_url": "https://api.github.com/users/kyliuxing/repos",
      "events_url": "https://api.github.com/users/kyliuxing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kyliuxing/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-04-10T02:55:00Z",
    "updated_at": "2017-05-16T07:08:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": " @kjbracey-arm\r\nhi  kjbracey-arm，\r\n    I met a issue when made TCP test. I built a TCP server on PC and make my device to connect it, they sent data to each other.\r\n    Device send two segments 77576223 ~ 77576649, 77576650 ~ 77578110, and PC ACK 77576223 firstly , then ack 77577683, but in lwip stack, 77577683 can't ack the second segments(6650 ~ 8110), lwip will retransmission it, but PC still ack 77577683 and device do retransmission one more time, it seems a dead loop, until reached the max retry times and device stop the socket.\r\n    So why the PC will ack a number 77577683(77577683 - 77576223 = 1460, is it related?) between the 77576650 ~ 77578110? why the PC don't update the ack num even PC receive the retransmission?  could you give some advice?\r\n  I make capture on PC by wireshark, so i'm sure PC received the retransmission packet.\r\n  By the way, i can't uploading attachment, is it has restriction?\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4127",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4127/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4127/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4127/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4127",
    "id": 219919546,
    "number": 4127,
    "title": "LWIP TCPSocket is losing packets when connection is closed right after the last packet",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-04-06T14:34:21Z",
    "updated_at": "2017-04-06T15:10:18Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n4.9.3\r\n\r\n**meed-os sha:**\r\n269f58d75b752a4e67a6a2d8c5c698635ffd6752\r\n\r\n**Expected behavior**\r\n\r\nThe Hue bridge closes the connection straight after returning a request. This is causing LWIP to drop packets. This issue does not show on ESP8266.\r\n\r\nHere's an example program:\r\n\r\n```cpp\r\n#include \"mbed.h\"\r\n#include \"easy-connect.h\"\r\n#include <string>\r\n\r\nSerial pc(USBTX, USBRX);\r\n\r\nint main() {\r\n    pc.baud(115200);\r\n    // Connect to the network (see mbed_app.json for the connectivity method used)\r\n    NetworkInterface *network = easy_connect(true);\r\n    if (!network) {\r\n        printf(\"Cannot connect to the network, see serial output\");\r\n        return 1;\r\n    }\r\n\r\n    TCPSocket socket;\r\n    socket.open(network);\r\n    socket.connect(\"192.168.1.10\", 80);\r\n\r\n    const char req[] = \"POST /api HTTP/1.1\\r\\nHost: 10.2.202.46\\r\\nContent-Length: 41\\r\\n\\r\\n{ \\\"devicetype\\\": \\\"mbed_hue#elektor_demo\\\" }\";\r\n\r\n    socket.send(req, sizeof(req));\r\n\r\n    uint8_t* buffer = (uint8_t*)malloc(8 * 1024);\r\n    uint8_t* orig_buffer = buffer;\r\n\r\n    size_t recv_ret = 0;\r\n\r\n    while ((recv_ret = socket.recv(buffer, 1024)) > 0) {\r\n        buffer += recv_ret;\r\n    }\r\n\r\n    printf(\"total bytes %d\\r\\n\", buffer - orig_buffer);\r\n\r\n    std::string blah((const char*)orig_buffer, static_cast<size_t>(buffer - orig_buffer));\r\n\r\n    printf(\"return value is:\\r\\n%s\\r\\n\", blah.c_str());\r\n\r\n\r\n    Thread::wait(osWaitForever);\r\n}\r\n```\r\n\r\nIf you press the 'link' button on the Hue bridge the program returns this:\r\n\r\n```\r\ntotal bytes 17\r\nreturn value is:\r\nHTTP/1.1 200 OK\r\n```\r\n\r\nThis is not correct. The bridge actually sends two TCP packets, one 17 bytes and another one 481 bytes. The ESP8266 driver does correctly receive two TCP packets... Somehow we're losing packets. When looking at the Wireshark logs we correctly see two TCP packets go by over the network interface, so it looks like an LWIP bug.\r\n\r\n@sg-  @matthewelse "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4120",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4120/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4120/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4120/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4120",
    "id": 219683100,
    "number": 4120,
    "title": "MAX32625MBED devices enumerate with same target ID .",
    "user": {
      "login": "studavekar",
      "id": 25986241,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25986241?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/studavekar",
      "html_url": "https://github.com/studavekar",
      "followers_url": "https://api.github.com/users/studavekar/followers",
      "following_url": "https://api.github.com/users/studavekar/following{/other_user}",
      "gists_url": "https://api.github.com/users/studavekar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/studavekar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/studavekar/subscriptions",
      "organizations_url": "https://api.github.com/users/studavekar/orgs",
      "repos_url": "https://api.github.com/users/studavekar/repos",
      "events_url": "https://api.github.com/users/studavekar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/studavekar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 550082561,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20maxim",
        "name": "devices: maxim",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-04-05T19:01:37Z",
    "updated_at": "2017-10-09T02:05:50Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug \r\n\r\nMAX32625MBED devices enumerate with same target ID , seems to cause duplicate comm port. This is blocking CI.\r\n```\r\n+---------------+----------------------+-------------+-------------+--------------------------------------------------+-----------------+\r\n| platform_name | platform_name_unique | mount_point | serial_port | target_id                                        | daplink_version |\r\n+---------------+----------------------+-------------+-------------+--------------------------------------------------+-----------------+\r\n| MAX32625MBED  | MAX32625MBED[0]      | D:          | COM11       | 04150000b08042ed00000000000000000000000097969904 | 0242            |\r\n| MAX32625MBED  | MAX32625MBED[1]      | E:          | COM11       | 04150000b08042ed00000000000000000000000097969904 | 0242            |\r\n+---------------+----------------------+-------------+-------------+--------------------------------------------------+-----------------+\r\n```\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nMAX32625MBED  \r\n\r\n**Toolchain:**\r\nNone\r\n\r\n**Toolchain version:**\r\nNone\r\n**mbed-cli version:** \r\nNone\r\n\r\n**meed-os sha:**\r\nNone\r\n\r\n**DAPLink version:**\r\n\r\nDAPLink Firmware - see https://mbed.com/daplink\r\nUnique ID: 04150000b08042ed00000000000000000000000097969904\r\nHIC ID: 97969904\r\nAuto Reset: 0\r\nAutomation allowed: 0\r\nDaplink Mode: Interface\r\nInterface Version: 0242\r\nBootloader Version: 0242\r\nGit SHA: 30ebdca8c6a1e044708b410b9beb99ba1a92cca5\r\nLocal Mods: 1\r\nUSB Interfaces: MSD, CDC, HID\r\nBootloader CRC: 0xa9f75799\r\nInterface CRC: 0x3d118a82\r\n\r\n**Expected behavior**\r\nIt should have unique target ID, and Unique comm port.\r\n\r\n**Actual behavior**\r\nIt has duplicate target ID, and duplicate comm port.\r\n\r\n**Steps to reproduce**\r\n\r\n1) Connect 2 MAX32625MBED devices \r\n2) run mbedls\r\n\r\n**Suggestion **\r\n\r\nProbably needs to implement \r\n\r\nhttps://github.com/mbedmicro/DAPLink/\r\n\r\nvoid read_unique_id(uint32_t *id);\r\nvoid create_unique_id(void);\r\n\r\n----------------------------------------------------------------\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4116",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4116/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4116/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4116/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4116",
    "id": 219544075,
    "number": 4116,
    "title": "NRF51_DK_BOOT completely different from NRF51_DK",
    "user": {
      "login": "PietKnaak",
      "id": 4178811,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4178811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PietKnaak",
      "html_url": "https://github.com/PietKnaak",
      "followers_url": "https://api.github.com/users/PietKnaak/followers",
      "following_url": "https://api.github.com/users/PietKnaak/following{/other_user}",
      "gists_url": "https://api.github.com/users/PietKnaak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PietKnaak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PietKnaak/subscriptions",
      "organizations_url": "https://api.github.com/users/PietKnaak/orgs",
      "repos_url": "https://api.github.com/users/PietKnaak/repos",
      "events_url": "https://api.github.com/users/PietKnaak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PietKnaak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515545581,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20ble",
        "name": "component: ble",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-04-05T10:56:57Z",
    "updated_at": "2017-04-19T06:58:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "We have an NRF51822 chip on which we want to enable FOTA. Code has been developed for the NRF51_DK and we try to switch to NRF51_DK_BOOT. \r\n\r\nThere we run into compiler errors. Little research shows that NRF51_DK is re-written while NRF51_DK_BOOT is not, and missing a lot of functionality.\r\n\r\nCan we easily make a new target base on NRF51_DK with FOTA support? What are  the risks? Or are we forced to downgrade our code to be compatible with NRF51_DK_BOOT (e.g. no spi async etc)?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4108",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4108/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4108/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4108/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4108",
    "id": 219219115,
    "number": 4108,
    "title": "Timer/Ticker/RTC/Thread issue on NRF51_DK and derived targets. Porting to custom board docs?",
    "user": {
      "login": "smarek",
      "id": 384824,
      "avatar_url": "https://avatars2.githubusercontent.com/u/384824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smarek",
      "html_url": "https://github.com/smarek",
      "followers_url": "https://api.github.com/users/smarek/followers",
      "following_url": "https://api.github.com/users/smarek/following{/other_user}",
      "gists_url": "https://api.github.com/users/smarek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smarek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smarek/subscriptions",
      "organizations_url": "https://api.github.com/users/smarek/orgs",
      "repos_url": "https://api.github.com/users/smarek/repos",
      "events_url": "https://api.github.com/users/smarek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smarek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 512448248,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20docs",
        "name": "component: docs",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-04-04T11:25:09Z",
    "updated_at": "2017-06-22T05:51:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Question\r\n- Related issue: #4026 #3857 #4016 #2598\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Question\r\n\r\n**Target**\r\nNRF51_DK / NRF51_CUSTOM\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n(GNU Tools for ARM Embedded Processors) 5.4.1 20160919 (release) [ARM/embedded-5-branch revision 240496]\r\n\r\n**mbed-cli version:** \r\n(1.0.0)\r\n\r\n**meed-os sha:**\r\n50b3418e4 Merge pull request #4025 from ARMmbed/release-candidate\r\n\r\n**Expected behavior**\r\nShould stabily run, blinking every 1 second on led1\r\n\r\n**Actual behavior**\r\nWill halt in range of 20 seconds and 5 minutes, after a while, will restart itself.\r\nMeanwhile it does not run stabily, but will have random delays between led blinks (visually I cannot recognize cpu hang from thread wait/wake-up timer issues)\r\n\r\n**Steps to reproduce**\r\n\r\nCode\r\n```cpp\r\n#include \"mbed.h\"\r\n\r\nThread led_blink1;\r\nDigitalOut led1(P0_8); // P0_21 for NRF51_DK\r\n\r\nvoid topledTick() {\r\n\twhile(1){\r\n\t\tled1 = !led1;\r\n\t\twait(1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tled_blink.start(callback(topledTick));\r\n\twhile (1) {\t}\r\n}\r\n```\r\n---------------------------------------------------------------\r\n\r\nWe've got NRF51_DK and custom board (with NRF51422 32K)\r\n\r\nUsing described code sample and build environment, this will result in code to hang (with leds on or off), and will restart itself after some time (which is much longer on custom boards than on DK)\r\n\r\nI've also tried doing the same example using PwmOut on such pin, and not using Thread but Tickers, but there I've struggled with issues described in referenced issues. Also when using just PwmOut, I've tried to remove RTOS (using `mbed-os/rtos/*` line in .mbedignore), and that did not resolve the issue.\r\n\r\n----------------------------------------------------------------\r\n\r\nWhat I'd like to know\r\n\r\n  1) Custom board uses DigitalOut on pin, which is part of Serial port (NRF51_DK PinNames.h RTS_PIN_NUMBER, CTS_PIN_NUMBER, TX_PIN_NUMBER, RX_PIN_NUMBER which should be LED1 through LED4). Is it possible that interrupt conflict (or something related to default mapping of those pins) will result in described problem?\r\n\r\n  2) There is, afaik, no documentation, on how to create a custom target board, with different pin-out, which would inherit from existing target, such as NRF51_DK. What I've done is, I've copied, under new names, folders `./targets/TARGET_NORDIC/TARGET_NRF5/TARGET_MCU_NRF51822_UNIFIED/TARGET_NRF51_DK` and `./targets/TARGET_NORDIC/TARGET_MCU_NRF51822/TARGET_NRF51_DK` to `TARGET_NRF51_CUSTOM` folders, in respective locations, and changed PinNames.h files (also I've copied and renamed target NRF51_DK within `targets.json` as `NRF51_CUSTOM` and removed not-available features in `device_has`). Is this correct proceedure ?\r\n\r\n  3) Simply changing the pin-out of target board is not possible, afaik, just by modifying `mbed_app.json` yotta config file, even though it's mentioned in DOCs that `config->hardware->pins` should be JSON-configurable ([source](https://docs.mbed.com/docs/mbed-hal-api/en/latest/api/md_pins.html)). Is it possible? If so, is there any more complete doc?\r\n\r\nSeems to me, that NRF51422/NRF51822 is in terrible state when using mbed-os, or is it just me?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4105",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4105/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4105/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4105/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4105",
    "id": 218934209,
    "number": 4105,
    "title": "EFM32: Synchronous serial write does not clear interrupts",
    "user": {
      "login": "seppestas",
      "id": 1408377,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1408377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seppestas",
      "html_url": "https://github.com/seppestas",
      "followers_url": "https://api.github.com/users/seppestas/followers",
      "following_url": "https://api.github.com/users/seppestas/following{/other_user}",
      "gists_url": "https://api.github.com/users/seppestas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seppestas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seppestas/subscriptions",
      "organizations_url": "https://api.github.com/users/seppestas/orgs",
      "repos_url": "https://api.github.com/users/seppestas/repos",
      "events_url": "https://api.github.com/users/seppestas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seppestas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 441187721,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20silicon%20labs",
        "name": "devices: silicon labs",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-04-03T13:31:58Z",
    "updated_at": "2017-04-04T08:40:53Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "## Bug\r\n\r\n**Target**\r\nEFM32 (tested on EFM32HG_STK3400 and EFM32LG_STK3600)\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n4.9.3\r\n\r\n**mbed-cli version:** \r\n1.0.0\r\n\r\n**meed-os sha:**\r\nf4864dc64\r\n\r\n**Expected behavior**\r\nWhen combining synchronous writes to serial (i.e `Serial.printf`, `Serial.puts` or `Serial.putc`) with asynchronous writes (i.e `Serial.write`) the asynchronous write is expected to work properly (assuming no race-conditions). This means the system is supposed to be able to go to a low power sleep mode when the data has been sent.\r\n\r\n**Actual behavior**\r\nWhen the data has been sent, the MCU does not go to a proper low-power sleep mode or something else is causing a higher-than-expected power consumption. Following scope image is taken from an EFM32HG_STK3400 dev board sending data using `Serial.printf` at boot and echoing received lines using Serial.write using the Low Energy UART:\r\n![bug on EFM32HG_STK3400](https://cloud.githubusercontent.com/assets/1408377/24610019/4eea8c48-187d-11e7-8969-3798e0e5da3a.png)\r\n\r\nThe same code on the EFM32LG_STK3600 target causes the same issue (with a slightly higher power consumption):\r\n![bug on EFM32LG_STK3600](https://cloud.githubusercontent.com/assets/1408377/24610166/d7242aec-187d-11e7-935a-69ff630fdf0b.png)\r\n\r\nWhen not sending the initial data using `Serial.printf` the issue does not occur (on EFM32LG_STK3600 board):\r\n![no printf on EFM32LG_STK3600](https://cloud.githubusercontent.com/assets/1408377/24610532/36a9dd1c-187f-11e7-8687-27d990e99932.png)\r\n\r\nAnd when using only synchronous writes the issue does not occur either:\r\n![puts on EFM32LG_STK3600](https://cloud.githubusercontent.com/assets/1408377/24610679/ca89ec84-187f-11e7-979b-31de0061eb8c.png)\r\n\r\n**Steps to reproduce**\r\n- Program following code on an EFM32 target, [make sure to compile using release target](https://github.com/ARMmbed/mbed-os/issues/4082):\r\n``` cpp\r\n#include \"mbed.h\"\r\n\r\n#define RX_BUFFER_SIZE 10\r\n\r\nDigitalOut led(LED0);\r\nSerial leuart(PD4, PD5);\r\nevent_callback_t serialEventCb;\r\nuint8_t rx_buf[RX_BUFFER_SIZE];\r\n\r\nvoid serialCb(int events) {\r\n    unsigned char i;\r\n    if(events & SERIAL_EVENT_RX_CHARACTER_MATCH) {\r\n        for(i = 0; i < RX_BUFFER_SIZE; i++) {\r\n            if(rx_buf[i] == '\\n') break;\r\n        }\r\n    } else if (events & SERIAL_EVENT_RX_COMPLETE) {\r\n        i = RX_BUFFER_SIZE - 1;\r\n    } else {\r\n        led = 1;\r\n    }\r\n    leuart.write(rx_buf, i+1, 0, 0);\r\n    leuart.read(rx_buf, RX_BUFFER_SIZE, serialEventCb, SERIAL_EVENT_RX_ALL, '\\n');\r\n}\r\n\r\nint main()\r\n{\r\n    leuart.printf(\"Hello, world\\r\\n\");\r\n\r\n    serialEventCb.attach(serialCb);\r\n    leuart.read(rx_buf, RX_BUFFER_SIZE, serialEventCb, SERIAL_EVENT_RX_ALL, '\\n');\r\n\r\n    while(true) {\r\n        sleep();\r\n    }\r\n    return 0;\r\n}\r\n```\r\n- Measure the current draw from the battery, make sure to put the current source select switch to `BAT` and to disconnect the debugger.\r\n- In scope images, current drawn was measured using a [µCurrent](https://www.eevblog.com/projects/ucurrent/) connected to Channel 1. Channel 2 was connected to pin `PD4`. The battery power was supplied by a 3V3 power supply.\r\n\r\n## Notes\r\n- 1mA in the scope images is actually 1µA. This is caused by the output unit of the µCurrent being set to 1mV/µA and the Scope using a 1X probe configuration (sadly X0.001 is not available on the Rigol DS1054).\r\n- The range of the µCurrent is limited to 1.5mV, so the maximum current that can be measured is 1500µA or 1.5mA.\r\n- When sending a new character to the MCU the power consumption seems to go down again."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4082",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4082/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4082/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4082/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4082",
    "id": 218261423,
    "number": 4082,
    "title": "EFM32: Sleep function does not cause the MCU to go to a sleep mode",
    "user": {
      "login": "seppestas",
      "id": 1408377,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1408377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seppestas",
      "html_url": "https://github.com/seppestas",
      "followers_url": "https://api.github.com/users/seppestas/followers",
      "following_url": "https://api.github.com/users/seppestas/following{/other_user}",
      "gists_url": "https://api.github.com/users/seppestas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seppestas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seppestas/subscriptions",
      "organizations_url": "https://api.github.com/users/seppestas/orgs",
      "repos_url": "https://api.github.com/users/seppestas/repos",
      "events_url": "https://api.github.com/users/seppestas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seppestas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-03-30T16:54:11Z",
    "updated_at": "2017-11-09T17:08:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "In mbed-os 5 and later versions of the mbed 2 SDK (aka mbed-dev), the `sleep()` function does not cause EFM32 MCUs to sleep properly, even when no sleep levels have been blocked.\r\n\r\nWhen testing on the EFM32 Happy Gecko 322 using the EFM32HG_STK3400 target the MCU still consumes 3.49mA at 3v3 when calling `sleep` in a loop. I was able to reproduce this in:\r\n- mbed-os 5 at f4864dc6429e1ff5474111d4e0f6bee36a759b1c\r\n- the pre-compiled mbed lib at 093f2bd7b9eb\r\n- mbed-dev revision d5399cc887bb\r\n\r\nI tested both on the STK3400 devkit and a custom breakout board for the EFM32HG322 MCU.\r\n\r\nUsing mbed-dev at revision d6373279a6f1 using a custom build script and the mbed online compiler I did not have this issue yet. I am still trying to build this revision using the mbed tools.\r\n\r\nI still plan to test on other EFM32 MCU's, but since a lot of code is shared I'm guessing the results will be similar.\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nEFM32\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n4.9.3\r\n\r\n**mbed-cli version:** \r\n1.0.0"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4068",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4068/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4068/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4068/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4068",
    "id": 217845097,
    "number": 4068,
    "title": "unstability with ethernet UDP connection, not detected by mbed tests on NUCLEO_F746NG",
    "user": {
      "login": "adustm",
      "id": 14051363,
      "avatar_url": "https://avatars0.githubusercontent.com/u/14051363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adustm",
      "html_url": "https://github.com/adustm",
      "followers_url": "https://api.github.com/users/adustm/followers",
      "following_url": "https://api.github.com/users/adustm/following{/other_user}",
      "gists_url": "https://api.github.com/users/adustm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adustm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adustm/subscriptions",
      "organizations_url": "https://api.github.com/users/adustm/orgs",
      "repos_url": "https://api.github.com/users/adustm/repos",
      "events_url": "https://api.github.com/users/adustm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adustm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-03-29T11:25:39Z",
    "updated_at": "2017-11-14T11:55:53Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Description\r\n- Type: Bug + Enhancement\r\n- Related issue: https://developer.mbed.org/questions/77138/EthernetInterface-unreliable-on-NUCLEO-F\r\n- Priority: Blocker \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\nCreate an UDP socket on the MCU board. Use an external UDPclient that sends messages every millisedoncs (or close to that). After a few seconds, the MCU will not answer to UDP client anymore.\r\n\r\nUse this example code: \r\n```\r\n#if !FEATURE_LWIP\r\n    #error [NOT_SUPPORTED] LWIP not supported for this target\r\n#endif\r\n\r\n#include \"mbed.h\"\r\n#include \"EthernetInterface.h\"\r\n#include \"TCPServer.h\"\r\n#include \"UDPSocket.h\"\r\n\r\n#define PORT 7\r\nint main() {\r\n    EthernetInterface eth;\r\n    SocketAddress client;\r\n    char buffer[256];\r\n \r\n    eth.connect(); \r\n    UDPSocket server;\r\n    server.open(&eth);\r\n \r\n    while ( server.bind(PORT) != 0);  \r\n    \r\n    while (true) {     \r\n        int n = server.recvfrom(&client, buffer, sizeof(buffer));       \r\n        if (n>0) {   \r\n          if (!strncmp(buffer,\"id\\n\",3)) {\r\n            server.sendto(client, \"hello\\n\", 6);\r\n          } else {\r\n            server.sendto(client, \"unknown\\n\", 8);\r\n          }      \r\n       }\r\n    }\r\n}\r\n```\r\n**Target**\r\nNUCLEO_F746ZG\r\n\r\n**Toolchain:**\r\nARM (other not tested)\r\n\r\n**Expected behavior**\r\nThe F746ZG should be able to keep working, even if it is missing some messages.\r\n\r\n**Actual behavior**\r\nOnce the F746 stops answering, it never work anymore until a RESET. I have exported the test in a debugger, it is not crashing, it is only in idle... so it is difficult to me to know what happened.\r\nI have made a lot of trials but I don't know how to debug that now... any help is welcome\r\n\r\n**Steps to reproduce**\r\ncf above code example + above link on developper.mbed.org\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nmbed-os tests have passed on this platform and did not detect any issue\r\nthe MCU is not really crashed somewhere, it is in idle -> how can I debug the threads ?\r\n\r\n**Suggested enhancement**\r\nCould you add a new test for that ?\r\nCould you explain how to debug threads ?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4067",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4067/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4067/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4067/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4067",
    "id": 217844052,
    "number": 4067,
    "title": "Too high static reservations for HEAP and STACK in most IAR builds",
    "user": {
      "login": "SeppoTakalo",
      "id": 3104794,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3104794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SeppoTakalo",
      "html_url": "https://github.com/SeppoTakalo",
      "followers_url": "https://api.github.com/users/SeppoTakalo/followers",
      "following_url": "https://api.github.com/users/SeppoTakalo/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeppoTakalo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SeppoTakalo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeppoTakalo/subscriptions",
      "organizations_url": "https://api.github.com/users/SeppoTakalo/orgs",
      "repos_url": "https://api.github.com/users/SeppoTakalo/repos",
      "events_url": "https://api.github.com/users/SeppoTakalo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SeppoTakalo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 447665028,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20iar",
        "name": "devices: iar",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-03-29T11:20:44Z",
    "updated_at": "2017-03-29T13:21:38Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n\r\nMost of the IAR build statically define the stack size to be something between 512 bytes to 24 kbytes.\r\nThis stack, however, is not even used in RTX case. Or maybe it is only used for interrupts.\r\nEach other threads define their own stack, something between 1kB - 6kB. There is no justification to use 24kB for boot stack.\r\n\r\nFor example, Ublox EVK Odin W2 defines this:\r\n```\r\n/*-Sizes-*/\r\n/*Heap 1/2 of ram and stack 1/8*/\r\ndefine symbol __ICFEDIT_size_cstack__ = 0x6000;\r\ndefine symbol __ICFEDIT_size_heap__   = 0x18000;\r\n```\r\n\r\nWhich means we have statically allocated 24kB for the stack that is mostly unused, and 98kB for the heap. Total 122880 kB. That leaves only 73 kB for other use (Threads, .data and .bss sections).\r\n\r\nThis is causing problems when getting anything to fit into these devices. This issues is mostly visible on IAR as it does not dynamically grow the heap.\r\n\r\nWe should align the stack sizes between boards. Some sensible number, with justification, should be used."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4057",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4057/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4057/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4057/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4057",
    "id": 217634386,
    "number": 4057,
    "title": "\"device_name\" not found - attempting to compile mbed-os-example-bootloader on NCS36510",
    "user": {
      "login": "jacobjohnson-ON",
      "id": 25211068,
      "avatar_url": "https://avatars1.githubusercontent.com/u/25211068?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacobjohnson-ON",
      "html_url": "https://github.com/jacobjohnson-ON",
      "followers_url": "https://api.github.com/users/jacobjohnson-ON/followers",
      "following_url": "https://api.github.com/users/jacobjohnson-ON/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacobjohnson-ON/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacobjohnson-ON/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacobjohnson-ON/subscriptions",
      "organizations_url": "https://api.github.com/users/jacobjohnson-ON/orgs",
      "repos_url": "https://api.github.com/users/jacobjohnson-ON/repos",
      "events_url": "https://api.github.com/users/jacobjohnson-ON/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacobjohnson-ON/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 509256180,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20onsemi",
        "name": "devices: onsemi",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2017-03-28T17:26:47Z",
    "updated_at": "2017-11-14T18:04:52Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Related issue: `#bootloader`\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNCS36510\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n5.06\r\n**mbed-cli version:** \r\n1.0.0\r\n\r\n**meed-os sha:**\r\n8b Merge pull request #8 from 0xc0170/fix_readme_blinky\r\n\r\n\r\n**DAPLink version:**\r\n0240\r\n\r\n**Expected behavior**\r\nExpected to compile and run the HAL and FlashIAP tests.  \r\n\r\n**Actual behavior**\r\n\r\nI created \"flash_api.c\" with is the generated flash blob located here: https://github.com/mbedmicro/DAPLink/blob/master/source/target/onsemi/ncs36510/flash_blob.c\r\n\r\nand followed the instructions on the slides here: https://github.com/ARMmbed/mbed-os-workshop-17q2/blob/master/Day%202%20-%20Entropy%2C%20Bootloader%2C%20Flash/04.%20mbed%20OS%20-%20Bootloader%2C%20Flash%20%2B%20Hands-on.pdf\r\n\r\n after adding the phrase \"bootloader_supported\": true to the \"targets.json\" file, the following was displayed upon compile:\r\n\r\nC:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader>mbed compile -v\r\n[mbed] Working path \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\r\n\" (program)\r\n[mbed] Exec \"python -u C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootload\r\ner\\mbed-os\\tools\\make.py -t GCC_ARM -m NCS36510 --source . --build .\\BUILD\\NCS36510\\GCC_ARM -v\" in C\r\n:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\\mbed-os\\tool\r\ns\\make.py\", line 285, in <module>\r\n    toolchain))\r\n  File \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\\mbed-os\\tool\r\ns\\build_api.py\", line 481, in build_project\r\n    build_profile=build_profile)\r\n  File \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\\mbed-os\\tool\r\ns\\build_api.py\", line 339, in prepare_toolchain\r\n    add_regions_to_profile(build_profile, config, cur_tc)\r\n  File \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\\mbed-os\\tool\r\ns\\build_api.py\", line 286, in add_regions_to_profile\r\n    regions = list(config.regions)\r\n  File \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\\mbed-os\\tool\r\ns\\config.py\", line 482, in regions\r\n    cmsis_part = Cache(False, False).index[self.target.device_name]\r\n  File \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\\mbed-os\\tool\r\ns\\targets.py\", line 256, in __getattr__\r\n    result = self.__getattr_helper(attrname)\r\n  File \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\\mbed-os\\tool\r\ns\\targets.py\", line 243, in __getattr_helper\r\n    % (attrname, self.name))\r\nAttributeError: Attribute 'device_name' not found in target 'NCS36510'\r\n[mbed] ERROR: \"python\" returned error code 1.\r\n[mbed] ERROR: Command \"python -u C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-exampl\r\ne-bootloader\\mbed-os\\tools\\make.py -t GCC_ARM -m NCS36510 --source . --build .\\BUILD\\NCS36510\\GCC_AR\r\nM -v\" in \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\"\r\n\r\n\r\n\r\n\r\n**adding \"device_name\": \"NCS36510\" yields this error:**\r\n\r\n\r\nC:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader>mbed compile -v\r\n[mbed] Working path \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\r\n\" (program)\r\n[mbed] Exec \"python -u C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootload\r\ner\\mbed-os\\tools\\make.py -t GCC_ARM -m NCS36510 --source . --build .\\BUILD\\NCS36510\\GCC_ARM -v\" in C\r\n:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\\mbed-os\\tool\r\ns\\make.py\", line 285, in <module>\r\n    toolchain))\r\n  File \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\\mbed-os\\tool\r\ns\\build_api.py\", line 481, in build_project\r\n    build_profile=build_profile)\r\n  File \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\\mbed-os\\tool\r\ns\\build_api.py\", line 339, in prepare_toolchain\r\n    add_regions_to_profile(build_profile, config, cur_tc)\r\n  File \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\\mbed-os\\tool\r\ns\\build_api.py\", line 286, in add_regions_to_profile\r\n    regions = list(config.regions)\r\n  File \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\\mbed-os\\tool\r\ns\\config.py\", line 482, in regions\r\n    cmsis_part = Cache(False, False).index[self.target.device_name]\r\nKeyError: 'NCS36510'\r\n[mbed] ERROR: \"python\" returned error code 1.\r\n[mbed] ERROR: Command \"python -u C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-exampl\r\ne-bootloader\\mbed-os\\tools\\make.py -t GCC_ARM -m NCS36510 --source . --build .\\BUILD\\NCS36510\\GCC_AR\r\nM -v\" in \"C:\\Users\\fg8dfg\\Documents\\MBED_Partner_Workshop\\Code\\mbed-os-example-bootloader\"\r\n\r\n\r\n**Steps to reproduce**\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4052",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4052/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4052/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4052/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4052",
    "id": 217559310,
    "number": 4052,
    "title": "NTP support",
    "user": {
      "login": "chrissnow",
      "id": 3310276,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3310276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrissnow",
      "html_url": "https://github.com/chrissnow",
      "followers_url": "https://api.github.com/users/chrissnow/followers",
      "following_url": "https://api.github.com/users/chrissnow/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrissnow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrissnow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrissnow/subscriptions",
      "organizations_url": "https://api.github.com/users/chrissnow/orgs",
      "repos_url": "https://api.github.com/users/chrissnow/repos",
      "events_url": "https://api.github.com/users/chrissnow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrissnow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-03-28T13:27:14Z",
    "updated_at": "2017-04-25T20:12:14Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "\r\n## Enhancement\r\n\r\nIt would be great if the Ethernet stack was extended to include NTP (or SNTP)\r\nLWIP already has some support for it.\r\n\r\nIdeally it would be as simple as declaring an instance of NTP and giving it a time server\r\nit would then keep the RTC(if there is one) in sync and then calls to time() would work."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3926",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3926/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3926/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3926/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3926",
    "id": 213429061,
    "number": 3926,
    "title": "NSAPI DNS queries failing for some websites",
    "user": {
      "login": "sarahmarshy",
      "id": 12565767,
      "avatar_url": "https://avatars3.githubusercontent.com/u/12565767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sarahmarshy",
      "html_url": "https://github.com/sarahmarshy",
      "followers_url": "https://api.github.com/users/sarahmarshy/followers",
      "following_url": "https://api.github.com/users/sarahmarshy/following{/other_user}",
      "gists_url": "https://api.github.com/users/sarahmarshy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sarahmarshy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sarahmarshy/subscriptions",
      "organizations_url": "https://api.github.com/users/sarahmarshy/orgs",
      "repos_url": "https://api.github.com/users/sarahmarshy/repos",
      "events_url": "https://api.github.com/users/sarahmarshy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sarahmarshy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 431602819,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/closed_in_jira",
        "name": "closed_in_jira",
        "color": "ededed",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-03-10T19:23:11Z",
    "updated_at": "2017-06-27T18:09:19Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug \r\n- Related issue: https://github.com/ARMmbed/mbed-os-example-client/issues/205\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**meed-os sha:**\r\n88a4baa Merge pull request #3902 from mazimkhan/master\r\n\r\n**Steps to reproduce**\r\nRun this simple program:\r\n```\r\n#include \"mbed.h\"\r\n#include \"TCPSocket.h\"\r\n#include \"ESP8266Interface.h\"\r\n\r\nESP8266Interface wifi(MBED_CONF_APP_WIFI_TX, MBED_CONF_APP_WIFI_RX);\r\n\r\nint main()\r\n{\r\n    printf(\"WiFi example\\r\\n\\r\\n\");\r\n\r\n    printf(\"\\r\\nConnecting...\\r\\n\");\r\n    int ret = wifi.connect(MBED_CONF_APP_WIFI_SSID, MBED_CONF_APP_WIFI_PASSWORD, NSAPI_SECURITY_WPA_WPA2);\r\n    if (ret != 0) {\r\n        printf(\"\\r\\nConnection error\\r\\n\");\r\n        return -1;\r\n    }\r\n\r\n    printf(\"Success\\r\\n\\r\\n\");\r\n\r\n    TCPSocket socket;\r\n\r\n    socket.open(&wifi);\r\n    ret = socket.connect(\"www.arm.com\", 80);\r\n    printf(\"%d\\r\\n\", ret);\r\n\r\n    wifi.disconnect();\r\n\r\n    printf(\"\\r\\nDone\\r\\n\");\r\n}\r\n```\r\n\r\nGet this output:\r\n```\r\nWiFi example\r\n\r\n\r\nConnecting...\r\nSuccess\r\n\r\n-3009\r\n\r\nDone\r\n```\r\n-3009 indicates connection to address failed. Looking deeper, it fails at the DNS resolution step.\r\n\r\nHowever, if you try to connect to google.com, you get this output: \r\n```\r\nWiFi example\r\n\r\n\r\nConnecting...\r\nSuccess\r\n\r\n0\r\n\r\nDone\r\n```\r\n\r\nThis seems to also be affecting mbed-client behavior -  https://github.com/ARMmbed/mbed-os-example-client/issues/205.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3919",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3919/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3919/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3919/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3919",
    "id": 213305697,
    "number": 3919,
    "title": "mbed-os export to gnuarmeclipse doesn't build",
    "user": {
      "login": "bulislaw",
      "id": 107253,
      "avatar_url": "https://avatars2.githubusercontent.com/u/107253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bulislaw",
      "html_url": "https://github.com/bulislaw",
      "followers_url": "https://api.github.com/users/bulislaw/followers",
      "following_url": "https://api.github.com/users/bulislaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/bulislaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bulislaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bulislaw/subscriptions",
      "organizations_url": "https://api.github.com/users/bulislaw/orgs",
      "repos_url": "https://api.github.com/users/bulislaw/repos",
      "events_url": "https://api.github.com/users/bulislaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bulislaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 46,
    "created_at": "2017-03-10T10:39:42Z",
    "updated_at": "2017-07-19T21:44:52Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nEFM32GG_STJ3700\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\nI'm trying to export some tests as a mbed OS application to debug them in eclipse:\r\n```\r\ncp TESTS/mbedmicro-rtos-mbed/threads/* .\r\nmbed export -m EFM32GG_STK3700 -i gnuarmeclipse\r\n```\r\nThe build works using mbed cli but fails using eclipse:\r\n\r\n```\r\n10:35:43 **** Clean-only build of configuration Debug for project mbed-os ****\r\nmake -j3 mbedclean \r\nrm -rf  ./tools/data/rpc/class.o  ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_acmp.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_adc.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_aes.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_assert.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_burtc.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_cmu.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_core.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_cryotimer.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_crypto.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_dac.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_dbg.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_dma.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_ebi.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_emu.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_gpcrc.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_gpio.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_i2c.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_idac.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_int.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_lcd.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_ldma.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_lesense.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_letimer.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_leuart.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_mpu.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_msc.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_opamp.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_pcnt.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_prs.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_rmu.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_rtc.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_rtcc.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_system.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_timer.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_usart.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_vcmp.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_wdog.o  ./targets/TARGET_Silicon_Labs/TARGET_EFM32/common/mbed_overrides.o  ./targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device/TARGET_1024K/TOOLCHAIN_GCC_ARM/startup_efm32gg.o  ./targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device/system_efm32gg.o  ./targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/PeripheralPins.o  ./targets/TARGET_Silicon_Labs/TARGET_EFM32/analogin_api.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/analogout_api.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/dma_api.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/gpio_api.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/gpio_irq_api.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/i2c_api.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/lp_ticker.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/pinmap.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/pinmap_function.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/port_api.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/pwmout_api.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/rtc_api.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/serial_api.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/sleep.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/spi_api.o ./targets/TARGET_Silicon_Labs/TARGET_EFM32/us_ticker.o  ./rtos/rtx2/TARGET_CORTEX_M/TARGET_M3/TOOLCHAIN_GCC/irq_cm3.o  ./rtos/rtx2/TARGET_CORTEX_M/RTX_Config.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_delay.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_evflags.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_evr.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_kernel.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_lib.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_memory.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_mempool.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_msgqueue.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_mutex.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_semaphore.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_system.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_thread.o ./rtos/rtx2/TARGET_CORTEX_M/rtx_timer.o  ./rtos/Mutex.o ./rtos/Semaphore.o ./rtos/Thread.o ./rtos/mbed_boot.o ./rtos/mbed_rtx_handlers.o ./rtos/rtos_idle.o  ./platform/CallChain.o ./platform/mbed_alloc_wrappers.o ./platform/mbed_application.o ./platform/mbed_assert.o ./platform/mbed_board.o ./platform/mbed_critical.o ./platform/mbed_error.o ./platform/mbed_interface.o ./platform/mbed_mem_trace.o ./platform/mbed_retarget.o ./platform/mbed_rtc_time.o ./platform/mbed_semihost_api.o ./platform/mbed_stats.o ./platform/mbed_wait_api_no_rtos.o ./platform/mbed_wait_api_rtos.o  ./hal/mbed_gpio.o ./hal/mbed_lp_ticker_api.o ./hal/mbed_pinmap_common.o ./hal/mbed_ticker_api.o ./hal/mbed_us_ticker_api.o  ./features/netsocket/NetworkInterface.o ./features/netsocket/NetworkStack.o ./features/netsocket/Socket.o ./features/netsocket/SocketAddress.o ./features/netsocket/TCPServer.o ./features/netsocket/TCPSocket.o ./features/netsocket/UDPSocket.o ./features/netsocket/WiFiAccessPoint.o ./features/netsocket/nsapi_dns.o  ./features/mbedtls/src/aes.o ./features/mbedtls/src/aesni.o ./features/mbedtls/src/arc4.o ./features/mbedtls/src/asn1parse.o ./features/mbedtls/src/asn1write.o ./features/mbedtls/src/base64.o ./features/mbedtls/src/bignum.o ./features/mbedtls/src/blowfish.o ./features/mbedtls/src/camellia.o ./features/mbedtls/src/ccm.o ./features/mbedtls/src/certs.o ./features/mbedtls/src/cipher.o ./features/mbedtls/src/cipher_wrap.o ./features/mbedtls/src/cmac.o ./features/mbedtls/src/ctr_drbg.o ./features/mbedtls/src/debug.o ./features/mbedtls/src/des.o ./features/mbedtls/src/dhm.o ./features/mbedtls/src/ecdh.o ./features/mbedtls/src/ecdsa.o ./features/mbedtls/src/ecjpake.o ./features/mbedtls/src/ecp.o ./features/mbedtls/src/ecp_curves.o ./features/mbedtls/src/entropy.o ./features/mbedtls/src/entropy_poll.o ./features/mbedtls/src/error.o ./features/mbedtls/src/gcm.o ./features/mbedtls/src/havege.o ./features/mbedtls/src/hmac_drbg.o ./features/mbedtls/src/md.o ./features/mbedtls/src/md2.o ./features/mbedtls/src/md4.o ./features/mbedtls/src/md5.o ./features/mbedtls/src/md_wrap.o ./features/mbedtls/src/memory_buffer_alloc.o ./features/mbedtls/src/net_sockets.o ./features/mbedtls/src/oid.o ./features/mbedtls/src/padlock.o ./features/mbedtls/src/pem.o ./features/mbedtls/src/pk.o ./features/mbedtls/src/pk_wrap.o ./features/mbedtls/src/pkcs11.o ./features/mbedtls/src/pkcs12.o ./features/mbedtls/src/pkcs5.o ./features/mbedtls/src/pkparse.o ./features/mbedtls/src/pkwrite.o ./features/mbedtls/src/platform.o ./features/mbedtls/src/ripemd160.o ./features/mbedtls/src/rsa.o ./features/mbedtls/src/sha1.o ./features/mbedtls/src/sha256.o ./features/mbedtls/src/sha512.o ./features/mbedtls/src/ssl_cache.o ./features/mbedtls/src/ssl_ciphersuites.o ./features/mbedtls/src/ssl_cli.o ./features/mbedtls/src/ssl_cookie.o ./features/mbedtls/src/ssl_srv.o ./features/mbedtls/src/ssl_ticket.o ./features/mbedtls/src/ssl_tls.o ./features/mbedtls/src/threading.o ./features/mbedtls/src/timing.o ./features/mbedtls/src/version.o ./features/mbedtls/src/version_features.o ./features/mbedtls/src/x509.o ./features/mbedtls/src/x509_create.o ./features/mbedtls/src/x509_crl.o ./features/mbedtls/src/x509_crt.o ./features/mbedtls/src/x509_csr.o ./features/mbedtls/src/x509write_crt.o ./features/mbedtls/src/x509write_csr.o ./features/mbedtls/src/xtea.o  ./features/mbedtls/platform/src/mbed_trng.o  ./features/frameworks/utest/source/unity_handler.o ./features/frameworks/utest/source/utest_case.o ./features/frameworks/utest/source/utest_default_handlers.o ./features/frameworks/utest/source/utest_greentea_handlers.o ./features/frameworks/utest/source/utest_harness.o ./features/frameworks/utest/source/utest_shim.o ./features/frameworks/utest/source/utest_stack_trace.o ./features/frameworks/utest/source/utest_types.o  ./features/frameworks/utest/mbed-utest-shim.o  ./features/frameworks/unity/source/unity.o  ./features/frameworks/greentea-client/source/greentea_metrics.o ./features/frameworks/greentea-client/source/greentea_serial.o ./features/frameworks/greentea-client/source/greentea_test_env.o  ./features/filesystem/fat/ChaN/ccsbcs.o ./features/filesystem/fat/ChaN/ff.o  ./features/filesystem/fat/FATFileSystem.o  ./features/filesystem/bd/ChainingBlockDevice.o ./features/filesystem/bd/HeapBlockDevice.o ./features/filesystem/bd/SlicingBlockDevice.o  ./features/filesystem/Dir.o ./features/filesystem/File.o ./features/filesystem/FileSystem.o  ./events/equeue/equeue.o ./events/equeue/equeue_mbed.o ./events/equeue/equeue_posix.o  ./events/EventQueue.o  ./drivers/AnalogIn.o ./drivers/BusIn.o ./drivers/BusInOut.o ./drivers/BusOut.o ./drivers/CAN.o ./drivers/Ethernet.o ./drivers/FileBase.o ./drivers/FilePath.o ./drivers/FileSystemLike.o ./drivers/FlashIAP.o ./drivers/I2C.o ./drivers/I2CSlave.o ./drivers/InterruptIn.o ./drivers/InterruptManager.o ./drivers/LocalFileSystem.o ./drivers/RawSerial.o ./drivers/SPI.o ./drivers/SPISlave.o ./drivers/Serial.o ./drivers/SerialBase.o ./drivers/Stream.o ./drivers/Ticker.o ./drivers/Timeout.o ./drivers/Timer.o ./drivers/TimerEvent.o  ./TESTS/storage_abstraction/basicAPI/basicAPI.o  ./TESTS/network/wifi/main.o  ./TESTS/netsocket/ip_parsing/main.o  ./TESTS/mbedtls/selftest/main.o  ./TESTS/mbedmicro-rtos-mbed/threads/main.o  ./TESTS/mbedmicro-rtos-mbed/signals/main.o  ./TESTS/mbedmicro-rtos-mbed/semaphore/main.o  ./TESTS/mbedmicro-rtos-mbed/queue/main.o  ./TESTS/mbedmicro-rtos-mbed/mutex/main.o  ./TESTS/mbedmicro-rtos-mbed/malloc/main.o  ./TESTS/mbedmicro-rtos-mbed/isr/main.o  ./TESTS/mbedmicro-rtos-mbed/basic/main.o  ./TESTS/mbedmicro-mbed/static_assert/main.o ./TESTS/mbedmicro-mbed/static_assert/test_c.o ./TESTS/mbedmicro-mbed/static_assert/test_cpp.o  ./TESTS/mbedmicro-mbed/div/main.o  ./TESTS/mbedmicro-mbed/cpp/main.o  ./TESTS/mbedmicro-mbed/call_before_main/main.o  ./TESTS/mbedmicro-mbed/attributes/attributes.o ./TESTS/mbedmicro-mbed/attributes/main.o ./TESTS/mbedmicro-mbed/attributes/weak.o  ./TESTS/mbed_hal/lp_ticker/main.o  ./TESTS/mbed_hal/flash/functional_tests/main.o  ./TESTS/mbed_functional/functionpointer/main.o  ./TESTS/mbed_functional/callback_small/main.o  ./TESTS/mbed_functional/callback_big/main.o  ./TESTS/mbed_functional/callback/main.o  ./TESTS/mbed_drivers/wait_us/main.o  ./TESTS/mbed_drivers/timeout/main.o  ./TESTS/mbed_drivers/ticker/main.o  ./TESTS/mbed_drivers/stl_features/main.o  ./TESTS/mbed_drivers/stats/main.o  ./TESTS/mbed_drivers/rtc/main.o  ./TESTS/mbed_drivers/race_test/main.o  ./TESTS/mbed_drivers/mem_trace/main.o  ./TESTS/mbed_drivers/lp_timeout/main.o  ./TESTS/mbed_drivers/generic_tests/main.o  ./TESTS/mbed_drivers/flashiap/main.o  ./TESTS/mbed_drivers/echo/main.o  ./TESTS/mbed_drivers/dev_null/main.o  ./TESTS/mbed_drivers/c_strings/main.o  ./TESTS/integration/basic/main.o  ./TESTS/events/timing/main.o  ./TESTS/events/queue/main.o \r\nrm -rf  ./targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device/TARGET_1024K/TOOLCHAIN_GCC_ARM/startup_efm32gg.d  ./rtos/rtx2/TARGET_CORTEX_M/TARGET_M3/TOOLCHAIN_GCC/irq_cm3.d  ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_acmp.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_adc.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_aes.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_assert.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_burtc.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_cmu.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_core.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_cryotimer.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_crypto.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_dac.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_dbg.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_dma.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_ebi.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_emu.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_gpcrc.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_gpio.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_i2c.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_idac.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_int.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_lcd.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_ldma.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_lesense.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_letimer.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_leuart.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_mpu.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_msc.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_opamp.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_pcnt.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_prs.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_rmu.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_rtc.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_rtcc.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_system.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_timer.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_usart.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_vcmp.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_wdog.d  ./targets/TARGET_Silicon_Labs/TARGET_EFM32/common/mbed_overrides.d  ./targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device/system_efm32gg.d  ./targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/PeripheralPins.d  ./targets/TARGET_Silicon_Labs/TARGET_EFM32/analogin_api.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/analogout_api.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/dma_api.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/gpio_api.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/gpio_irq_api.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/i2c_api.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/lp_ticker.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/pinmap.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/pinmap_function.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/port_api.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/pwmout_api.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/rtc_api.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/serial_api.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/sleep.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/spi_api.d ./targets/TARGET_Silicon_Labs/TARGET_EFM32/us_ticker.d  ./rtos/rtx2/TARGET_CORTEX_M/RTX_Config.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_delay.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_evflags.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_evr.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_kernel.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_lib.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_memory.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_mempool.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_msgqueue.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_mutex.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_semaphore.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_system.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_thread.d ./rtos/rtx2/TARGET_CORTEX_M/rtx_timer.d  ./rtos/mbed_boot.d ./rtos/mbed_rtx_handlers.d ./rtos/rtos_idle.d  ./platform/mbed_application.d ./platform/mbed_assert.d ./platform/mbed_board.d ./platform/mbed_critical.d ./platform/mbed_error.d ./platform/mbed_interface.d ./platform/mbed_mem_trace.d ./platform/mbed_semihost_api.d ./platform/mbed_stats.d ./platform/mbed_wait_api_no_rtos.d  ./hal/mbed_gpio.d ./hal/mbed_lp_ticker_api.d ./hal/mbed_pinmap_common.d ./hal/mbed_ticker_api.d ./hal/mbed_us_ticker_api.d  ./features/mbedtls/src/aes.d ./features/mbedtls/src/aesni.d ./features/mbedtls/src/arc4.d ./features/mbedtls/src/asn1parse.d ./features/mbedtls/src/asn1write.d ./features/mbedtls/src/base64.d ./features/mbedtls/src/bignum.d ./features/mbedtls/src/blowfish.d ./features/mbedtls/src/camellia.d ./features/mbedtls/src/ccm.d ./features/mbedtls/src/certs.d ./features/mbedtls/src/cipher.d ./features/mbedtls/src/cipher_wrap.d ./features/mbedtls/src/cmac.d ./features/mbedtls/src/ctr_drbg.d ./features/mbedtls/src/debug.d ./features/mbedtls/src/des.d ./features/mbedtls/src/dhm.d ./features/mbedtls/src/ecdh.d ./features/mbedtls/src/ecdsa.d ./features/mbedtls/src/ecjpake.d ./features/mbedtls/src/ecp.d ./features/mbedtls/src/ecp_curves.d ./features/mbedtls/src/entropy.d ./features/mbedtls/src/entropy_poll.d ./features/mbedtls/src/error.d ./features/mbedtls/src/gcm.d ./features/mbedtls/src/havege.d ./features/mbedtls/src/hmac_drbg.d ./features/mbedtls/src/md.d ./features/mbedtls/src/md2.d ./features/mbedtls/src/md4.d ./features/mbedtls/src/md5.d ./features/mbedtls/src/md_wrap.d ./features/mbedtls/src/memory_buffer_alloc.d ./features/mbedtls/src/net_sockets.d ./features/mbedtls/src/oid.d ./features/mbedtls/src/padlock.d ./features/mbedtls/src/pem.d ./features/mbedtls/src/pk.d ./features/mbedtls/src/pk_wrap.d ./features/mbedtls/src/pkcs11.d ./features/mbedtls/src/pkcs12.d ./features/mbedtls/src/pkcs5.d ./features/mbedtls/src/pkparse.d ./features/mbedtls/src/pkwrite.d ./features/mbedtls/src/platform.d ./features/mbedtls/src/ripemd160.d ./features/mbedtls/src/rsa.d ./features/mbedtls/src/sha1.d ./features/mbedtls/src/sha256.d ./features/mbedtls/src/sha512.d ./features/mbedtls/src/ssl_cache.d ./features/mbedtls/src/ssl_ciphersuites.d ./features/mbedtls/src/ssl_cli.d ./features/mbedtls/src/ssl_cookie.d ./features/mbedtls/src/ssl_srv.d ./features/mbedtls/src/ssl_ticket.d ./features/mbedtls/src/ssl_tls.d ./features/mbedtls/src/threading.d ./features/mbedtls/src/timing.d ./features/mbedtls/src/version.d ./features/mbedtls/src/version_features.d ./features/mbedtls/src/x509.d ./features/mbedtls/src/x509_create.d ./features/mbedtls/src/x509_crl.d ./features/mbedtls/src/x509_crt.d ./features/mbedtls/src/x509_csr.d ./features/mbedtls/src/x509write_crt.d ./features/mbedtls/src/x509write_csr.d ./features/mbedtls/src/xtea.d  ./features/mbedtls/platform/src/mbed_trng.d  ./features/frameworks/unity/source/unity.d  ./events/equeue/equeue.d ./events/equeue/equeue_posix.d  ./TESTS/mbedmicro-mbed/static_assert/test_c.d  ./TESTS/mbedmicro-mbed/attributes/attributes.d ./TESTS/mbedmicro-mbed/attributes/weak.d  ./tools/data/rpc/class.d  ./rtos/Mutex.d ./rtos/Semaphore.d ./rtos/Thread.d  ./platform/CallChain.d ./platform/mbed_alloc_wrappers.d ./platform/mbed_retarget.d ./platform/mbed_rtc_time.d ./platform/mbed_wait_api_rtos.d  ./features/netsocket/NetworkInterface.d ./features/netsocket/NetworkStack.d ./features/netsocket/Socket.d ./features/netsocket/SocketAddress.d ./features/netsocket/TCPServer.d ./features/netsocket/TCPSocket.d ./features/netsocket/UDPSocket.d ./features/netsocket/WiFiAccessPoint.d ./features/netsocket/nsapi_dns.d  ./features/frameworks/utest/source/unity_handler.d ./features/frameworks/utest/source/utest_case.d ./features/frameworks/utest/source/utest_default_handlers.d ./features/frameworks/utest/source/utest_greentea_handlers.d ./features/frameworks/utest/source/utest_harness.d ./features/frameworks/utest/source/utest_shim.d ./features/frameworks/utest/source/utest_stack_trace.d ./features/frameworks/utest/source/utest_types.d  ./features/frameworks/utest/mbed-utest-shim.d  ./features/frameworks/greentea-client/source/greentea_metrics.d ./features/frameworks/greentea-client/source/greentea_serial.d ./features/frameworks/greentea-client/source/greentea_test_env.d  ./features/filesystem/fat/ChaN/ccsbcs.d ./features/filesystem/fat/ChaN/ff.d  ./features/filesystem/fat/FATFileSystem.d  ./features/filesystem/bd/ChainingBlockDevice.d ./features/filesystem/bd/HeapBlockDevice.d ./features/filesystem/bd/SlicingBlockDevice.d  ./features/filesystem/Dir.d ./features/filesystem/File.d ./features/filesystem/FileSystem.d  ./events/equeue/equeue_mbed.d  ./events/EventQueue.d  ./drivers/AnalogIn.d ./drivers/BusIn.d ./drivers/BusInOut.d ./drivers/BusOut.d ./drivers/CAN.d ./drivers/Ethernet.d ./drivers/FileBase.d ./drivers/FilePath.d ./drivers/FileSystemLike.d ./drivers/FlashIAP.d ./drivers/I2C.d ./drivers/I2CSlave.d ./drivers/InterruptIn.d ./drivers/InterruptManager.d ./drivers/LocalFileSystem.d ./drivers/RawSerial.d ./drivers/SPI.d ./drivers/SPISlave.d ./drivers/Serial.d ./drivers/SerialBase.d ./drivers/Stream.d ./drivers/Ticker.d ./drivers/Timeout.d ./drivers/Timer.d ./drivers/TimerEvent.d  ./TESTS/storage_abstraction/basicAPI/basicAPI.d  ./TESTS/network/wifi/main.d  ./TESTS/netsocket/ip_parsing/main.d  ./TESTS/mbedtls/selftest/main.d  ./TESTS/mbedmicro-rtos-mbed/threads/main.d  ./TESTS/mbedmicro-rtos-mbed/signals/main.d  ./TESTS/mbedmicro-rtos-mbed/semaphore/main.d  ./TESTS/mbedmicro-rtos-mbed/queue/main.d  ./TESTS/mbedmicro-rtos-mbed/mutex/main.d  ./TESTS/mbedmicro-rtos-mbed/malloc/main.d  ./TESTS/mbedmicro-rtos-mbed/isr/main.d  ./TESTS/mbedmicro-rtos-mbed/basic/main.d  ./TESTS/mbedmicro-mbed/static_assert/main.d ./TESTS/mbedmicro-mbed/static_assert/test_cpp.d  ./TESTS/mbedmicro-mbed/div/main.d  ./TESTS/mbedmicro-mbed/cpp/main.d  ./TESTS/mbedmicro-mbed/call_before_main/main.d  ./TESTS/mbedmicro-mbed/attributes/main.d  ./TESTS/mbed_hal/lp_ticker/main.d  ./TESTS/mbed_hal/flash/functional_tests/main.d  ./TESTS/mbed_functional/functionpointer/main.d  ./TESTS/mbed_functional/callback_small/main.d  ./TESTS/mbed_functional/callback_big/main.d  ./TESTS/mbed_functional/callback/main.d  ./TESTS/mbed_drivers/wait_us/main.d  ./TESTS/mbed_drivers/timeout/main.d  ./TESTS/mbed_drivers/ticker/main.d  ./TESTS/mbed_drivers/stl_features/main.d  ./TESTS/mbed_drivers/stats/main.d  ./TESTS/mbed_drivers/rtc/main.d  ./TESTS/mbed_drivers/race_test/main.d  ./TESTS/mbed_drivers/mem_trace/main.d  ./TESTS/mbed_drivers/lp_timeout/main.d  ./TESTS/mbed_drivers/generic_tests/main.d  ./TESTS/mbed_drivers/flashiap/main.d  ./TESTS/mbed_drivers/echo/main.d  ./TESTS/mbed_drivers/dev_null/main.d  ./TESTS/mbed_drivers/c_strings/main.d  ./TESTS/integration/basic/main.d  ./TESTS/events/timing/main.d  ./TESTS/events/queue/main.d \r\nrm -rf  mbed-os.bin  mbed-os.siz  mbed-os.*\r\n \r\n\r\n10:35:44 Build Finished (took 505ms)\r\n\r\n10:35:46 **** Build of configuration Debug for project mbed-os ****\r\nmake -j3 all \r\nBuilding file: ../tools/data/rpc/class.cpp\r\nBuilding file: ../targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_acmp.c\r\nInvoking: Cross ARM C++ Compiler\r\narm-none-eabi-g++ -mcpu=cortex-m3 -mthumb -O0 -fmessage-length=0 -ffunction-sections -fdata-sections -fno-builtin -funsigned-char -fno-delete-null-pointer-checks -fomit-frame-pointer -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers  -g3 -DDEVICE_ERROR_PATTERN=1 -DDEVICE_SPI=1 -DTARGET_EFM32GG -D__MBED__=1 -DDEVICE_I2CSLAVE=1 -DTARGET_LIKE_MBED -DMBED_BUILD_TIMESTAMP=1489142107.36 -DDEVICE_PORTINOUT=1 -D__MBED_CMSIS_RTOS_CM -DDEVICE_LOWPOWERTIMER=1 -DDEVICE_RTC=1 -DTOOLCHAIN_object -DDEVICE_SERIAL_ASYNCH=1 -D__CMSIS_RTOS -DEFM32GG990F1024 -DTARGET_EFM32GG990F1024 -DTOOLCHAIN_GCC -DDEVICE_I2C_ASYNCH=1 -DTARGET_LIKE_CORTEX_M3 -DTARGET_CORTEX_M -DTARGET_DEBUG -DARM_MATH_CM3 -DDEVICE_ANALOGOUT=1 -DTARGET_UVISOR_UNSUPPORTED -DTARGET_M3 -DDEVICE_SERIAL=1 -DDEVICE_INTERRUPTIN=1 -DDEVICE_I2C=1 -DDEVICE_PORTOUT=1 -D__CORTEX_M3 -DTRANSACTION_QUEUE_SIZE_SPI=4 -DDEVICE_STDIO_MESSAGES=1 -DDEVICE_SPI_ASYNCH=1 -DTARGET_EFM32 -DDEVICE_PORTIN=1 -DDEVICE_SLEEP=1 -DTOOLCHAIN_GCC_ARM -DTARGET_Silicon_Labs -DDEVICE_SPISLAVE=1 -DDEVICE_ANALOGIN=1 -DDEVICE_PWMOUT=1 -DTARGET_EFM32GG_STK3700 -DTARGET_1024K -I\"/Users/barsza01/devel/mbed/code/mbed-os/.\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/cmsis\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/cmsis/TARGET_CORTEX_M\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_GCC\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/docs\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/drivers\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/events\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/events/equeue\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/filesystem\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/filesystem/bd\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/filesystem/fat\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/filesystem/fat/ChaN\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/greentea-client\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/greentea-client/greentea-client\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/greentea-client/source\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/unity\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/unity/source\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/unity/unity\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/utest\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/utest/source\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/utest/utest\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/importer\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/inc\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/inc/mbedtls\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/platform\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/platform/inc\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/platform/src\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/src\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/nanostack\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/netsocket\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/storage\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/hal\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/hal/storage_abstraction\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/platform\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos/rtx2\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos/rtx2/TARGET_CORTEX_M\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos/rtx2/TARGET_CORTEX_M/TARGET_M3\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos/rtx2/TARGET_CORTEX_M/TARGET_M3/TOOLCHAIN_GCC\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/TARGET_EFM32GG_STK3700\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device/TARGET_1024K\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device/TARGET_1024K/TOOLCHAIN_GCC_ARM\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/common\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/inc\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/\" -include\"mbed_config.h\" -fabi-version=0 -fno-exceptions -fno-rtti -Wvla -MMD -MP -MF\"tools/data/rpc/class.d\" -MT\"tools/data/rpc/class.o\" -c -o \"tools/data/rpc/class.o\" \"../tools/data/rpc/class.cpp\"\r\nInvoking: Cross ARM C Compiler\r\narm-none-eabi-gcc -mcpu=cortex-m3 -mthumb -O0 -fmessage-length=0 -ffunction-sections -fdata-sections -fno-builtin -funsigned-char -fno-delete-null-pointer-checks -fomit-frame-pointer -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers  -g3 -DDEVICE_ERROR_PATTERN=1 -DDEVICE_SPI=1 -DTARGET_EFM32GG -D__MBED__=1 -DDEVICE_I2CSLAVE=1 -DTARGET_LIKE_MBED -DMBED_BUILD_TIMESTAMP=1489142107.36 -DDEVICE_PORTINOUT=1 -D__MBED_CMSIS_RTOS_CM -DDEVICE_LOWPOWERTIMER=1 -DDEVICE_RTC=1 -DTOOLCHAIN_object -DDEVICE_SERIAL_ASYNCH=1 -D__CMSIS_RTOS -DEFM32GG990F1024 -DTARGET_EFM32GG990F1024 -DTOOLCHAIN_GCC -DDEVICE_I2C_ASYNCH=1 -DTARGET_LIKE_CORTEX_M3 -DTARGET_CORTEX_M -DTARGET_DEBUG -DARM_MATH_CM3 -DDEVICE_ANALOGOUT=1 -DTARGET_UVISOR_UNSUPPORTED -DTARGET_M3 -DDEVICE_SERIAL=1 -DDEVICE_INTERRUPTIN=1 -DDEVICE_I2C=1 -DDEVICE_PORTOUT=1 -D__CORTEX_M3 -DTRANSACTION_QUEUE_SIZE_SPI=4 -DDEVICE_STDIO_MESSAGES=1 -DDEVICE_SPI_ASYNCH=1 -DTARGET_EFM32 -DDEVICE_PORTIN=1 -DDEVICE_SLEEP=1 -DTOOLCHAIN_GCC_ARM -DTARGET_Silicon_Labs -DDEVICE_SPISLAVE=1 -DDEVICE_ANALOGIN=1 -DDEVICE_PWMOUT=1 -DTARGET_EFM32GG_STK3700 -DTARGET_1024K -I\"/Users/barsza01/devel/mbed/code/mbed-os/.\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/cmsis\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/cmsis/TARGET_CORTEX_M\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_GCC\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/docs\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/drivers\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/events\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/events/equeue\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/filesystem\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/filesystem/bd\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/filesystem/fat\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/filesystem/fat/ChaN\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/greentea-client\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/greentea-client/greentea-client\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/greentea-client/source\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/unity\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/unity/source\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/unity/unity\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/utest\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/utest/source\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/utest/utest\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/importer\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/inc\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/inc/mbedtls\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/platform\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/platform/inc\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/platform/src\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/src\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/nanostack\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/netsocket\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/storage\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/hal\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/hal/storage_abstraction\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/platform\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos/rtx2\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos/rtx2/TARGET_CORTEX_M\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos/rtx2/TARGET_CORTEX_M/TARGET_M3\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos/rtx2/TARGET_CORTEX_M/TARGET_M3/TOOLCHAIN_GCC\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/TARGET_EFM32GG_STK3700\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device/TARGET_1024K\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device/TARGET_1024K/TOOLCHAIN_GCC_ARM\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/common\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/inc\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/\" -include\"mbed_config.h\" -std=gnu99 -MMD -MP -MF\"targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_acmp.d\" -MT\"targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_acmp.o\" -c -o \"targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_acmp.o\" \"../targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_acmp.c\"\r\nBuilding file: ../targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_adc.c\r\nInvoking: Cross ARM C Compiler\r\narm-none-eabi-gcc -mcpu=cortex-m3 -mthumb -O0 -fmessage-length=0 -ffunction-sections -fdata-sections -fno-builtin -funsigned-char -fno-delete-null-pointer-checks -fomit-frame-pointer -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers  -g3 -DDEVICE_ERROR_PATTERN=1 -DDEVICE_SPI=1 -DTARGET_EFM32GG -D__MBED__=1 -DDEVICE_I2CSLAVE=1 -DTARGET_LIKE_MBED -DMBED_BUILD_TIMESTAMP=1489142107.36 -DDEVICE_PORTINOUT=1 -D__MBED_CMSIS_RTOS_CM -DDEVICE_LOWPOWERTIMER=1 -DDEVICE_RTC=1 -DTOOLCHAIN_object -DDEVICE_SERIAL_ASYNCH=1 -D__CMSIS_RTOS -DEFM32GG990F1024 -DTARGET_EFM32GG990F1024 -DTOOLCHAIN_GCC -DDEVICE_I2C_ASYNCH=1 -DTARGET_LIKE_CORTEX_M3 -DTARGET_CORTEX_M -DTARGET_DEBUG -DARM_MATH_CM3 -DDEVICE_ANALOGOUT=1 -DTARGET_UVISOR_UNSUPPORTED -DTARGET_M3 -DDEVICE_SERIAL=1 -DDEVICE_INTERRUPTIN=1 -DDEVICE_I2C=1 -DDEVICE_PORTOUT=1 -D__CORTEX_M3 -DTRANSACTION_QUEUE_SIZE_SPI=4 -DDEVICE_STDIO_MESSAGES=1 -DDEVICE_SPI_ASYNCH=1 -DTARGET_EFM32 -DDEVICE_PORTIN=1 -DDEVICE_SLEEP=1 -DTOOLCHAIN_GCC_ARM -DTARGET_Silicon_Labs -DDEVICE_SPISLAVE=1 -DDEVICE_ANALOGIN=1 -DDEVICE_PWMOUT=1 -DTARGET_EFM32GG_STK3700 -DTARGET_1024K -I\"/Users/barsza01/devel/mbed/code/mbed-os/.\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/cmsis\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/cmsis/TARGET_CORTEX_M\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_GCC\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/docs\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/drivers\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/events\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/events/equeue\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/filesystem\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/filesystem/bd\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/filesystem/fat\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/filesystem/fat/ChaN\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/greentea-client\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/greentea-client/greentea-client\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/greentea-client/source\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/unity\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/unity/source\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/unity/unity\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/utest\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/utest/source\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/frameworks/utest/utest\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/importer\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/inc\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/inc/mbedtls\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/platform\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/platform/inc\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/platform/src\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/mbedtls/src\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/nanostack\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/netsocket\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/features/storage\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/hal\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/hal/storage_abstraction\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/platform\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos/rtx2\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos/rtx2/TARGET_CORTEX_M\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos/rtx2/TARGET_CORTEX_M/TARGET_M3\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/rtos/rtx2/TARGET_CORTEX_M/TARGET_M3/TOOLCHAIN_GCC\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/TARGET_EFM32GG_STK3700\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device/TARGET_1024K\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG/device/TARGET_1024K/TOOLCHAIN_GCC_ARM\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/common\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/inc\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src\" -I\"/Users/barsza01/devel/mbed/code/mbed-os/\" -include\"mbed_config.h\" -std=gnu99 -MMD -MP -MF\"targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_adc.d\" -MT\"targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_adc.o\" -c -o \"targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_adc.o\" \"../targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_adc.c\"\r\n../tools/data/rpc/class.cpp:1:11: error: expected unqualified-id before '{' token\r\n class Rpc{{name}} : public RPC {\r\n           ^\r\n../tools/data/rpc/class.cpp:1:17: error: expected ';' after class definition\r\n class Rpc{{name}} : public RPC {\r\n                 ^\r\n../tools/data/rpc/class.cpp:1:19: error: expected unqualified-id before ':' token\r\n class Rpc{{name}} : public RPC {\r\n                   ^\r\nmake: *** [tools/data/rpc/class.o] Error 1\r\nmake: *** Waiting for unfinished jobs....\r\nFinished building: ../targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_acmp.c\r\nFinished building: ../targets/TARGET_Silicon_Labs/TARGET_EFM32/emlib/src/em_adc.c\r\n \r\n \r\n\r\n10:35:47 Build Finished (took 1s.116ms)\r\n```\r\n\r\n@theotherjimmy "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3884",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3884/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3884/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3884/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3884",
    "id": 212045296,
    "number": 3884,
    "title": "Need check whether a pointer is valid before make overflow test",
    "user": {
      "login": "kyliuxing",
      "id": 14165205,
      "avatar_url": "https://avatars0.githubusercontent.com/u/14165205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kyliuxing",
      "html_url": "https://github.com/kyliuxing",
      "followers_url": "https://api.github.com/users/kyliuxing/followers",
      "following_url": "https://api.github.com/users/kyliuxing/following{/other_user}",
      "gists_url": "https://api.github.com/users/kyliuxing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kyliuxing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kyliuxing/subscriptions",
      "organizations_url": "https://api.github.com/users/kyliuxing/orgs",
      "repos_url": "https://api.github.com/users/kyliuxing/repos",
      "events_url": "https://api.github.com/users/kyliuxing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kyliuxing/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      },
      {
        "id": 431175318,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20external%20dependency",
        "name": "type: external dependency",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-03-06T07:40:04Z",
    "updated_at": "2017-12-16T16:51:04Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I met a bug when i call pbuf_alloc(PBUF_RAW, len, **PBUF_POOL**);, it did not check whether the pointer is NULL before make overflow test.\r\nThanks!\r\n\r\nlwip\\src\\core\\lwip_memp.c\r\n```\r\n#if !MEMP_OVERFLOW_CHECK\r\ndo_memp_malloc_pool(const struct memp_desc *desc)\r\n#else\r\ndo_memp_malloc_pool_fn(const struct memp_desc *desc, const char* file, const int line)\r\n#endif\r\n{\r\n.......\r\n  memp = *desc->tab;\r\n\r\n#if MEMP_OVERFLOW_CHECK == 1\r\n  **if (memp != NULL) {**\r\n    memp_overflow_check_element_overflow(memp, desc);\r\n    memp_overflow_check_element_underflow(memp, desc);\r\n  **}**\r\n#endif /* MEMP_OVERFLOW_CHECK */\r\n#endif /* MEMP_MEM_MALLOC */\r\n\r\n  if (memp != NULL) {\r\n#if !MEMP_MEM_MALLOC\r\n    *desc->tab = memp->next;\r\n.........\r\n} \r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3859",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3859/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3859/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3859/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3859",
    "id": 211156514,
    "number": 3859,
    "title": "MAXIM targets fail to compile with mbed-dev (rev 137)",
    "user": {
      "login": "adbridge",
      "id": 11191917,
      "avatar_url": "https://avatars2.githubusercontent.com/u/11191917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adbridge",
      "html_url": "https://github.com/adbridge",
      "followers_url": "https://api.github.com/users/adbridge/followers",
      "following_url": "https://api.github.com/users/adbridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/adbridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adbridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adbridge/subscriptions",
      "organizations_url": "https://api.github.com/users/adbridge/orgs",
      "repos_url": "https://api.github.com/users/adbridge/repos",
      "events_url": "https://api.github.com/users/adbridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adbridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 550082561,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20maxim",
        "name": "devices: maxim",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-03-01T17:44:06Z",
    "updated_at": "2017-06-22T10:51:22Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nMAX32620HSP / MAXWSNENV\r\n\r\n**Toolchain:**\r\nARM\r\n\r\n**Toolchain version:**\r\nOnline IDE\r\n\r\n**Steps to reproduce**\r\nCompile a version of blinky with mbed-dev library for either of the above 2 targets in the online IDE. The following error is observed:\r\nError: L6218E: Undefined symbol __rt_heap_descriptor (referred from malloc.o).\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3858",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3858/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3858/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3858/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3858",
    "id": 211155537,
    "number": 3858,
    "title": "NRF51_DONGLE_LEGACY,  NRF51_MICROBIT_B targets defined incorrectly and do not inherit as expected",
    "user": {
      "login": "adbridge",
      "id": 11191917,
      "avatar_url": "https://avatars2.githubusercontent.com/u/11191917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adbridge",
      "html_url": "https://github.com/adbridge",
      "followers_url": "https://api.github.com/users/adbridge/followers",
      "following_url": "https://api.github.com/users/adbridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/adbridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adbridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adbridge/subscriptions",
      "organizations_url": "https://api.github.com/users/adbridge/orgs",
      "repos_url": "https://api.github.com/users/adbridge/repos",
      "events_url": "https://api.github.com/users/adbridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adbridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-03-01T17:40:22Z",
    "updated_at": "2017-06-22T10:57:46Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug \r\n- Priority: Major \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNRF51_MICROBIT_B\r\nNRF51_DONGLE_LEGACY \r\n\r\n**Toolchain:**\r\nARM\r\n\r\nWhen compiling a test application which has the mbed lib (mbed-os 2 sdk) included, the above two targets fail to compile with the following error:\r\n\r\nDEBUG:root:Library name 'platform' is not unique (defined in '/src/mbed/TARGET_NRF51_MICROBIT_B/mbed_lib.json' and '/src/mbed/TARGET_NRF51_MICROBIT/mbed_lib.json')                      \r\n\r\nDEBUG:root:Library name 'platform' is not unique (defined in '/src/mbed/TARGET_NRF51_DONGLE_LEGACY/mbed_lib.json' and '/src/mbed/TARGET_NRF51_DONGLE/mbed_lib.json')                     \r\n\r\nIt looks like the target inheritance is thus broken.\r\n\r\n**Steps to reproduce**\r\nCompile a version of blinky with mbed lib version 137 in the online IDE\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3809",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3809/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3809/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3809/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3809",
    "id": 208885463,
    "number": 3809,
    "title": "NUCLEO_L053R8 not showing up in mbed CLI as mbed OS 2 supported",
    "user": {
      "login": "MarceloSalazar",
      "id": 1931553,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarceloSalazar",
      "html_url": "https://github.com/MarceloSalazar",
      "followers_url": "https://api.github.com/users/MarceloSalazar/followers",
      "following_url": "https://api.github.com/users/MarceloSalazar/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarceloSalazar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarceloSalazar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarceloSalazar/subscriptions",
      "organizations_url": "https://api.github.com/users/MarceloSalazar/orgs",
      "repos_url": "https://api.github.com/users/MarceloSalazar/repos",
      "events_url": "https://api.github.com/users/MarceloSalazar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarceloSalazar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-02-20T13:51:14Z",
    "updated_at": "2017-04-19T14:54:36Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker\r\n\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO_L053R8\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**mbed-cli version:** \r\n1.0.0\r\n\r\n**meed-os sha:**\r\nhttps://mbed.org/users/mbed_official/code/mbed/builds/ef9c61f8c49f   (Release 136)\r\n\r\n**Expected behavior**\r\nDevice should show up as mbed OS 2 supported when using mbed CLI and compiling\r\n\r\n**Actual behavior**\r\nDevice not included in release\r\n\r\n**Steps to reproduce**\r\n\r\n```\r\n> mbed new mbed-classic-program --mbedlib\r\n> cd mbed-classic-program\r\n> mbed compile -S\r\n\r\n```\r\n\r\nHowever, I can see the platform NUCLEO_L053R8 has been added to mbed OS 5.3.5:\r\nhttps://github.com/ARMmbed/mbed-os/blob/mbed-os-5.3.5/targets/targets.json#L1015\r\n\r\n@theotherjimmy @adustm \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3804",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3804/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3804/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3804/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3804",
    "id": 208839254,
    "number": 3804,
    "title": "Heap stats not reported correctly with IAR in NUMAKER_PFM_NUC472",
    "user": {
      "login": "andresag01",
      "id": 3746901,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3746901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andresag01",
      "html_url": "https://github.com/andresag01",
      "followers_url": "https://api.github.com/users/andresag01/followers",
      "following_url": "https://api.github.com/users/andresag01/following{/other_user}",
      "gists_url": "https://api.github.com/users/andresag01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andresag01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andresag01/subscriptions",
      "organizations_url": "https://api.github.com/users/andresag01/orgs",
      "repos_url": "https://api.github.com/users/andresag01/repos",
      "events_url": "https://api.github.com/users/andresag01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andresag01/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 447665028,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20iar",
        "name": "devices: iar",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-02-20T10:28:26Z",
    "updated_at": "2017-09-21T03:33:15Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "While trying to profile the heap usage by one of the sample applications I used the heap_stats feature from mbed OS as described in [this website](https://docs.mbed.com/docs/mbed-os-handbook/en/5.2/advanced/runtime_stats/). Specifically, I ran the following code:\r\n\r\n```C++\r\n#include \"mbed.h\"\r\n#include \"mbed_stats.h\"\r\n#include \"cmsis_os.h\"\r\n\r\nint main(void)\r\n{\r\n\tmbed_stats_heap_t heap_stats;\r\n\r\n\tprintf(\"Starting head stats example\\r\\n\");\r\n\tprintf(\"Starting stack stats example\\r\\n\");\r\n\r\n\tosThreadId main_id = osThreadGetId();\r\n\r\n\tosEvent info;\r\n\tinfo = _osThreadGetInfo(main_id, osThreadInfoStackSize);\r\n\tif (info.status != osOK) {\r\n\t\tprintf(\"Could not get stack size\\r\\n\");\r\n\t}\r\n\tuint32_t stack_size = (uint32_t)info.value.v;\r\n\tinfo = _osThreadGetInfo(main_id, osThreadInfoStackMax);\r\n\tif(info.status != osOK) {\r\n\t\tprintf(\"Could not get max stack\\r\\n\");\r\n\t}\r\n\tuint32_t max_stack = (uint32_t)info.value.v;\r\n\tprintf(\"Stack used %li of %li bytes\\r\\n\", max_stack, stack_size);\r\n\r\n\tvoid *allocation = malloc(1000);\r\n\tprintf(\"Freeing 1000 bytes\\r\\n\");\r\n\r\n\tmbed_stats_heap_get(&heap_stats);\r\n\tprintf(\"Current heap: %lu\\r\\n\", heap_stats.current_size);\r\n\tprintf(\"Max heap size: %lu\\r\\n\", heap_stats.max_size);\r\n\r\n\tfree(allocation);\r\n\r\n\tmbed_stats_heap_get(&heap_stats);\r\n\tprintf(\"Current heap after: %lu\\r\\n\", heap_stats.current_size);\r\n\tprintf(\"Max heap size after: %lu\\r\\n\", heap_stats.max_size);\r\n\r\n\treturn 0;\r\n}\r\n```\r\nThen I compiled using the command:\r\n```\r\nmbed compile -t IAR -m NUMAKER_PFM_NUC472 -DMBED_HEAP_STATS_ENABLED=1 -DMBED_STACK_STATS_ENABLED=1 -c\r\n```\r\nAnd observed the following output in the serial terminal:\r\n```\r\nStarting head stats example\r\nStarting stack stats example\r\nStack used 392 of 4096 bytes\r\nFreeing 1000 bytes\r\nCurrent heap: 0\r\nMax heap size: 0\r\nCurrent heap after: 0\r\nMax heap size after: 0\r\n```\r\nHowever, this output is not accurate as my program consumes at least 1KB of heap memory with that call to `malloc()`. Note that the statistics reported seem correct when compiling with ARM and GCC_ARM.\r\n\r\n### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUMAKER_PFM_NUC472\r\n\r\n**Toolchain:**\r\nIAR\r\n\r\n**Toolchain version:**\r\nIAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM\r\n\r\n**mbed-cli version:** \r\n1.0.0\r\n\r\n**meed-os sha:**\r\n#bcf7085d85b2811b5d68bdda192c754eadfb8f88\r\n\r\n**Expected behavior**\r\nHeap stats should be reported correctly.\r\n\r\n**Actual behavior**\r\nHeap usage is always reported as 0 bytes.\r\n\r\n**Steps to reproduce**\r\nCompile (using IAR) and run the program pasted at the beginning of this report on the NUMAKER_PFM_NUC472.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3768",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3768/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3768/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3768/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3768",
    "id": 207481221,
    "number": 3768,
    "title": "Export malfunction of mbed online compiler !",
    "user": {
      "login": "mbedNoobNinja",
      "id": 18067130,
      "avatar_url": "https://avatars3.githubusercontent.com/u/18067130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mbedNoobNinja",
      "html_url": "https://github.com/mbedNoobNinja",
      "followers_url": "https://api.github.com/users/mbedNoobNinja/followers",
      "following_url": "https://api.github.com/users/mbedNoobNinja/following{/other_user}",
      "gists_url": "https://api.github.com/users/mbedNoobNinja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mbedNoobNinja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mbedNoobNinja/subscriptions",
      "organizations_url": "https://api.github.com/users/mbedNoobNinja/orgs",
      "repos_url": "https://api.github.com/users/mbedNoobNinja/repos",
      "events_url": "https://api.github.com/users/mbedNoobNinja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mbedNoobNinja/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 534372905,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20online%20deployment",
        "name": "type: online deployment",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-02-14T10:50:14Z",
    "updated_at": "2017-09-08T07:14:29Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Note: Why in the mbed online compiler The export function is not working, even there is such functionality added with PR: #3632?\r\n\r\nNote: Why there is no information about used RAM and ROM in the `Program Details (Build tab)` when a project is compiled with mbed online compiler?\r\n\r\n### Description\r\n- Type: Bug | Question\r\n- Related issue: `#3632`\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nVK_RZ_A1H\r\n\r\n**Toolchain:**\r\nARM (mbed online compiler)\r\n\r\n**Toolchain version:**\r\n(mbed online compiler)\r\n\r\n**Expected behavior**\r\nAt least IAR, E2studio & DS5 to become active in the drop down list box when choosing Export program from the mbed online compiler\r\n\r\n**Actual behavior**\r\nOnly GCC (Code Sourcery) is active and even though it is selected the project still can not be exported\r\n\r\n**Steps to reproduce**\r\nJust try with the standard mbed_blinky project\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**What needs to be done, so used RAM & ROM to become available in the Build tab of Program Details window of the mbed online compiler?**\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3729",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3729/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3729/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3729/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3729",
    "id": 206328110,
    "number": 3729,
    "title": "exporter eclipse_gcc_arm: adding size statistics to output",
    "user": {
      "login": "JojoS62",
      "id": 6775562,
      "avatar_url": "https://avatars2.githubusercontent.com/u/6775562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JojoS62",
      "html_url": "https://github.com/JojoS62",
      "followers_url": "https://api.github.com/users/JojoS62/followers",
      "following_url": "https://api.github.com/users/JojoS62/following{/other_user}",
      "gists_url": "https://api.github.com/users/JojoS62/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JojoS62/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JojoS62/subscriptions",
      "organizations_url": "https://api.github.com/users/JojoS62/orgs",
      "repos_url": "https://api.github.com/users/JojoS62/repos",
      "events_url": "https://api.github.com/users/JojoS62/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JojoS62/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2017-02-08T21:21:07Z",
    "updated_at": "2017-04-26T19:28:52Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\nexporter eclipse_gcc_arm\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\nThe eclipse_gcc_arm exporter uses a makefile that does not show the code size statistics after compilation.  To show the ouput, there are two options:\r\n- use the 'print-memory-usage' linker option\r\n- use the memap.py tool for more detailed information\r\n\r\nTo get the output, I have modified the generated makefile:\r\n1. adding print-memory-usage and generating the map file:\r\n```\r\nLD      = 'arm-none-eabi-gcc' '-Wl,--gc-sections' '-Wl,--wrap,main' '-Wl,--wrap,_malloc_r' '-Wl,--wrap,_free_r' '-Wl,--wrap,_realloc_r' '-Wl,--wrap,_calloc_r' '-Wl,--wrap,exit' '-Wl,--wrap,atexit' '-mcpu=cortex-m0plus' '-mthumb' '-Wl,--print-memory-usage' '-Wl,-Map=$(PROJECT).map'\r\n```\r\n2. calling the memap tool:\r\n```\r\n$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS) $(LINKER_SCRIPT)\r\n\t+@echo \"link: $(notdir $@)\"\r\n\t@$(LD) $(LD_FLAGS) -T $(filter %.ld, $^) $(LIBRARY_PATHS) --output $@ $(filter %.o, $^) $(LIBRARIES) $(LD_SYS_LIBS)\r\n\r\n\t@echo \"\"\r\n# for detailed memap, add option '-d'\r\n\tpython .././mbed-os\\tools\\memap.py $(PROJECT).map -t GCC_ARM\r\n\t@echo \"\"\r\n\r\n\t@echo \"\"\r\n\t@echo \"*****\"\r\n\t@echo \"***** You must modify vector checksum value in *.bin and *.hex files.\"\r\n\t@echo \"*****\"\r\n\t@echo \"\"\r\n```\r\n\r\nThe 2nd method works only when a mbed-cli project including the tools is imported.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3682",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3682/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3682/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3682/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3682",
    "id": 204907554,
    "number": 3682,
    "title": "Online compiler: Clone from GH -> publish to mbed -> always fails",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 534372905,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20online%20deployment",
        "name": "type: online deployment",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-02-02T15:33:58Z",
    "updated_at": "2017-11-09T17:08:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "1. Open the online compiler\r\n2. Import a project from GitHub (e.g. https://github.com/janjongboom/connectivity-demo-lora)\r\n3. Change some stuff and commit\r\n4. Publish\r\n5. Click 'Fork...' and put under an mbed.org organisation\r\n6. Click 'Publish'\r\n7. An error occurs\r\n8. The project is actually published though, but you need to re-import this project to be able to commit to it, which is very annoying"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3659",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3659/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3659/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3659/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3659",
    "id": 203798223,
    "number": 3659,
    "title": "Nordic targets fail to compile with macro `DEBUG` set",
    "user": {
      "login": "bridadan",
      "id": 3123977,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3123977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridadan",
      "html_url": "https://github.com/bridadan",
      "followers_url": "https://api.github.com/users/bridadan/followers",
      "following_url": "https://api.github.com/users/bridadan/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridadan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridadan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridadan/subscriptions",
      "organizations_url": "https://api.github.com/users/bridadan/orgs",
      "repos_url": "https://api.github.com/users/bridadan/repos",
      "events_url": "https://api.github.com/users/bridadan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridadan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-01-28T09:42:01Z",
    "updated_at": "2017-09-19T13:57:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\nThis bug was discovered when testing PR #3561 to add GNU ARM Eclipse exporter support. This may end up being a blocker because the Eclipse adds the `DEBUG` macro to the Debug builds (the default profile).\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNordic platforms (NRF51_DK was tested)\r\n\r\n**Toolchain:**\r\nAll toolchains\r\n\r\n**mbed-cli version:** \r\n1.0.0\r\n\r\n**meed-os sha:**\r\n15cd3da4ba009dbfc531df734029c0b74742a1e5\r\n\r\n**Expected behavior**\r\nShould compile\r\n\r\n**Actual behavior**\r\nFails to compile with the error `fatal error: bsp.h: No such file or directory`\r\n\r\n**Steps to reproduce**\r\n```\r\n$ mbed test -m NRF51_DK -t GCC_ARM --compile --clean -D DEBUG -v\r\n...\r\n        [DEBUG] Return: 1\r\n        [DEBUG] Output: C:\\Users\\bridan01\\Documents\\dev\\m_mbed\\mbed\\targets\\TARGET_NORDIC\\TARGET_NRF5\\sdk\\libraries\\util\\app_error.c:57:17: fatal error: bsp.h: No such file or directory\r\n        [DEBUG] Output:  #include \"bsp.h\"\r\n        [DEBUG] Output:                  ^\r\n        [DEBUG] Output: compilation terminated.\r\n```\r\n\r\nThe `bsp.h` file is available from the nordic SDK, however it includes other files as well. I was able to get it compiling by removing some of the includes, however I'm not sure if I removed anything important. I'd like to here from people who are more familiar with the nordic SDK before submitting a change.\r\n\r\ncc @pan- "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3656",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3656/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3656/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3656/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3656",
    "id": 203652930,
    "number": 3656,
    "title": "I2C bus does not recover if RESET occurs within read",
    "user": {
      "login": "SeppoTakalo",
      "id": 3104794,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3104794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SeppoTakalo",
      "html_url": "https://github.com/SeppoTakalo",
      "followers_url": "https://api.github.com/users/SeppoTakalo/followers",
      "following_url": "https://api.github.com/users/SeppoTakalo/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeppoTakalo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SeppoTakalo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeppoTakalo/subscriptions",
      "organizations_url": "https://api.github.com/users/SeppoTakalo/orgs",
      "repos_url": "https://api.github.com/users/SeppoTakalo/repos",
      "events_url": "https://api.github.com/users/SeppoTakalo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SeppoTakalo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-01-27T14:47:12Z",
    "updated_at": "2017-08-02T09:54:13Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Expected behavior**\r\n* You should expect I2C bus to be able to recover from reset condition.\r\n\r\n**Actual behavior**\r\n* If device reset within I2C read/write, there is no mechanism to recover. You need to unpower the device to recover.\r\n\r\n**Steps to reproduce**\r\n\r\n1. Create a loop that continuously reads any I2C devices register.\r\n1. Press RESET button while read is ongoing.\r\n1. If timing is correct, all subsequent read requests to device will fail. RESET does not help anymore.\r\n\r\n**Example code**\r\nFollowing code produces this problem using Atmel RF shield, by reading is AT24MAC register.\r\n\r\n```\r\n#include \"mbed.h\"\r\n#include \"NanostackRfPhyAtmel.h\"\r\n#include \"at24mac.h\"\r\n\r\nSerial output(USBTX, USBRX);\r\n\r\nint main(void) {\r\n\r\n    output.baud(115200);\r\n    printf(\"Starting\\r\\n\");\r\n\r\n    AT24Mac at24mac(ATMEL_I2C_SDA, ATMEL_I2C_SCL);\r\n    uint8_t eui64[8];\r\n\r\n    for (int i=0;;i++) {\r\n        if (at24mac.read_eui64(eui64) == 0) {\r\n            printf(\"Read eui64(%d) %hhx:%hhx:%hhx:%hhx:%hhx:%hhx:%hhx:%hhx\\r\\n\",i, eui64[0],eui64[1],eui64[2],eui64[3],eui64[4],eui64[5],eui64[6],eui64[7]);\r\n        } else {\r\n            printf(\"Failed! %d\\r\\n\", i);\r\n        }\r\n        Thread::wait(10);\r\n    }\r\n}\r\n```\r\n\r\nWhen all is working, this just outputs `Read ui64...` and the address it just  read.\r\nClick reset for multiple times, until you start seeing `Failed!` messages.\r\nFrom this condition, there is no way to recover.\r\n\r\nThere is internal ARM ticket open ONME-2963"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3645",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3645/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3645/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3645/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3645",
    "id": 203106925,
    "number": 3645,
    "title": "Broken:mbed-os-example-client W/ UBLOX_EVK_ODIN_W2 ",
    "user": {
      "login": "andcor02",
      "id": 20902962,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20902962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andcor02",
      "html_url": "https://github.com/andcor02",
      "followers_url": "https://api.github.com/users/andcor02/followers",
      "following_url": "https://api.github.com/users/andcor02/following{/other_user}",
      "gists_url": "https://api.github.com/users/andcor02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andcor02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andcor02/subscriptions",
      "organizations_url": "https://api.github.com/users/andcor02/orgs",
      "repos_url": "https://api.github.com/users/andcor02/repos",
      "events_url": "https://api.github.com/users/andcor02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andcor02/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-01-25T13:47:06Z",
    "updated_at": "2017-08-21T13:24:15Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Using mbed-os-example-client with UBLOX_EVK_ODIN_W2 \r\n\r\nExample: https://github.com/ARMmbed/mbed-os-example-client\r\n\r\nImporting example and switching to target UBLOX_EVK_ODIN_W2 as Ethernet or WiFi, compile all fine, flashes fine.\r\n\r\n**ISSUE**\r\n\r\n1. Board just hangs, outputs \"Connecting to ethernet...\" but nothing else happens?\r\n\r\n2. When using WiFi, connects to network and registers, however after one button press on 'SW1' again device hangs."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3610",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3610/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3610/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3610/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3610",
    "id": 201675300,
    "number": 3610,
    "title": "__real__calloc_r can clear too much memory (when running in uVisor)",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 534234743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20uvisor",
        "name": "component: uvisor",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-01-18T19:52:31Z",
    "updated_at": "2017-12-16T16:51:06Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker for people who use uVisor with default settings\r\n\r\n---------------------------------------------------------------\r\n\r\n## Bug\r\n\r\n**Target**\r\nK64F\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\narm-none-eabi-gcc (GNU Tools for ARM Embedded Processors) 4.9.3 20150529 (release) [ARM/embedded-4_9-branch revision 224288]\r\n\r\n**mbed-cli version:** \r\n1.0.0\r\n\r\n**meed-os sha:**\r\nHEAD2885c1b41e63158cb6faf5f107cd821ae06ef26c\r\n\r\n---\r\n\r\n## Demo\r\n\r\n* https://github.com/janjongboom/mbed-os-example-uvisor/tree/calloc_bug.\r\n* Build with K64F and GCC_ARM.\r\n* Issue shows in both default and debug profile.\r\n* Issue shows both with and without gdb attached.\r\n\r\n---\r\n\r\nI realize this sounds insane, but `__real__calloc_r` - called from a uVisor box - can clear more memory than it allocates, thus causing all kinds of crazy errors. Ericsson approached us with memory issues when running the `mbedtls_ecp_mul` mbed TLS function within a uVisor box (but not in a normal thread), and I flew down to Sweden to investigate... Here's what I saw:\r\n\r\n* There is plenty of space on the heap. ~10K free.\r\n* The function can run in <2K (with `MBEDTLS_ECP_WINDOW_SIZE` configured) as seen on the main thread.\r\n* Directly after calling this function the complete heap is full, every `malloc` call fails.\r\n\r\nAfter a few hours of investigating we consulted @niklas-arm who suspected the memory allocator (uVisor uses a different allocator than the rest of mbed OS). This allocator is pretty simple, it allocates the full block of memory the uVisor box might use and then has a linked list of malloc'ed blocks. If a new block needs to be malloced it looks for a hole in memory that is big enough, and if so, allocates that block and updates the `next` pointer.\r\n\r\nThe last item of the linked list is an element at the end of the memory block (so there is a big hole between the semi-last and last block if your heap is not full nor fragmented). The last element [then points](https://github.com/ARMmbed/mbed-os/blob/04a31f3b39bfbd69e155ed7c9f55880fd75278ba/rtos/rtx/TARGET_CORTEX_M/rt_Memory.c#L86) to `NULL` to indicate the list ended. So the memory structure looks like (these are the actual addresses from the program linked below, compiled with GCC_ARM against K64F with debug profile):\r\n\r\n```\r\n0x1fff4508 -> ... -> 0x1fff5c48 -> 0x1fff5c68 -> ... -> 0x1fff94f8 -> NULL\r\n```\r\n\r\n<img width=\"331\" alt=\"screen shot 2017-01-18 at 20 35 34\" src=\"https://cloud.githubusercontent.com/assets/816856/22079909/bc681d44-ddbd-11e6-9410-a983330d8db3.png\">\r\n\r\n*Last few items of the linked list*\r\n\r\nNow... The 25th `calloc` of the program tries to allocate 32 bytes (incl. the overhead of the allocator this is 40 bytes). This call goes through rt_Memory.c correctly. The memory is allocated and the tree is updated. The pointer returned is `0x1fff5c48`, and the calloc'ed length is 8*4. This is then returned to rtx_malloc_wrapper.c where the pointer is correct.\r\n\r\nWhen you inspect 0x1fff5c68 (when still in rtx_malloc_wrapper) it still contains the pointer to the next item in the list.\r\n\r\nNow step through back to mbed_alloc_wrappers.cpp, right after the `__real__calloc_r` function returns. The `ptr` variable contains the right value, but if you inspect 0x1fff5c68 it is now cleared...\r\n\r\nI've augmented the code like this:\r\n\r\n```cpp\r\n    printf(\"__real__calloc_r %p\\r\\n\", ((MEMP*)0x1fff5c68)->next);\r\n    // nmemb = 8, size = 4 here\r\n    ptr = __real__calloc_r(r, nmemb, size);\r\n    // ptr returned is 0x1fff5c48\r\n    printf(\"__real__calloc_r_done %p\\r\\n\", ((MEMP*)0x1fff5c68)->next);\r\n```\r\n\r\nThis outputs the following:\r\n\r\n```\r\n__real__calloc_r 0x1fff5c90\r\n__real__calloc_r_done 0x0\r\n```\r\n\r\nSo `0x1fff5c68` is now cleared, pointing to 0x0. When we want to allocate more memory the allocator looks at the address, sees it points to 0, thinks it's the end of the list and refuses to allocate any more memory.\r\n\r\nWhen you declare the `MBED_HEAP_STATS_ENABLED` macro the program uses `malloc`/`setmem` instead of the `__real__calloc_r` call and everything works 100%. No memory corruption.\r\n\r\nYou can see this issue in [this program](https://github.com/janjongboom/mbed-os-example-uvisor/tree/calloc_bug). Just build and run on your board. It will warn when the memory is going to be cleared (consistently shown on both my and Ericsson's board) with a `JUST BEFORE WE'RE GONNA FAIL` message on serial. Thereafter the allocation tree is corrupted and no more memory can be allocated. Declare the  `MBED_HEAP_STATS_ENABLED` macro and all will run as normal.\r\n\r\n*Afterthought:* It might be that we actually clear too much memory on more occasions and the only reason we see this now is because the malloc that causes this is the first one to use a hole, due to something being free'd earlier, while the rest of the calls allocate at the end of the heap. Maybe we always memset too many bytes, but no-one ever sees it, because no-one free's their memory before malloc'ing new blocks. The mbed TLS code heavily uses calloc/free...\r\n\r\n/cc @AlessandroA @meriac @sg- @yanesca "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3606",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3606/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3606/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3606/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3606",
    "id": 201477769,
    "number": 3606,
    "title": "Exporting to DS-5 will result in build error",
    "user": {
      "login": "TomoYamanaka",
      "id": 9958200,
      "avatar_url": "https://avatars3.githubusercontent.com/u/9958200?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomoYamanaka",
      "html_url": "https://github.com/TomoYamanaka",
      "followers_url": "https://api.github.com/users/TomoYamanaka/followers",
      "following_url": "https://api.github.com/users/TomoYamanaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomoYamanaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomoYamanaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomoYamanaka/subscriptions",
      "organizations_url": "https://api.github.com/users/TomoYamanaka/orgs",
      "repos_url": "https://api.github.com/users/TomoYamanaka/repos",
      "events_url": "https://api.github.com/users/TomoYamanaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomoYamanaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 15,
    "created_at": "2017-01-18T04:39:27Z",
    "updated_at": "2017-12-16T16:51:08Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n- Priority: Major \r\n\r\n---------------------------------------------------------------\r\n## Question\r\nWhen exporting the existing mbed classic program such as mbed_blinky to **DS-5**, the following error is shown in building the exported project:<br>\r\n\r\n`mbed_blinky_ds5_5_rz_a1h\\mbed_blinky\\mbed/drivers/Serial.h:70:70: error: 'MBED_CONF_PLATFORM_DEFAULT_SERIAL_BAUD_RATE' was not declared in this scope`\r\n\r\nIt seems to be due to lack of include path setting for `mbed_config.h`.\r\nTherefore, it seems that `mbed_config.h` should be manually included at present so that we can build the project.\r\n\r\nJust for information, this problem does not seem to occur until mbed lib revision 127.\r\n\r\nReference : https://github.com/ARMmbed/mbed-os/issues/3593\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3557",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3557/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3557/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3557/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3557",
    "id": 199863634,
    "number": 3557,
    "title": "Makefile export should be able to build for multiple profiles",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-01-10T16:12:35Z",
    "updated_at": "2018-01-30T16:34:56Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n\r\n- Type: Enhancement\r\n\r\n## Enhancement\r\n\r\nIf we export an mbed OS 5 program to (f.e.) Eclipse it does not behave as a 'normal' Eclipse program because our makefile can only support a single profile. Normally, I'd have the ability to do a 'Release' or a 'Debug' build from the IDE, but this is not possible with mbed OS 5 right now. We should change our makefile's so we can do builds for all supported profiles (e.g. `make profile=debug`) so we can change our exporters to support multiple build profiles. \r\n\r\n@sarahmarshy @theotherjimmy @sg- @c1728p9 "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3524",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3524/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3524/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3524/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3524",
    "id": 198693132,
    "number": 3524,
    "title": "EthernetInterface MBED-OS 5.3 static IP",
    "user": {
      "login": "andcor02",
      "id": 20902962,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20902962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andcor02",
      "html_url": "https://github.com/andcor02",
      "followers_url": "https://api.github.com/users/andcor02/followers",
      "following_url": "https://api.github.com/users/andcor02/following{/other_user}",
      "gists_url": "https://api.github.com/users/andcor02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andcor02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andcor02/subscriptions",
      "organizations_url": "https://api.github.com/users/andcor02/orgs",
      "repos_url": "https://api.github.com/users/andcor02/repos",
      "events_url": "https://api.github.com/users/andcor02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andcor02/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-01-04T12:06:22Z",
    "updated_at": "2017-07-27T18:43:05Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Hi,\r\n\r\nI am forwarding the issue from multiple users have problems setting static IP in MBED OS 5.\r\n\r\n**Problem:**\r\n\r\n- Users cannot set static IP\r\n\r\n- Users have tried to use: `virtual nsapi_error_t set_network(const char *ip_address, const char *netmask, const char *gateway);` However the following errors are output\r\n\r\n> Example network-socket TCP Server\r\n> set IP status: 0\r\n> connect status: 0\r\n> IP address is: 192.168.1.100\r\n> MAC address is: 8a:42:7d:87:0c:b7\r\n> open error: -3004\r\n> \r\n> Error -3004 is \"not connected to a network\"\r\n> However I can ping the module on it's assigned IP address and it responds to the ping so we know the network is indeed connected.\r\n> \r\n> Link to original message:\r\n\r\nhttps://developer.mbed.org/questions/76349/EthernetInterface-MBED-OS-53-static-IP/#answer11746\r\n\r\nRegards,\r\n\r\nAndrea"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3512",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3512/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3512/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3512/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3512",
    "id": 198241093,
    "number": 3512,
    "title": "Ethernet Multicast",
    "user": {
      "login": "sstaub",
      "id": 6450325,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6450325?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sstaub",
      "html_url": "https://github.com/sstaub",
      "followers_url": "https://api.github.com/users/sstaub/followers",
      "following_url": "https://api.github.com/users/sstaub/following{/other_user}",
      "gists_url": "https://api.github.com/users/sstaub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sstaub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sstaub/subscriptions",
      "organizations_url": "https://api.github.com/users/sstaub/orgs",
      "repos_url": "https://api.github.com/users/sstaub/repos",
      "events_url": "https://api.github.com/users/sstaub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sstaub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-12-31T17:49:32Z",
    "updated_at": "2017-07-19T22:40:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nLPC1768\r\n\r\nThe UDPSocket class member\r\n`int join_multicast_group(const char *address) `\r\nis missing in mbed-os 5, please bring it back.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3495",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3495/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3495/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3495/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3495",
    "id": 197130141,
    "number": 3495,
    "title": "WONT COMPILE : EthernetInterface/mbed-rtos @ mbed V131, v132 ",
    "user": {
      "login": "andcor02",
      "id": 20902962,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20902962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andcor02",
      "html_url": "https://github.com/andcor02",
      "followers_url": "https://api.github.com/users/andcor02/followers",
      "following_url": "https://api.github.com/users/andcor02/following{/other_user}",
      "gists_url": "https://api.github.com/users/andcor02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andcor02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andcor02/subscriptions",
      "organizations_url": "https://api.github.com/users/andcor02/orgs",
      "repos_url": "https://api.github.com/users/andcor02/repos",
      "events_url": "https://api.github.com/users/andcor02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andcor02/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-12-22T09:27:58Z",
    "updated_at": "2017-10-26T09:20:29Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "So i have had reports that the following EthernetInterface/mbed-rtos does not compile with mbed 2.0 versions from V130 onwards. \r\n\r\nOriginal issue:\r\n\r\nhttps://developer.mbed.org/questions/76329/Compiler-errors-with-mbed-V131-v132-and-/\r\n\r\nI can confirm this is correct.\r\n\r\n**To recreate the issue:**\r\n\r\n- **Import:** https://developer.mbed.org/teams/NXP/code/Ethernet_UDP_client/?platform=FRDM-K64Fhttps://developer.mbed.org/teams/NXP/code/Ethernet_UDP_client/?platform=FRDM-K64F\r\n\r\n- **Select \"mbed\" revision V131/V132**\r\n\r\n- **Receive errors:**\r\n\r\n`Error: Struct \"_enet_handle\" has no field \"rxBdDirty\" in \"EthernetInterface/lwip-eth/arch/TARGET_Freescale/k64f_emac.c\", Line: 86, Col: 19`\r\n\r\n`Error: Struct \"_enet_handle\" has no field \"rxBdDirty\" in \"EthernetInterface/lwip-eth/arch/TARGET_Freescale/k64f_emac.c\", Line: 89, Col: 19`\r\n\r\nRegards,\r\n\r\nAndrea "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3370",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3370/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3370/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3370/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3370",
    "id": 193725738,
    "number": 3370,
    "title": "Atmel SAMD target blinky won't compile",
    "user": {
      "login": "malachib",
      "id": 1586399,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1586399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/malachib",
      "html_url": "https://github.com/malachib",
      "followers_url": "https://api.github.com/users/malachib/followers",
      "following_url": "https://api.github.com/users/malachib/following{/other_user}",
      "gists_url": "https://api.github.com/users/malachib/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/malachib/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/malachib/subscriptions",
      "organizations_url": "https://api.github.com/users/malachib/orgs",
      "repos_url": "https://api.github.com/users/malachib/repos",
      "events_url": "https://api.github.com/users/malachib/events{/privacy}",
      "received_events_url": "https://api.github.com/users/malachib/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345118,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20rtos",
        "name": "component: rtos",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 519535298,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20atmel",
        "name": "devices: atmel",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2016-12-06T09:45:04Z",
    "updated_at": "2017-08-21T14:22:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "`mbed compile` fails looking for \"mbed_rtx.h\" file which apparently isn't present for TARGET_Atmel"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3363",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3363/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3363/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3363/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3363",
    "id": 193316034,
    "number": 3363,
    "title": "Feature request: DFU",
    "user": {
      "login": "shayo",
      "id": 1977614,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1977614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shayo",
      "html_url": "https://github.com/shayo",
      "followers_url": "https://api.github.com/users/shayo/followers",
      "following_url": "https://api.github.com/users/shayo/following{/other_user}",
      "gists_url": "https://api.github.com/users/shayo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shayo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shayo/subscriptions",
      "organizations_url": "https://api.github.com/users/shayo/orgs",
      "repos_url": "https://api.github.com/users/shayo/repos",
      "events_url": "https://api.github.com/users/shayo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shayo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 38,
    "created_at": "2016-12-03T21:57:41Z",
    "updated_at": "2018-05-09T14:32:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "- Type: Enhancement\r\n\r\nI would very much like to transition to mbed OS5. However, it seems like DFU is not yet supported, which is a major blocker.\r\nI would like to ask to include DFU support in OS5 along with:\r\n1. single bank bootloader to allow large applications to be loaded\r\n2. bootloader with watchdog support.\r\n\r\nIn general, it would be also nice to have improved method for selecting which bootloader to use in the online compiler IDE.\r\n\r\n**Target**\r\nNRF51DK\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**mbed-cli version:** \r\n0.9.10\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3359",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3359/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3359/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3359/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3359",
    "id": 193094726,
    "number": 3359,
    "title": "WIZwiki7500(ECO) no export possible from online ide",
    "user": {
      "login": "sstaub",
      "id": 6450325,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6450325?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sstaub",
      "html_url": "https://github.com/sstaub",
      "followers_url": "https://api.github.com/users/sstaub/followers",
      "following_url": "https://api.github.com/users/sstaub/following{/other_user}",
      "gists_url": "https://api.github.com/users/sstaub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sstaub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sstaub/subscriptions",
      "organizations_url": "https://api.github.com/users/sstaub/orgs",
      "repos_url": "https://api.github.com/users/sstaub/repos",
      "events_url": "https://api.github.com/users/sstaub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sstaub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2016-12-02T11:28:53Z",
    "updated_at": "2017-06-01T16:32:22Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nWIZwiki7500(ECO)\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Toolchain version:**\r\nonline ide\r\n\r\nAn export from online-ide is not possible, no uVision4/5 gcc ...\r\nIn former times it was possible to export to a simple .zip file,\r\nthese option is also missing.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3216",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3216/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3216/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3216/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3216",
    "id": 187675509,
    "number": 3216,
    "title": "Cannot Export with latest mbed-dev",
    "user": {
      "login": "andcor02",
      "id": 20902962,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20902962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andcor02",
      "html_url": "https://github.com/andcor02",
      "followers_url": "https://api.github.com/users/andcor02/followers",
      "following_url": "https://api.github.com/users/andcor02/following{/other_user}",
      "gists_url": "https://api.github.com/users/andcor02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andcor02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andcor02/subscriptions",
      "organizations_url": "https://api.github.com/users/andcor02/orgs",
      "repos_url": "https://api.github.com/users/andcor02/repos",
      "events_url": "https://api.github.com/users/andcor02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andcor02/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "theotherjimmy",
      "id": 685409,
      "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theotherjimmy",
      "html_url": "https://github.com/theotherjimmy",
      "followers_url": "https://api.github.com/users/theotherjimmy/followers",
      "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
      "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
      "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
      "repos_url": "https://api.github.com/users/theotherjimmy/repos",
      "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "theotherjimmy",
        "id": 685409,
        "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theotherjimmy",
        "html_url": "https://github.com/theotherjimmy",
        "followers_url": "https://api.github.com/users/theotherjimmy/followers",
        "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
        "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
        "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
        "repos_url": "https://api.github.com/users/theotherjimmy/repos",
        "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 30,
    "created_at": "2016-11-07T10:30:50Z",
    "updated_at": "2018-01-11T19:51:07Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Currently I cannot export programs with the latest version of mbed-dev library, \r\nalthough older versions (with the older library structure) seem to work. \r\n\r\n1. This is irrespective of platform. \r\n2. Or toolchain.\r\n\r\nThe export error is: 'An error occurred during export. Please contact \r\nsupport.' \r\n\r\nRegards,\r\n\r\nAndrea"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3106",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3106/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3106/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3106/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3106",
    "id": 184457710,
    "number": 3106,
    "title": "Empty destructors code of HW drivers",
    "user": {
      "login": "nvlsianpu",
      "id": 17042885,
      "avatar_url": "https://avatars3.githubusercontent.com/u/17042885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nvlsianpu",
      "html_url": "https://github.com/nvlsianpu",
      "followers_url": "https://api.github.com/users/nvlsianpu/followers",
      "following_url": "https://api.github.com/users/nvlsianpu/following{/other_user}",
      "gists_url": "https://api.github.com/users/nvlsianpu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nvlsianpu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nvlsianpu/subscriptions",
      "organizations_url": "https://api.github.com/users/nvlsianpu/orgs",
      "repos_url": "https://api.github.com/users/nvlsianpu/repos",
      "events_url": "https://api.github.com/users/nvlsianpu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nvlsianpu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2016-10-21T10:56:20Z",
    "updated_at": "2018-03-23T10:52:53Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\n- Type: Bug\n\nMost of driver has empty destructor code. The consequence is that there is no possible to de-initialize corresponding hardware in uC. It might caused malfunction when uC common hw part (e.g. GPIO) were used for few  peripherial or so. It also might cause incresed power consumption because there is no entry to disable Hardware.\n\nFor example on nRF5 target we can use a pin as AnalogIn an after that as DigitalInOut. Once a pin was configured as analog pin, such a pin was assigned to the  ADC and the Digital part was disabled. Because of lack of destructor there is no entry to de-initialize analog part of a pin HW or disabling ADC at all. This cause that this pin will be unable to work well if we try to reuse it for DigitalInOut.\n\nexample of use case:\nhttps://github.com/ARMmbed/ci-test-shield/blob/master/TESTS/API/AnalogIn/AnalogIn.cpp\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3007",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3007/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3007/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3007/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/3007",
    "id": 182729621,
    "number": 3007,
    "title": "Blinky online compilation fails for K64F with 5.2.0-rc2",
    "user": {
      "login": "infinnovation",
      "id": 9962949,
      "avatar_url": "https://avatars3.githubusercontent.com/u/9962949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/infinnovation",
      "html_url": "https://github.com/infinnovation",
      "followers_url": "https://api.github.com/users/infinnovation/followers",
      "following_url": "https://api.github.com/users/infinnovation/following{/other_user}",
      "gists_url": "https://api.github.com/users/infinnovation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/infinnovation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/infinnovation/subscriptions",
      "organizations_url": "https://api.github.com/users/infinnovation/orgs",
      "repos_url": "https://api.github.com/users/infinnovation/repos",
      "events_url": "https://api.github.com/users/infinnovation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/infinnovation/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-10-13T08:45:57Z",
    "updated_at": "2017-11-09T17:08:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\n- Type: Bug\n- Related issue: #2961\n- Priority: Minor\n\n---\n## Bug\n\n**Target**\nK64F\n\n**Toolchain:**\nWhatever the online IDE uses\n\n**meed-os sha:**\na551faa\n\n**Expected behavior**\nCompilation would succeed after updating mbed-os to latest revision.\nFault would have been detected & fixed after rc1.\n\n**Actual behavior**\nTwo errors:\n\n```\nError: \"/tmp/glm2vL\", line 120 (column 3): Warning: L6312W: Empty Execution region description for region RW_IRAM1\nError: Undefined symbol mbedtls_hardware_poll (referred from entropy.K64F.o).\n```\n\n**Steps to reproduce**\nNew program -> Template: mbed OS Blinky LED HelloWorld\nIn Program Workspace, right-click on mbed-os -> Update...\nThe Library Details pane now shows Revision 2541:a551faa\nCompile\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2995",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2995/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2995/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2995/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/2995",
    "id": 182527328,
    "number": 2995,
    "title": "Project generated with project.py are incorrect",
    "user": {
      "login": "bcostm",
      "id": 5803932,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5803932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bcostm",
      "html_url": "https://github.com/bcostm",
      "followers_url": "https://api.github.com/users/bcostm/followers",
      "following_url": "https://api.github.com/users/bcostm/following{/other_user}",
      "gists_url": "https://api.github.com/users/bcostm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bcostm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bcostm/subscriptions",
      "organizations_url": "https://api.github.com/users/bcostm/orgs",
      "repos_url": "https://api.github.com/users/bcostm/repos",
      "events_url": "https://api.github.com/users/bcostm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bcostm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 15,
    "created_at": "2016-10-12T13:35:14Z",
    "updated_at": "2017-12-16T16:51:10Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\n\nType: Bug\nRelated issue: none\nPriority: Blocker\n\n---\n## Bug\n\n**Target**\nNUCLEO_F103RB\n\n**Toolchain:**\nARM uVision5\n\n**mbed version:** \n0.9.1\n\n**mbed sha:**\n(`git log -n1 --oneline`)\nf5fb485 Merge pull request #2967 from viquiram/master\n\n**Expected behavior**\nzip file containing uVision 5 project\n\n**Actual behavior**\n\n```\nTraceback (most recent call last):\n  File \"..\\mbed-os\\tools\\project.py\", line 14, in <module>\n    from tools.export import EXPORTERS, mcu_ide_matrix\n  File \"C:\\GITHUB\\mbed-os\\tools\\export\\__init__.py\", line 18, in <module>\n    from tools.export import codered, ds5_5, iar, makefile\n  File \"C:\\GITHUB\\mbed-os\\tools\\export\\iar\\__init__.py\", line 12, in <module>\n    from tools.export.cmsis import DeviceCMSIS\n  File \"C:\\GITHUB\\mbed-os\\tools\\export\\cmsis\\__init__.py\", line 9, in <module>\n    from xdg.BaseDirectory import save_data_path\nImportError: No module named xdg.BaseDirectory\n```\n\n**Steps to reproduce**\nLaunch the command:\n`mbed-os\\tools\\project.py -c -m NUCLEO_F103RB -p 0 -i uvision5`\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2955",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2955/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2955/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2955/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/2955",
    "id": 181528158,
    "number": 2955,
    "title": "UBLOX_EVK_ODIN_W2 Issues",
    "user": {
      "login": "screamerbg",
      "id": 5940648,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5940648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/screamerbg",
      "html_url": "https://github.com/screamerbg",
      "followers_url": "https://api.github.com/users/screamerbg/followers",
      "following_url": "https://api.github.com/users/screamerbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/screamerbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/screamerbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/screamerbg/subscriptions",
      "organizations_url": "https://api.github.com/users/screamerbg/orgs",
      "repos_url": "https://api.github.com/users/screamerbg/repos",
      "events_url": "https://api.github.com/users/screamerbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/screamerbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-10-06T21:17:58Z",
    "updated_at": "2017-05-31T10:14:21Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Description\n- Type: Bug\n- Priority: Major\n\n---\n## Cannot set A0, A3 high (via DigitalOut)\n\nAttach an LED and try it yourself\n## Digital loop tests failures (DigitalIn + DigitalOut)\n\nDigital I/O loop on D2 -> D3\nDigital I/O loop on D3 -> D2\n## Analog In failures (AnalogIn)\n\nAnalog Input on A1\nAnalog Input on A2\nAnalog Input on A3\nAnalog Input on A4 (suspecting that the app crashed)\n\n~~## I2C failures with EEPROM (I2C)~~\n~~I2C -  EEProm Read (fails with ARMCC, GCC)~~\n~~I2C -  TMP102 Temperature Read (fails with GCC)~~\n## SPI Failures\n\n**Toolchain:**\nGCC_ARM, ARM\n\n**meed-os sha:**\n22ec73b Merge pull request #2948 from jamike/Fixed_iarm_debug_built_failed\n\n**Steps to reproduce**\nTests available here https://github.com/armmbed/ci-test-shield\nHardware components here https://github.com/ARMmbed/mbed-HDK/tree/master/Production%20Design%20Projects/CITestShield\n\nCC @andreaslarssonublox\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2902",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2902/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2902/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2902/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/2902",
    "id": 180833283,
    "number": 2902,
    "title": "default_lib and ARMCC microlib - consistency",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-10-04T08:30:20Z",
    "updated_at": "2017-04-25T23:49:29Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Description\n- Type: Enhancement \n- Reference: https://github.com/ARMmbed/mbed-os/pull/2210 (partially for the very old code-base, describes the problem).\n- Priority: Major \n\n---\n## Bug\n\n**Expected behavior**\n\nAs GCC_ARM is one toolchain and provides 2 default_libs to be selected, ARMCC does not. You either have to select uARM or ARM. We might want to consider to unify this and have ARM only, and a target defines what default toolchain to support. This is also dragged into exporters where you have uvision (which one to use? ARM or uARM).\n\nOne related note for this unification, most of our targets (I guess all) provides separate linker script + startup file for microlib. I would assume we could unify  this as well, and any ARM supported target could be easily added to microlib.\n\n**Actual behavior**\n\nARM or uARM to be selected as toolchain.\n\n@theotherjimmy @sarahmarshy \n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2444",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2444/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2444/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2444/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/2444",
    "id": 171127616,
    "number": 2444,
    "title": "Some boards have inverted built-in LED state, this should be solved by HAL",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-08-15T08:21:13Z",
    "updated_at": "2017-06-11T22:55:37Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Every example that we write that targets multiple microcontrollers needs to deal with the fact that the wiring of built-in LEDs differs between micros. Sometimes you need to turn the GPIO port off to turn the LED on, other times you need to turn the port on. This makes writing portable code a pain in the ass, as every first instruction needs to be: 'check how the built-in LEDs are wired, and then declare some macro'. That is not good, but should be part of the HAL.\n\nSuggestion: Add two new defines, `BUILT_IN_LED_ON` and `BUILT_IN_LED_OFF`. Default them to 1/0, and allow overriding for some targets (like K64F) to 0/1.\n\ncc @niklas-arm @theotherjimmy @matthewelse\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1831",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1831/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1831/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1831/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/1831",
    "id": 157869498,
    "number": 1831,
    "title": "Thread::gettid() does not return the ID of the object it is invoked on",
    "user": {
      "login": "marcuschangarm",
      "id": 7205609,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7205609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcuschangarm",
      "html_url": "https://github.com/marcuschangarm",
      "followers_url": "https://api.github.com/users/marcuschangarm/followers",
      "following_url": "https://api.github.com/users/marcuschangarm/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcuschangarm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcuschangarm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcuschangarm/subscriptions",
      "organizations_url": "https://api.github.com/users/marcuschangarm/orgs",
      "repos_url": "https://api.github.com/users/marcuschangarm/repos",
      "events_url": "https://api.github.com/users/marcuschangarm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcuschangarm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345118,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20rtos",
        "name": "component: rtos",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2016-06-01T10:06:37Z",
    "updated_at": "2018-04-20T09:05:20Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "```\nThread* t1 = new Thread(...);\n\n// get new thread ID\nosThreadId id1 = t1->gettid();\n\n// get current thread ID\nosThreadId id2 = Thread::gettid();\n```\n\n`id1` should be the id of the new thread, t1. Instead `id1 == id2`.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1677",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1677/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1677/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1677/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/1677",
    "id": 149655708,
    "number": 1677,
    "title": "FRDM K64F cannot do UDP Multicast with current driver",
    "user": {
      "login": "BlackstoneEngineering",
      "id": 5093331,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5093331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BlackstoneEngineering",
      "html_url": "https://github.com/BlackstoneEngineering",
      "followers_url": "https://api.github.com/users/BlackstoneEngineering/followers",
      "following_url": "https://api.github.com/users/BlackstoneEngineering/following{/other_user}",
      "gists_url": "https://api.github.com/users/BlackstoneEngineering/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BlackstoneEngineering/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BlackstoneEngineering/subscriptions",
      "organizations_url": "https://api.github.com/users/BlackstoneEngineering/orgs",
      "repos_url": "https://api.github.com/users/BlackstoneEngineering/repos",
      "events_url": "https://api.github.com/users/BlackstoneEngineering/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BlackstoneEngineering/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-04-20T04:29:48Z",
    "updated_at": "2017-05-04T21:50:44Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "The K64F cannot do UDP multicast with its current LWIP driver. See issue and solution here : https://developer.mbed.org/forum/bugs-suggestions/topic/5434/?page=1#comment-40242"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1666",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1666/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1666/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1666/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/1666",
    "id": 148136353,
    "number": 1666,
    "title": "MBED hangs during bootloader program jump while using rtos",
    "user": {
      "login": "pi19404",
      "id": 2353588,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2353588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pi19404",
      "html_url": "https://github.com/pi19404",
      "followers_url": "https://api.github.com/users/pi19404/followers",
      "following_url": "https://api.github.com/users/pi19404/following{/other_user}",
      "gists_url": "https://api.github.com/users/pi19404/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pi19404/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pi19404/subscriptions",
      "organizations_url": "https://api.github.com/users/pi19404/orgs",
      "repos_url": "https://api.github.com/users/pi19404/repos",
      "events_url": "https://api.github.com/users/pi19404/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pi19404/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 519155968,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20bootloader",
        "name": "component: bootloader",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-04-13T17:58:13Z",
    "updated_at": "2018-05-03T09:46:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi\n\ni am using MBED to implement a bootloader based application on NUCLEO_091RC board and STM32F030CC controller also.\n\nThe application works correctly when i do not use RTOS in my main application.\nWhen i include RTOS in my application,after program jump the kernel hangs\n\nIf i do not perform any program jumps then RTOS works well in the bootloader application also\n\nusing GDB i found that program enters WWDG_IRQHandler () just after execution of the below function __svcKernelStart () at /mnt/hgfs/repos/mbed/libraries/rtos/rtx/TARGET_CORTEX_M/rt_CMSIS.c:414\n\n__svcKernelStart () calls the svcKernelStart () function in privileged mode\nand code for that is found at line 198 of mbed/libraries/rtos/rtx/TARGET_CORTEX_M/rt_CMSIS.c file\n# define SVC_Call(f)                                                            \\\n\n  __asm volatile                                                                 \\\n  (                                                                            \\\n    \"ldr r7,=\"#f\"\\n\\t\"                                                         \\\n    \"mov r12,r7\\n\\t\"                                                           \\\n    \"svc 0\"                                                                    \\\n    :               \"=r\" (__r0), \"=r\" (__r1), \"=r\" (__r2), \"=r\" (__r3)         \\\n    :                \"r\" (__r0),  \"r\" (__r1),  \"r\" (__r2),  \"r\" (__r3)         \\\n    : \"r7\", \"r12\", \"lr\", \"cc\"                                                  \\\n  );\n\nbelow is a test program to simulate the issue :\ni jump to the same default program address 0x08000000 in and RTOS thread\n\nhttps://gist.github.com/pi19404/928e024cd8008e814357738877cfd67e\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1378",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1378/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1378/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1378/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/1378",
    "id": 110147022,
    "number": 1378,
    "title": "multiple tickers stop working",
    "user": {
      "login": "andrewjfox",
      "id": 14087194,
      "avatar_url": "https://avatars0.githubusercontent.com/u/14087194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewjfox",
      "html_url": "https://github.com/andrewjfox",
      "followers_url": "https://api.github.com/users/andrewjfox/followers",
      "following_url": "https://api.github.com/users/andrewjfox/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewjfox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewjfox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewjfox/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewjfox/orgs",
      "repos_url": "https://api.github.com/users/andrewjfox/repos",
      "events_url": "https://api.github.com/users/andrewjfox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewjfox/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 27,
    "created_at": "2015-10-07T03:42:58Z",
    "updated_at": "2018-04-13T17:04:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi, I've read about previous issues with tickers being resolved, however I'm having trouble and want to confirm if ticker functions are all ok. I'm using nRF51422 based board and nRF51-DK platform on mbed to generate FOTA files.\n\nCode has BLE running. Problem occurs after several seconds when connected, or after 10's seconds when not connected.\n\nFollowing is class used to drive RGB leds with single ticker for each led (there are 2 leds\n\n```\n#include \"mbed.h\"\n\nclass RGBColour\n{\npublic:\n    RGBColour(int r=0, int g=0, int b=0) {\n        red = r;\n        green = g;\n        blue = b;\n        brightness = 100;\n    }    \n\n    bool isOn(void) {\n        if(!brightness) return false;\n        if(!red && !green && !blue) return false;\n        return true;\n    }    \n\n    int red;        // 0 - 100 %\n    int green;\n    int blue;\n    int brightness; // 0 - 100 %\n};\n\n\n\nclass RGBControl {\npublic:\n#ifdef TARGET_DK\n    const static int LED_ON    = 0;\n    const static int LED_OFF   = 1;\n#else\n    const static int LED_ON    = 1;\n    const static int LED_OFF   = 0;\n#endif\n\n    // 20ms PWM period with ? count resolution on RGB values\n    // any faster and interrupts can't service in time\n    const static float PWM_PERIOD = 0.025;\n    const static int COUNTS_PER_PERIOD = 10;\n    const static float SEC_PER_COUNT = (PWM_PERIOD / (float)COUNTS_PER_PERIOD);\n\n    RGBControl(PinName red, PinName green, PinName blue) : _red(red), _green(green), _blue(blue) {  \n        rgb(RGBColour(0,0,0)); \n    }\n\n    /** @param RGB values\n    */        \n    void rgb(RGBColour c) {        \n        _ticker.detach();\n        _red = LED_OFF;\n        _green = LED_OFF;\n        _blue = LED_OFF;\n\n        if(c.isOn()) {\n            _tickerCompare[0] = (((c.red * c.brightness) / 100) * COUNTS_PER_PERIOD) / 100;\n            _tickerCompare[1] = (((c.green * c.brightness) / 100) * COUNTS_PER_PERIOD) / 100;\n            _tickerCompare[2] = (((c.blue * c.brightness) / 100) * COUNTS_PER_PERIOD) / 100;\n\n            _tickerCount = COUNTS_PER_PERIOD;\n            _ticker.attach(this, &RGBControl::tickerCallback, SEC_PER_COUNT);\n        }    \n    }\n\nprivate:\n    DigitalOut _red;\n    DigitalOut _green;\n    DigitalOut _blue;\n    Ticker _ticker;\n    int _tickerCount;\n    int _tickerCompare[3];\n\n    void tickerCallback(void)\n    {\n        if(++_tickerCount >= COUNTS_PER_PERIOD) { \n            _tickerCount=0;\n\n            if(_tickerCompare[0]) _red = LED_ON;\n            if(_tickerCompare[1]) _green = LED_ON;\n            if(_tickerCompare[2]) _blue = LED_ON;\n        }    \n\n        if(_tickerCount == _tickerCompare[0]) _red = LED_OFF;\n        if(_tickerCount == _tickerCompare[1]) _green = LED_OFF;\n        if(_tickerCount == _tickerCompare[2]) _blue = LED_OFF;\n    }  \n};\n\n```\n\nif I drive a single LED, all good, if I drive 2 leds simultaneously, both of the tickers stop after several seconds.\n\n```\nRGBControl led1(LED1_RED,LED1_GREEN,LED1_BLUE);\nRGBControl led2(LED2_RED,LED2_GREEN,LED2_BLUE);\n...\nwhile(1)\n{\n...\nif(triggerEvent) {\n    // call this every second, increments through colour table\n    led1.rgb(colour[currentColour]);\n    if(++currentColour >= COLOUR_MAX) currentColour = COLOUR_BLACK;\n    led2.rgb(colour[currentColour]);\n\n    triggerEvent = false;\n}\n...\n}\n```\n\nIs there an issue with my code, or is it possibly an unresolved ticker issue?\n\nAndrew \n\nSome additional background:\n- my code has 1/2 doz other tickers and timers in main loop for various functions, but are all quite slow and haven't noticed any issues until led class started freezing\n- BLE functions keep working in background even when led class freezes\n- other gpio functions, that read inputs using InterruptIn and have timers for debouncing, also stop working when leds freeze\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1046",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1046/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1046/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1046/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/1046",
    "id": 68875991,
    "number": 1046,
    "title": "Ticker class causes SoftDevice Assert and hard fault (nRF51822) ",
    "user": {
      "login": "en0b",
      "id": 9415850,
      "avatar_url": "https://avatars3.githubusercontent.com/u/9415850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/en0b",
      "html_url": "https://github.com/en0b",
      "followers_url": "https://api.github.com/users/en0b/followers",
      "following_url": "https://api.github.com/users/en0b/following{/other_user}",
      "gists_url": "https://api.github.com/users/en0b/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/en0b/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/en0b/subscriptions",
      "organizations_url": "https://api.github.com/users/en0b/orgs",
      "repos_url": "https://api.github.com/users/en0b/repos",
      "events_url": "https://api.github.com/users/en0b/events{/privacy}",
      "received_events_url": "https://api.github.com/users/en0b/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2015-04-16T08:49:57Z",
    "updated_at": "2017-07-18T07:48:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "See details here: https://devzone.nordicsemi.com/question/31378/hard-fault-after-a-while-when-connected/\n\nAccording to the Nordic support it \"should\" be okay to disable interrupt for 10-20us and they say if you disable them for more than 200us you are going to have soft device asserts for sure. The Ticker class globally disables interrupts in us_ticker_api.c for about 62us every \"tick\". In my case this lead to hard faults after staying in a connection for several hours to days.\n\nI think someone should fix this :)\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/888",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/888/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/888/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/888/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/888",
    "id": 56790415,
    "number": 888,
    "title": "add I2C busreset to i2c.cpp",
    "user": {
      "login": "frankvnk",
      "id": 7072305,
      "avatar_url": "https://avatars1.githubusercontent.com/u/7072305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankvnk",
      "html_url": "https://github.com/frankvnk",
      "followers_url": "https://api.github.com/users/frankvnk/followers",
      "following_url": "https://api.github.com/users/frankvnk/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankvnk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankvnk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankvnk/subscriptions",
      "organizations_url": "https://api.github.com/users/frankvnk/orgs",
      "repos_url": "https://api.github.com/users/frankvnk/repos",
      "events_url": "https://api.github.com/users/frankvnk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankvnk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-06T09:38:25Z",
    "updated_at": "2017-10-12T12:09:50Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Adding I2C busreset\n\nI attempted to make my [KL25Z busreset code](http://developer.mbed.org/users/frankvnk/code/KL25Z_I2C_busreset/) generic but quickly found out it was going to be large and slow : a generic function for finding out exactly what pins are used turns out to be quite complicated.\nPerhaps the busreset can be implemented in i2c.cpp – fairly easy as we already know what pins are declared. I would suggest to add this to all platforms as it is a very handy tool to unlock the i2c bus - easier when we create test code – in most cases, we will no longer need to power cycle the board upon a bus lockup. Perhaps we even need to add a call to busreset when the ctor is instantiated to prevent i2c bus lockups at power up. \nBit banging the pins can be solved using DigitalInOut (code below is not yet tested but should work):\n\n``` C\nvoid I2C_busreset(void)\n{\n    DigitalInOut sclpin(scl, PIN_INPUT, PullNone, 1);\n    DigitalIn sdapin(sda);\n    if(sclpin == 0 || sdapin == 0)  // I2C bus lock-up occured when SCL/SDA are not high\n    {\n        while(sclpin == 0)          // bit bang SCL until the offending device releases the bus\n        {\n            sclpin.output();\n            sclpin = 1;\n            wait_ms(1);\n            sclpin = 0;\n            wait_ms(1);\n            sclpin.input();\n        }\n    }\n}\n```\n\n**Notes**\n- The 1ms timing is probably a little too slow. Perhaps reading the frequency set by the user or using the default 100KHz frequency would be better.\n- Is it safe to assume the scl and sda pins return to their initial state once the busreset function is exited or do we need to add a destructor at the end?\n- Above code is prone to hanging the system if scl does not return to a high state. According to most datasheets, bit banging it 10 times should be sufficient, so perhaps we should follow this path and have the function return succes or failure – this way, the user can decide in his code whether he wants to give it another try or not.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/859",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/859/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/859/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/859/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/859",
    "id": 55310039,
    "number": 859,
    "title": "Change Thread ctor stack pointer to uint32_t*",
    "user": {
      "login": "neilt6",
      "id": 2797902,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2797902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neilt6",
      "html_url": "https://github.com/neilt6",
      "followers_url": "https://api.github.com/users/neilt6/followers",
      "following_url": "https://api.github.com/users/neilt6/following{/other_user}",
      "gists_url": "https://api.github.com/users/neilt6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neilt6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neilt6/subscriptions",
      "organizations_url": "https://api.github.com/users/neilt6/orgs",
      "repos_url": "https://api.github.com/users/neilt6/repos",
      "events_url": "https://api.github.com/users/neilt6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neilt6/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345118,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20rtos",
        "name": "component: rtos",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2015-01-23T17:43:07Z",
    "updated_at": "2017-10-15T15:24:56Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "As a followup to pull request #812, I believe the stack pointer in the Thread constructor should be changed to accept a `uint32_t*` instead of an `unsigned char*`. Reason being is I manually define my own stacks, and I have to make sure they're word-aligned to avoid nasty surprises like so:\n\n``` C++\nunsigned char threadStack[1024] __attribute__((aligned));\n```\n\nNot only is `__attribute__((aligned))` not portable, but I would venture a guess that the average mbed developer has no idea what it does or why it's necessary is this situation. Changing the constructor will force these developers to properly align their manually defined stacks without requiring an explanation.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/470",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/470/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/470/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/470/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/470",
    "id": 41496386,
    "number": 470,
    "title": "RTOS + USBDevice doesn't work (lpc1786)",
    "user": {
      "login": "alfaleader",
      "id": 2153135,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2153135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alfaleader",
      "html_url": "https://github.com/alfaleader",
      "followers_url": "https://api.github.com/users/alfaleader/followers",
      "following_url": "https://api.github.com/users/alfaleader/following{/other_user}",
      "gists_url": "https://api.github.com/users/alfaleader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alfaleader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alfaleader/subscriptions",
      "organizations_url": "https://api.github.com/users/alfaleader/orgs",
      "repos_url": "https://api.github.com/users/alfaleader/repos",
      "events_url": "https://api.github.com/users/alfaleader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alfaleader/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345068,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20usb",
        "name": "component: usb",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-08-29T12:41:40Z",
    "updated_at": "2018-04-26T05:26:38Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "When using the RTOS and usbdevice (in my case usbmidi) together the mbed just halts at the place where I initiate the usbmidi object.\n\nJust using the 2 example programs from rtos and usbmidi together.\n"
  }
]
