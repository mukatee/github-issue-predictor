[
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5492",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5492/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5492/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5492/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5492",
    "id": 273579914,
    "number": 5492,
    "title": "Nordic bootloader support needed",
    "user": {
      "login": "dlfryar",
      "id": 960501,
      "avatar_url": "https://avatars0.githubusercontent.com/u/960501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlfryar",
      "html_url": "https://github.com/dlfryar",
      "followers_url": "https://api.github.com/users/dlfryar/followers",
      "following_url": "https://api.github.com/users/dlfryar/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlfryar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlfryar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlfryar/subscriptions",
      "organizations_url": "https://api.github.com/users/dlfryar/orgs",
      "repos_url": "https://api.github.com/users/dlfryar/repos",
      "events_url": "https://api.github.com/users/dlfryar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlfryar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-11-13T21:14:42Z",
    "updated_at": "2017-11-14T10:12:10Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n\r\n**Target**\r\nnrf52 series (nrf52832 and nrf52840)\r\n\r\n**Toolchain:**\r\nGCC_ARM, ARM, IAR\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\nNordic bootloader support needed\r\n\r\nbootloader_util_reset()\r\n\r\nhttps://github.com/ARMmbed/mbed-os/blob/master/targets/TARGET_NORDIC/TARGET_NRF5/TARGET_SDK11/libraries/bootloader_dfu/bootloader_util.c#L60\r\n\r\nhttps://os.mbed.com/docs/v5.6/tutorials/creating-and-using-a-bootloader.html"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5480",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5480/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5480/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5480/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5480",
    "id": 273344409,
    "number": 5480,
    "title": "MAX32630 BLE - onDataSent callback not called",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515545581,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20ble",
        "name": "component: ble",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 550082561,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20maxim",
        "name": "devices: maxim",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-11-13T08:21:50Z",
    "updated_at": "2017-11-16T11:19:06Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nMAX32630FTHR\r\n\r\n**Toolchain:**\r\nUnknown\r\n\r\n**mbed-os sha:**\r\nIt says 'latest mbed', but not sure which one they mean.\r\n\r\nAccording to https://os.mbed.com/questions/79492/blegattServeronDataSentonDataSent-never-/ `onDataSent` callback is no longer invoked on this MAXIM target."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5478",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5478/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5478/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5478/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5478",
    "id": 273179764,
    "number": 5478,
    "title": "Add support for Waveshare BLE400",
    "user": {
      "login": "jeanmatthieud",
      "id": 1443167,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1443167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeanmatthieud",
      "html_url": "https://github.com/jeanmatthieud",
      "followers_url": "https://api.github.com/users/jeanmatthieud/followers",
      "following_url": "https://api.github.com/users/jeanmatthieud/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeanmatthieud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeanmatthieud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeanmatthieud/subscriptions",
      "organizations_url": "https://api.github.com/users/jeanmatthieud/orgs",
      "repos_url": "https://api.github.com/users/jeanmatthieud/repos",
      "events_url": "https://api.github.com/users/jeanmatthieud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeanmatthieud/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-11-11T22:05:37Z",
    "updated_at": "2018-03-12T14:52:41Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement\r\n\r\n## Enhancement\r\nIs it possible to add support for [Waveshare BLE400](https://www.waveshare.com/wiki/BLE400) board ?\r\nI tried to do it myself but without success.\r\n\r\nThe Pins should be edited in this way:\r\n```\r\n    P00  = p0,\r\n    P01  = p1,\r\n    P02  = p2,\r\n    P03  = p3,\r\n    P04  = p4,\r\n    P05  = p5,\r\n    P06  = p6,\r\n    P07  = p7,\r\n\r\n    P08  = p8,\r\n    P09  = p9,\r\n    P010 = p10,\r\n    P11 = p11,\r\n    P12 = p12,\r\n    P13 = p13,\r\n    P14 = p14,\r\n    P15 = p15,\r\n\r\n    P16 = p16,\r\n    P17 = p17,\r\n    P18 = p18,\r\n    P19 = p19,\r\n    P20 = p20,\r\n    P21 = p21,\r\n    P22 = p22,\r\n    P23 = p23,\r\n\r\n    P24 = p24,\r\n    P25 = p25,\r\n    P26 = p26,\r\n    P27 = p27,\r\n    P28 = p28,\r\n    P29 = p29,\r\n    P30 = p30,\r\n\r\n    LED0    = p18,\r\n    LED1    = p19,\r\n    LED2    = p20,\r\n    LED3    = p21,\r\n    LED4    = p22,\r\n\r\n    BUTTON1 = p16,\r\n    BUTTON2 = p17,\r\n\r\n    KEY1 = p16,\r\n    KEY2 = p17,\r\n```\r\n\r\nI'm not sure for RX, TX and CTS, RDS, but if the changes are made, I could test it and correct the files."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5467",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5467/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5467/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5467/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5467",
    "id": 272567344,
    "number": 5467,
    "title": "Export: uvision5 + STM32 does not flash",
    "user": {
      "login": "rspelta",
      "id": 3882627,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3882627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rspelta",
      "html_url": "https://github.com/rspelta",
      "followers_url": "https://api.github.com/users/rspelta/followers",
      "following_url": "https://api.github.com/users/rspelta/following{/other_user}",
      "gists_url": "https://api.github.com/users/rspelta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rspelta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rspelta/subscriptions",
      "organizations_url": "https://api.github.com/users/rspelta/orgs",
      "repos_url": "https://api.github.com/users/rspelta/repos",
      "events_url": "https://api.github.com/users/rspelta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rspelta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "theotherjimmy",
      "id": 685409,
      "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theotherjimmy",
      "html_url": "https://github.com/theotherjimmy",
      "followers_url": "https://api.github.com/users/theotherjimmy/followers",
      "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
      "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
      "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
      "repos_url": "https://api.github.com/users/theotherjimmy/repos",
      "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "theotherjimmy",
        "id": 685409,
        "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theotherjimmy",
        "html_url": "https://github.com/theotherjimmy",
        "followers_url": "https://api.github.com/users/theotherjimmy/followers",
        "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
        "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
        "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
        "repos_url": "https://api.github.com/users/theotherjimmy/repos",
        "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-11-09T13:40:02Z",
    "updated_at": "2018-04-19T19:22:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Targets \"tested\": NUCLEO_L476ZI, SILICA_SENSOR_NODE\r\n- IDE used: uVision 5.24\r\n- Project: mbed-os-example-blinky (lastest version)\r\n\r\nMarcelo has asked to me to open this issue.\r\ncc: @MarceloSalazar \r\n\r\n**Issue:**\r\nWhen I export the project [(mbed-os-example-blinky)](https://github.com/ARMmbed/mbed-os-example-blinky) for uVision5 and I try to debug it, I get this error:\r\n\r\n![image006](https://user-images.githubusercontent.com/3882627/32607580-c4dca060-c559-11e7-92ca-98db5e301c44.png)\r\n\r\nit’s something to do with the flash algorithm not being set correctly. It seems that the project is exported wrongly. \r\n\r\n**My temporary solution:**\r\nI find out a workaround setting manually the project. Here my steps:\r\n1. mbed import https://github.com/ARMmbed/mbed-os-example-blinky \r\n2. mbed export -i uvision5 -m SILICA_SENSOR_NODE\r\n3. open the project and if needed download the libreries required\r\n4. Even if you have this error, ignore it\r\n![1](https://user-images.githubusercontent.com/3882627/32607831-76c50376-c55a-11e7-9d30-cd07b045904d.jpg)\r\n5. go to \"Project -> Options for the target 'mbed-os-example-blinky'\"\r\n6. Click on \"Debug\" tab\r\n![2](https://user-images.githubusercontent.com/3882627/32607852-84f3d346-c55a-11e7-9488-941a2b780fef.jpg)\r\n7. Click on \"Settings\" button, it is near \"Use: ST-Link Debugger\"\r\n8. Select \"Connect: with pre-reset\" (at the bottom of the form, in \"Connect & Reset Options\")\r\n![3](https://user-images.githubusercontent.com/3882627/32607860-8ecb97e6-c55a-11e7-8f4d-2a049934229f.jpg)\r\n9. Click on \"Flash download\" tab\r\n10. Click on \"add\" button\r\n![4](https://user-images.githubusercontent.com/3882627/32607879-9f20b662-c55a-11e7-8daa-ca005d35f3eb.jpg)\r\n11. Select \"STML4xx 1MB Flash\", it is the algorithm. Now it is setted correctly!\r\n![5](https://user-images.githubusercontent.com/3882627/32607890-a99e3146-c55a-11e7-9ae9-b07300b20ef2.jpg)\r\n\r\n**Side note:**  When I open the project in uvision, it complains about a missing device pack for STM32L4 even though it HAS been installed. Even if you try and re-install the pack completely, it still complains every time you open the project. About this issue seems you already know this problem and it will be fixed in the next release.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5448",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5448/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5448/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5448/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5448",
    "id": 271833121,
    "number": 5448,
    "title": "Add AnalogIn interrupt to save power",
    "user": {
      "login": "adustm",
      "id": 14051363,
      "avatar_url": "https://avatars0.githubusercontent.com/u/14051363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adustm",
      "html_url": "https://github.com/adustm",
      "followers_url": "https://api.github.com/users/adustm/followers",
      "following_url": "https://api.github.com/users/adustm/following{/other_user}",
      "gists_url": "https://api.github.com/users/adustm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adustm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adustm/subscriptions",
      "organizations_url": "https://api.github.com/users/adustm/orgs",
      "repos_url": "https://api.github.com/users/adustm/repos",
      "events_url": "https://api.github.com/users/adustm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adustm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-11-07T13:35:24Z",
    "updated_at": "2017-11-07T14:44:06Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Description\r\n- Type: Enhancement\r\n- Related issue: https://os.mbed.com/questions/79353/How-to-use-the-analog-comparators-of-thi\r\n- Priority: Major\r\n\r\n\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nMbed-os does not offer an interrupt for analogin objects. This is a problem for battery powered MCUs that could wake-up only when needed instead of pooling the ADC with a timer interrupt.\r\n\r\n**Suggested enhancement**\r\nSupport comparator interrupt would allow the wakeup of the MCU only when needed\r\n**Pros**\r\nSave power, which is important in the context of IOT devices.\r\n\r\n**Cons**\r\n\r\ncc @bcostm @screamerbg @LMESTM @jeromecoutant "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5446",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5446/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5446/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5446/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/5446",
    "id": 271760805,
    "number": 5446,
    "title": "Patch for an Uart issue in ISR",
    "user": {
      "login": "soleilplanet",
      "id": 21167626,
      "avatar_url": "https://avatars3.githubusercontent.com/u/21167626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soleilplanet",
      "html_url": "https://github.com/soleilplanet",
      "followers_url": "https://api.github.com/users/soleilplanet/followers",
      "following_url": "https://api.github.com/users/soleilplanet/following{/other_user}",
      "gists_url": "https://api.github.com/users/soleilplanet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soleilplanet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soleilplanet/subscriptions",
      "organizations_url": "https://api.github.com/users/soleilplanet/orgs",
      "repos_url": "https://api.github.com/users/soleilplanet/repos",
      "events_url": "https://api.github.com/users/soleilplanet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soleilplanet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 407548740,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/do%20not%20merge",
        "name": "do not merge",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-11-07T09:23:25Z",
    "updated_at": "2018-04-19T19:32:58Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/5446",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/5446",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/5446.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/5446.patch"
    },
    "body": "## Description\r\n\r\nChanges:\r\n    1. SerialBase.cpp: the change of separating initialization of 'ret' is to avoid the compiler optimizing it. It is observed that on ublox EVK NINA-B1, 'ret' is always returning false as it has been optimized.\r\n    2. Serial.cpp/Serial.h: the change is to avoid calling mutex lock/unlock and accessing file in ISR context.\r\n\r\n    Note: there's risk that with this patch putc/getc will behave differently in ISR and non-ISR context. Further discussions required.\r\n###         note:\r\n           observed in ublox EVK NINA-B1: \r\n               **Mutex 0x20005690 error -6: Not allowed in ISR context** (occurred in Serial::lock() and Serial::unlock())\r\n               **Error - reading from a file in an ISR or critical section** (occurred in Stream::getc() and Stream::putc() )\r\n\r\nreference issue : https://github.com/ARMmbed/mbed-os/issues/4686\r\n\r\n## Status\r\n\r\nIN DEVELOPMENT\r\n\r\n## Migrations\r\n\r\nSerial class will have its own instance of putc() and getc() implementations.\r\n\r\n## Todos\r\n\r\n- [v] Tests\r\n\r\n## Deploy notes\r\n\r\nNo changes required.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5421",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5421/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5421/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5421/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5421",
    "id": 270680421,
    "number": 5421,
    "title": "build fails for ARM toolchain",
    "user": {
      "login": "gerhardtgao",
      "id": 20888503,
      "avatar_url": "https://avatars1.githubusercontent.com/u/20888503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gerhardtgao",
      "html_url": "https://github.com/gerhardtgao",
      "followers_url": "https://api.github.com/users/gerhardtgao/followers",
      "following_url": "https://api.github.com/users/gerhardtgao/following{/other_user}",
      "gists_url": "https://api.github.com/users/gerhardtgao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gerhardtgao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gerhardtgao/subscriptions",
      "organizations_url": "https://api.github.com/users/gerhardtgao/orgs",
      "repos_url": "https://api.github.com/users/gerhardtgao/repos",
      "events_url": "https://api.github.com/users/gerhardtgao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gerhardtgao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 17,
    "created_at": "2017-11-02T14:46:37Z",
    "updated_at": "2017-12-04T07:43:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Related issue: `#abc`\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\"--cpu=Cortex-M\" is not generated in .link_files.txt\r\n\r\n**Target**\r\nK64F|EFM32GG_STK3700| .......\r\n\r\n**Toolchain:**\r\nARM\r\n\r\n**Toolchain version:** ARM Compiler 5.06 update 5 (build 528)\r\n\r\n**mbed-cli version:** \r\n(`mbed --version`) 1.2.2\r\n\r\n**Steps to reproduce**\r\nimport mbed-os-example-blinky project\r\nmbed compile -m K64F -t ARM\r\nmbed compile -m efm32gg_stk3700 -t ARM\r\n\r\n**Expected behavior**\r\nbuild success\r\n\r\n**Actual behavior**\r\nLink: mbed-os-example-blinky\r\nError: C9912E: No **--cpu selected**\r\nError: L6636E: Pre-processor step failed for './mbed-os/targets/TARGET_Freescale/TARGET_MCUXpresso_MCUS/TARGET_MCU_K64F/device/TOOLCHAIN_ARM_STD/MK64FN1M0xxx12.sct'\r\nError: L6372E: Image needs at least one load region.\r\nNot enough information to list the image map.\r\nFinished: 1 information, 0 warning and 2 error messages.\r\n[ERROR] Error: C9912E: No --cpu selected\r\nError: L6636E: Pre-processor step failed for './mbed-os/targets/TARGET_Freescale/TARGET_MCUXpresso_MCUS/TARGET_MCU_K64F/device/TOOLCHAIN_ARM_STD/MK64FN1M0xxx12.sct'\r\nError: L6372E: Image needs at least one load region.\r\nNot enough information to list the image map.\r\nFinished: 1 information, 0 warning and 2 error messages.\r\n\r\n**a possible method to fix**\r\nin mbed-os\\tools\\toolchains\\arm.py, at line 79, change \r\nself.ld = [join(ARM_BIN, \"armlink\")] + self.flags['ld']\r\nto\r\nself.ld = [join(ARM_BIN, \"armlink\")] + self.flags['ld'] + [\"--cpu=%s\" % cpu]"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5416",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5416/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5416/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5416/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5416",
    "id": 270372217,
    "number": 5416,
    "title": "mbed config does not warn on overriding non-existant setting",
    "user": {
      "login": "geky",
      "id": 1075160,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geky",
      "html_url": "https://github.com/geky",
      "followers_url": "https://api.github.com/users/geky/followers",
      "following_url": "https://api.github.com/users/geky/following{/other_user}",
      "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
      "organizations_url": "https://api.github.com/users/geky/orgs",
      "repos_url": "https://api.github.com/users/geky/repos",
      "events_url": "https://api.github.com/users/geky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "theotherjimmy",
      "id": 685409,
      "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theotherjimmy",
      "html_url": "https://github.com/theotherjimmy",
      "followers_url": "https://api.github.com/users/theotherjimmy/followers",
      "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
      "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
      "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
      "repos_url": "https://api.github.com/users/theotherjimmy/repos",
      "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "theotherjimmy",
        "id": 685409,
        "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theotherjimmy",
        "html_url": "https://github.com/theotherjimmy",
        "followers_url": "https://api.github.com/users/theotherjimmy/followers",
        "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
        "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
        "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
        "repos_url": "https://api.github.com/users/theotherjimmy/repos",
        "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-11-01T16:43:54Z",
    "updated_at": "2017-11-01T16:50:36Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Consider this mbed_lib.json\r\n\r\n``` json\r\n\"name\": \"name\",\r\n\"config\": {\r\n    \"make_this_work\": false\r\n},\r\n\"target_overrides\": {\r\n    \"K64F\": {\r\n        \"make_this_wonk\": true\r\n    }\r\n}\r\n```\r\n\r\nCurrently this compiles perfectly fine, without any warnings.\r\n\r\nThe issue is that MBED_CONF_NAME_MAKE_THIS_WORK is set to false.\r\n\r\nMBED_CONF_NAME_MAKE_THIS_WONK seems to not get defined, so I can't think of any concerns with backwards compatibility if we remove this \"feature\".\r\n\r\nAlso should we care about case sensitivity? The resulting defines are not case sensitive (they're all capitalized).\r\n\r\n``` json\r\n\"name\": \"name\",\r\n\"config\": {\r\n    \"make_this_work\": false\r\n},\r\n\"target_overrides\": {\r\n    \"K64F\": {\r\n        \"MAKE_THIS_WORK\": true\r\n    }\r\n}\r\n```\r\n\r\nMBED_CONF_NAME_MAKE_THIS_WORK is still false.\r\n\r\ncc @theotherjimmy "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5414",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5414/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5414/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5414/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5414",
    "id": 270314052,
    "number": 5414,
    "title": "UBLOX_EVK_ODIN_W2 linking error with IAR8.2",
    "user": {
      "login": "artokin",
      "id": 12035144,
      "avatar_url": "https://avatars1.githubusercontent.com/u/12035144?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artokin",
      "html_url": "https://github.com/artokin",
      "followers_url": "https://api.github.com/users/artokin/followers",
      "following_url": "https://api.github.com/users/artokin/following{/other_user}",
      "gists_url": "https://api.github.com/users/artokin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artokin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artokin/subscriptions",
      "organizations_url": "https://api.github.com/users/artokin/orgs",
      "repos_url": "https://api.github.com/users/artokin/repos",
      "events_url": "https://api.github.com/users/artokin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artokin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847980,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20duplicate",
        "name": "type: duplicate",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-11-01T13:48:38Z",
    "updated_at": "2017-11-03T12:17:02Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nIAR\r\n\r\n**Toolchain version:**\r\n8.2\r\n\r\n**mbed-cli version:** \r\n(`1.1.1`)\r\n\r\n**mbed-os sha:**\r\n8e57107 (HEAD -> feature-iar8, origin/feature-iar8) Splited RAM section not compatible with dynamic HEAP.\r\n\r\n**Actual behavior**\r\nApplication fails to link with IAR8.2. \r\n\r\n```javascript\r\nLink: mbed-os-example-mesh-minimal\r\nError[Li060]: module \"cb_main.o(libublox-odin-w2-driver.a)\" contains C++ code\r\n          built for use with the (E)C++98 library. This code is not link\r\n          compatible with the new (C++14) library.\r\nError[Li009]: runtime model conflict: Module\r\n          cb_main.o(libublox-odin-w2-driver.a) specifies that '__CPP_Language'\r\n          must be 'C++', but module main.o has the value 'C++14'. Modules\r\n          compiled with C++14 are not link-compatible with modules that are\r\n          compiled with older C++.\r\nError[Li060]: module \"cb_ticker_wrapper.o(libublox-odin-w2-driver.a)\" contains\r\n          C++ code built for use with the (E)C++98 library. This code is not\r\n          link compatible with the new (C++14) library.\r\nWarning[Lt009]: Inconsistent wchar_t size\r\n            rf_driver_storage.o(libnanostack.a) and 182 other objects in 108\r\n                      different libraries have wchar_t size 16 bits\r\n            main.o and 555 other objects, some of them in dlpp7M_tl_fc.a and\r\n                      107 other libraries have wchar_t size 32 bits\r\n[ERROR] Error[Li060]: module \"cb_main.o(libublox-odin-w2-driver.a)\" contains C++ code\r\n          built for use with the (E)C++98 library. This code is not link\r\n          compatible with the new (C++14) library.\r\nError[Li009]: runtime model conflict: Module\r\n          cb_main.o(libublox-odin-w2-driver.a) specifies that '__CPP_Language'\r\n          must be 'C++', but module main.o has the value 'C++14'. Modules\r\n          compiled with C++14 are not link-compatible with modules that are\r\n          compiled with older C++.\r\nError[Li060]: module \"cb_ticker_wrapper.o(libublox-odin-w2-driver.a)\" contains\r\n          C++ code built for use with the (E)C++98 library. This code is not\r\n          link compatible with the new (C++14) library.\r\nWarning[Lt009]: Inconsistent wchar_t size\r\n            rf_driver_storage.o(libnanostack.a) and 182 other objects in 108\r\n                      different libraries have wchar_t size 16 bits\r\n            main.o and 555 other objects, some of them in dlpp7M_tl_fc.a and\r\n                      107 other libraries have wchar_t size 32 bits\r\n\r\n[mbed] ERROR: \"/usr/bin/python\" returned error code 1.\r\n[mbed] ERROR: Command \"/usr/bin/python -u /home/arto/github/mbed-os-example-mesh-minimal/mbed-os/tools/make.py -t IAR -m UBLOX_EVK_ODIN_W2 --source . --build out/UBLOX_EVK_ODIN_W2_IAR_ATMEL_6lp/ -c --app-config ./configs/mesh_6lowpan.json\" in \"/home/arto/github/mbed-os-example-mesh-minimal\"\r\n```\r\n\r\n**Steps to reproduce**\r\n1. Install IAR 8.2 toolchain\r\n2. checkout mbed-os-example-mesh-minimal\r\n3. mbed deploy\r\n4. change mbed-os revision to feature-iar8\r\n5. compile the application with IAR8.2 \"mbed compile --build out/UBLOX_EVK_ODIN_W2_IAR_ATMEL_6lp/ -m UBLOX_EVK_ODIN_W2 -t IAR -c --app-config ./configs/mesh_6lowpan.json\"\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5404",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5404/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5404/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5404/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5404",
    "id": 269706620,
    "number": 5404,
    "title": "uninitialized section is not supported by all the platforms",
    "user": {
      "login": "alzix",
      "id": 1101204,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1101204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alzix",
      "html_url": "https://github.com/alzix",
      "followers_url": "https://api.github.com/users/alzix/followers",
      "following_url": "https://api.github.com/users/alzix/following{/other_user}",
      "gists_url": "https://api.github.com/users/alzix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alzix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alzix/subscriptions",
      "organizations_url": "https://api.github.com/users/alzix/orgs",
      "repos_url": "https://api.github.com/users/alzix/repos",
      "events_url": "https://api.github.com/users/alzix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alzix/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-10-30T18:29:09Z",
    "updated_at": "2017-11-05T07:38:23Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "I wish to place some variables in an uninitialized section in RAM. \r\nFor me it is only required for testing purpose.\r\nBy examining linker scripts for GCC_ARM, ARM & IAR for supported platforms, I see that the section is sometimes either missing or named differently\r\n\r\n### Description\r\n- Type: Enhancement\r\n- Related issue: `N/A\r\n- Priority: \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nALL\r\n\r\n**Toolchain:**\r\nGCC_ARM  & ARM & IAR\r\n\r\n**Toolchain version:**\r\nN/A\r\n**mbed-cli version:** \r\n`N/A`\r\n\r\n**mbed-os sha:**\r\nHEAD\r\n\r\n**DAPLink version:**\r\nN/A\r\n**Expected behavior**\r\n\r\n**Actual behavior**\r\n\r\n**Steps to reproduce**\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\ncode relying on uninitialized section is not portable between platforms\r\n\r\n**Suggested enhancement**\r\nupdate linker scripts by adding uninitialized section to all the platforms\r\n\r\n**Pros**\r\nbetter SW portability\r\n\r\n**Cons**\r\nN/A\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**How to?**\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5387",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5387/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5387/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5387/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5387",
    "id": 268813861,
    "number": 5387,
    "title": "Mbed test linker Errors - IAR8",
    "user": {
      "login": "deepikabhavnani",
      "id": 28542450,
      "avatar_url": "https://avatars3.githubusercontent.com/u/28542450?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepikabhavnani",
      "html_url": "https://github.com/deepikabhavnani",
      "followers_url": "https://api.github.com/users/deepikabhavnani/followers",
      "following_url": "https://api.github.com/users/deepikabhavnani/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepikabhavnani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepikabhavnani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepikabhavnani/subscriptions",
      "organizations_url": "https://api.github.com/users/deepikabhavnani/orgs",
      "repos_url": "https://api.github.com/users/deepikabhavnani/repos",
      "events_url": "https://api.github.com/users/deepikabhavnani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepikabhavnani/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-10-26T15:47:39Z",
    "updated_at": "2017-11-10T22:06:12Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Mbed test build fails on IAR8 feature branch with below error, refer PR #5329 for more information:\r\n```\r\n\r\n        Link: heap_and_stack\r\n        [DEBUG] Link: /usr/local/iccarm-8.20.1.57/bin/ilinkarm -f /builds/ws/mbed-os-build-matrix/341/KL25Z_IAR8/sources/mbed-os/BUILD/tests/KL25Z/IAR/./TESTS/mbedmicro-rtos-mbed/heap_and_stack/.link_files.txt\r\n        [DEBUG] Return: 2\r\n        [DEBUG] Output: \r\n        [DEBUG] Output:    IAR ELF Linker V8.20.1.57/LNX for ARM\r\n        [DEBUG] Output:    Copyright 2007-2017 IAR Systems AB.\r\n        [DEBUG] Output: \r\n        [DEBUG] Output:   32 576 bytes of readonly  code memory\r\n        [DEBUG] Output:    1 880 bytes of readonly  data memory\r\n        [DEBUG] Output:   16 243 bytes of readwrite data memory\r\n        [DEBUG] Output: \r\n        [DEBUG] Output: Errors: 1\r\n        [DEBUG] Output: Warnings: none\r\n        [DEBUG] Output: \r\n        [DEBUG] Output: Link time:   0.17 (CPU)   1.00 (elapsed)\r\n        [DEBUG] Errors: Error[Lp011]: section placement failed\r\n        [DEBUG] Errors:             unable to place sections/blocks with a total estimated minimum size\r\n        [DEBUG] Errors:                       of 0xf4 bytes (the smallest of which is Section\r\n        [DEBUG] Errors:                       .bss.os.msgqueue.cb (rtx_lib.o #11) (min size 0x34, align\r\n        [DEBUG] Errors:                       0x4) in: <[0x000000c0-0x000003ff],\r\n        [DEBUG] Errors:                       [0x00008920-0x0001ffff], [0x1ffff31c-0x1ffff31f],\r\n        [DEBUG] Errors:                       [0x200029c0-0x20002fff]>\r\n```\r\n### Description\r\n- Type: Bug \r\n- Priority: Blocker \r\n\r\n**Target**\r\nKL25Z and KL46Z\r\n\r\n**Toolchain:**\r\nIAR8.2\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5386",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5386/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5386/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5386/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5386",
    "id": 268715249,
    "number": 5386,
    "title": "malloc unexpected behaviour on GCC_ARM compiler",
    "user": {
      "login": "maciejbocianski",
      "id": 17130713,
      "avatar_url": "https://avatars0.githubusercontent.com/u/17130713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maciejbocianski",
      "html_url": "https://github.com/maciejbocianski",
      "followers_url": "https://api.github.com/users/maciejbocianski/followers",
      "following_url": "https://api.github.com/users/maciejbocianski/following{/other_user}",
      "gists_url": "https://api.github.com/users/maciejbocianski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maciejbocianski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maciejbocianski/subscriptions",
      "organizations_url": "https://api.github.com/users/maciejbocianski/orgs",
      "repos_url": "https://api.github.com/users/maciejbocianski/repos",
      "events_url": "https://api.github.com/users/maciejbocianski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maciejbocianski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515593083,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20stdlib",
        "name": "component: stdlib",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "bulislaw",
      "id": 107253,
      "avatar_url": "https://avatars2.githubusercontent.com/u/107253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bulislaw",
      "html_url": "https://github.com/bulislaw",
      "followers_url": "https://api.github.com/users/bulislaw/followers",
      "following_url": "https://api.github.com/users/bulislaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/bulislaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bulislaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bulislaw/subscriptions",
      "organizations_url": "https://api.github.com/users/bulislaw/orgs",
      "repos_url": "https://api.github.com/users/bulislaw/repos",
      "events_url": "https://api.github.com/users/bulislaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bulislaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "bulislaw",
        "id": 107253,
        "avatar_url": "https://avatars2.githubusercontent.com/u/107253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bulislaw",
        "html_url": "https://github.com/bulislaw",
        "followers_url": "https://api.github.com/users/bulislaw/followers",
        "following_url": "https://api.github.com/users/bulislaw/following{/other_user}",
        "gists_url": "https://api.github.com/users/bulislaw/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bulislaw/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bulislaw/subscriptions",
        "organizations_url": "https://api.github.com/users/bulislaw/orgs",
        "repos_url": "https://api.github.com/users/bulislaw/repos",
        "events_url": "https://api.github.com/users/bulislaw/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bulislaw/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 14,
    "created_at": "2017-10-26T10:55:41Z",
    "updated_at": "2018-02-21T21:07:36Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nall\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\ngcc version 6.3.1 20170620 (release) [ARM/embedded-6-branch revision 249437] (GNU Tools for ARM Embedded Processors 6-2017-q2-update)\r\n\r\n**mbed-cli version:** \r\n1.2.0\r\n\r\n**mbed-os sha:**\r\n38ba693c5\r\n\r\n**Expected behavior**\r\nWhen try to allocate more memory than heap can handle we get NULL from malloc and further allocations (within heap size) work fine\r\n\r\n**Actual behavior**\r\nWhen try to allocate more memory than heap can handle we get NULL from malloc and any further allocation (within heap size) return NULL\r\n\r\n**Steps to reproduce**\r\n\r\nCompile and run below code\r\nProgram find maximum memory which malloc can allocate\r\n```\r\nextern unsigned char *mbed_heap_start;\r\nextern uint32_t mbed_heap_size;\r\nuint32_t max_mbed_heap_size = mbed_heap_size;\r\n\r\nint main()\r\n{\r\n\tvoid *data = NULL;\r\n\r\n\twhile(true)\r\n\t{\r\n\t\tdata = malloc(max_mbed_heap_size);\r\n\t\tif(data || max_mbed_heap_size == 0) {\r\n\t\t\tbreak;\r\n\t\t} else {\r\n\t\t\tmax_mbed_heap_size--;\r\n\t\t}\r\n\t}\r\n\r\n\tprintf(\"max_mbed_heap_size: %lu \\r\\n\", max_mbed_heap_size);\r\n\tprintf(\"mbed_heap_start: %X \\r\\n\", mbed_heap_start);\r\n\tprintf(\"mbed_heap_size: %lu \\r\\n\", mbed_heap_size);\r\n\tprintf(\"data: %p \\r\\n\\r\\n\", data);\r\n}\r\n```\r\n\r\nOutput from NUCLEO_F070RB\r\n```\r\n\r\nGCC_ARM\r\nmax_mbed_heap_size: 0\r\nmbed_heap_start: 2000275C\r\nmbed_heap_size: 5284\r\ndata: 0x0\r\n\r\nARM\r\nmax_mbed_heap_size: 6556\r\nmbed_heap_start: 2000224C\r\nmbed_heap_size: 6580\r\ndata: 20002260\r\n\r\nIAR\r\nmax_mbed_heap_size: 4044\r\nmbed_heap_start: 200006E8\r\nmbed_heap_size: 4096\r\ndata: 200006f0\r\n```\r\n\r\n\r\nTest program 2\r\n\r\n```\r\nextern unsigned char *_sbrk_ret_1;\r\nextern unsigned char *_sbrk_ret_2;\r\nextern int _sbrk_incr;\r\nextern uint32_t _sbrk__end__;\r\nextern unsigned char *_sbrk_prev_heap;\r\nextern unsigned char *_sbrk_new_heap;\r\n\r\nextern unsigned char *mbed_heap_start;\r\nextern uint32_t mbed_heap_size;\r\nconst uint32_t size = 100;\r\nuint32_t max_mbed_heap_size = 0;\r\n\r\nint main()\r\n{\r\n\tvoid *data = NULL;\r\n\r\n\tprintf(\"*** main begin ***\\r\\n\");\r\n\tprintf(\"\\r\\n\");\r\n\tprintf(\"_sbrk_incr: %i\\r\\n\", _sbrk_incr);\r\n\tprintf(\"_sbrk__end__: %lu\\r\\n\", _sbrk__end__);\r\n\tprintf(\"prev_heap: %X\\r\\n\", _sbrk_prev_heap);\r\n\tprintf(\"new_heap: %X\\r\\n\\r\\n\", _sbrk_new_heap);\r\n\r\n\tprintf(\"*** test begin ***\\r\\n\");\r\n\twhile(max_mbed_heap_size <= mbed_heap_size)\r\n\t{\r\n\t\t_sbrk_ret_1 = 0;\r\n\t\t_sbrk_ret_2 = 0;\r\n\t\t_sbrk_incr = 12345;\r\n\t\t_sbrk__end__ = 12345;\r\n\t\t_sbrk_prev_heap = NULL;\r\n\t\t_sbrk_new_heap = NULL;\r\n\r\n\t\tvoid *tmp_data = malloc(size);\r\n\r\n\t\tif(_sbrk_incr != 12345)\r\n\t\t\tprintf(\"_sbrk_incr: %i\\r\\n\", _sbrk_incr);\r\n\t\tif(_sbrk__end__ != 12345)\r\n\t\t\tprintf(\"_sbrk__end__: %lu\\r\\n\", _sbrk__end__);\r\n\t\tif(_sbrk_prev_heap != NULL)\r\n\t\t\tprintf(\"prev_heap: %X\\r\\n\", _sbrk_prev_heap);\r\n\t\tif(_sbrk_new_heap != NULL)\r\n\t\t\tprintf(\"new_heap: %X\\r\\n\", _sbrk_new_heap);\r\n\t\tif(_sbrk_ret_1 != NULL)\r\n\t\t\tprintf(\"_sbrk_ret_1: %X\\r\\n\", _sbrk_ret_1);\r\n\t\tif(_sbrk_ret_2 != NULL)\r\n\t\t\tprintf(\"_sbrk_ret_2: %X\\r\\n\", _sbrk_ret_2);\r\n\r\n\t\tif(NULL == tmp_data) {\r\n\t\t\tbreak;\r\n\t\t} else {\r\n\t\t\tdata = tmp_data;\r\n\t\t\tmax_mbed_heap_size += size;\r\n\t\t\tprintf(\"allocated: %lu\\r\\n\", size);\r\n\t\t\tprintf(\"allocated total: %lu\\r\\n\", max_mbed_heap_size);\r\n\t\t\tprintf(\"\\r\\n\");\r\n\t\t}\r\n\t}\r\n\tprintf(\"*** test end ***\\r\\n\\r\\n\");\r\n\r\n\tprintf(\"max_mbed_heap_size: %lu \\r\\n\", max_mbed_heap_size);\r\n\tprintf(\"mbed_heap_start: %X \\r\\n\", mbed_heap_start);\r\n\tprintf(\"mbed_heap_size: %lu \\r\\n\", mbed_heap_size);\r\n\tprintf(\"data: %p \\r\\n\", data);\r\n\tprintf(\"__get_MSP(): %X \\r\\n\", __get_MSP());\r\n\tprintf(\"*** main end ***\\r\\n\");\r\n\tprintf(\"\\r\\n\");\r\n}\r\n```\r\nTest program 2 additional changes in platform/mbed_retarget.cpp\r\n```\r\ndiff --git a/platform/mbed_retarget.cpp b/platform/mbed_retarget.cpp\r\nindex 6c5f12031..5d5b323a8 100644\r\n--- a/platform/mbed_retarget.cpp\r\n+++ b/platform/mbed_retarget.cpp\r\n@@ -744,24 +744,37 @@ extern \"C\" caddr_t _sbrk(int incr) {\r\n }\r\n #else\r\n // Linker defined symbol used by _sbrk to indicate where heap should start.\r\n+unsigned char * _sbrk_ret_1 = 0;\r\n+unsigned char * _sbrk_ret_2 = 0;\r\n+int _sbrk_incr = 12345;\r\n+uint32_t _sbrk__end__ = 12345;\r\n+unsigned char *_sbrk_prev_heap = (unsigned char*)0x12345;\r\n+unsigned char *_sbrk_new_heap = (unsigned char*)0x12345;\r\n extern \"C\" uint32_t __end__;\r\n extern \"C\" caddr_t _sbrk(int incr) {\r\n     static unsigned char* heap = (unsigned char*)&__end__;\r\n     unsigned char*        prev_heap = heap;\r\n     unsigned char*        new_heap = heap + incr;\r\n\r\n+    _sbrk_incr = incr;\r\n+    _sbrk__end__ = __end__;\r\n+    _sbrk_prev_heap = prev_heap;\r\n+    _sbrk_new_heap = new_heap;\r\n+\r\n #if defined(TARGET_CORTEX_A)\r\n     if (new_heap >= (unsigned char*)&__HeapLimit) {     /* __HeapLimit is end of heap section */\r\n #else\r\n     if (new_heap >= (unsigned char*)__get_MSP()) {\r\n #endif\r\n         errno = ENOMEM;\r\n+        _sbrk_ret_1 = new_heap;\r\n         return (caddr_t)-1;\r\n     }\r\n\r\n     // Additional heap checking if set\r\n     if (mbed_heap_size && (new_heap >= mbed_heap_start + mbed_heap_size)) {\r\n         errno = ENOMEM;\r\n+        _sbrk_ret_2 = new_heap;\r\n         return (caddr_t)-1;\r\n     }\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5383",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5383/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5383/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5383/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5383",
    "id": 268467197,
    "number": 5383,
    "title": "Tracking issue for Arm Compiler 6 library updates",
    "user": {
      "login": "theotherjimmy",
      "id": 685409,
      "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theotherjimmy",
      "html_url": "https://github.com/theotherjimmy",
      "followers_url": "https://api.github.com/users/theotherjimmy/followers",
      "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
      "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
      "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
      "repos_url": "https://api.github.com/users/theotherjimmy/repos",
      "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-10-25T16:36:49Z",
    "updated_at": "2018-05-22T13:35:09Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Each library in the following list must be recompiled with Arm Compiler 6 to support the upcoming Mbed OS release 5.7.0 and onward. Please make pull requests to the branch `feature-armc6` containing the updated libraries.\r\n\r\nThese are the outstanding libraries:\r\n - [ ] targets/TARGET_ARM_SSG/TARGET_BEETLE/TOOLCHAIN_ARM_STD/libcordio.0.0.2.ar\r\n - [ ] targets/TARGET_ARM_SSG/TARGET_BEETLE/TOOLCHAIN_ARM_STD/libcordio_platform.0.0.2.ar\r\n - [ ] targets/TARGET_Maxim/TARGET_MAX32610/TOOLCHAIN_ARM_STD/libexactLE.ar\r\n - [ ] targets/TARGET_Maxim/TARGET_MAX32620/TOOLCHAIN_ARM_STD/libexactLE.ar\r\n - [ ] targets/TARGET_Maxim/TARGET_MAX32630/TOOLCHAIN_ARM_STD/libexactLE.ar\r\n - [ ] targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F439xI/TARGET_UBLOX_EVK_ODIN_W2/sdk/TOOLCHAIN_ARM/libublox-odin-w2-driver.ar\r\n - [ ] targets/TARGET_Realtek/TARGET_AMEBA/TARGET_RTL8195A/device/TOOLCHAIN_ARM_STD/lib_peripheral_mbed_arm.ar\r\n - [ ] targets/TARGET_Realtek/TARGET_AMEBA/TARGET_RTL8195A/device/TOOLCHAIN_ARM_STD/lib_wlan_mbed_arm.ar\r\n - [ ] targets/TARGET_NXP/TARGET_MCUXpresso_MCUS/TARGET_LPC54114/device/TARGET_LPC54114_M4/TOOLCHAIN_ARM_STD/libpower.ar\r\n - [ ] targets/TARGET_NXP/TARGET_MCUXpresso_MCUS/TARGET_LPC546XX/device/TOOLCHAIN_ARM_STD/lib_power.ar\r\n\r\n@screamerbg @maclobdell @MarceloSalazar "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5382",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5382/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5382/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5382/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5382",
    "id": 268465285,
    "number": 5382,
    "title": "Tracking issue for IAR 8 library updates",
    "user": {
      "login": "theotherjimmy",
      "id": 685409,
      "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theotherjimmy",
      "html_url": "https://github.com/theotherjimmy",
      "followers_url": "https://api.github.com/users/theotherjimmy/followers",
      "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
      "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
      "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
      "repos_url": "https://api.github.com/users/theotherjimmy/repos",
      "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-10-25T16:30:59Z",
    "updated_at": "2018-05-22T13:35:14Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Each library in the following list must be re-compiled with IAR EWARM 8.20 to support the upcoming Mbed OS release 5.7.0 and onward. Please make pull requests containing the updated libraries to the branch `feature-iar8`. \r\n\r\nThese are the outstanding libraries:\r\n - [ ] targets/TARGET_ARM_SSG/TARGET_BEETLE/TOOLCHAIN_IAR/libcordio.0.0.2.a\r\n - [ ] targets/TARGET_ARM_SSG/TARGET_BEETLE/TOOLCHAIN_IAR/libcordio_platform.0.0.2.a\r\n - [ ] targets/TARGET_Maxim/TARGET_MAX32610/TOOLCHAIN_IAR/libexactLE.a\r\n - [ ] targets/TARGET_Maxim/TARGET_MAX32620/TOOLCHAIN_IAR/libexactLE.a\r\n - [ ] targets/TARGET_Maxim/TARGET_MAX32630/TOOLCHAIN_IAR/libexactLE.a\r\n - [ ] targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F439xI/TARGET_UBLOX_EVK_ODIN_W2/sdk/TOOLCHAIN_IAR/libublox-odin-w2-driver.a\r\n - [ ] targets/TARGET_Silicon_Labs/TARGET_SL_RAIL/efr32-rf-driver/rail/TOOLCHAIN_IAR/TARGET_EFR32MG1/librail_efr32xg1_gcc_release.a\r\n - [ ] targets/TARGET_Silicon_Labs/TARGET_SL_RAIL/efr32-rf-driver/rail/TOOLCHAIN_IAR/TARGET_EFR32MG12/librail_efr32xg12_iar_release.a\r\n - [ ] targets/TARGET_Realtek/TARGET_AMEBA/TARGET_RTL8195A/device/TOOLCHAIN_IAR/lib_peripheral_mbed_iar.a\r\n - [ ] targets/TARGET_Realtek/TARGET_AMEBA/TARGET_RTL8195A/device/TOOLCHAIN_IAR/lib_wlan_mbed_iar.a\r\n - [ ] targets/TARGET_NXP/TARGET_MCUXpresso_MCUS/TARGET_LPC54114/device/TARGET_LPC54114_M4/TOOLCHAIN_IAR/libpower.a\r\n - [ ] targets/TARGET_NXP/TARGET_MCUXpresso_MCUS/TARGET_LPC546XX/device/TOOLCHAIN_IAR/lib_power.a\r\n\r\n@maclobdell @screamerbg @MarceloSalazar  Could you tag the affected parties?\r\n@deepikabhavnani FYI, PRs to your branch incoming."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5380",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5380/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5380/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5380/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5380",
    "id": 268379966,
    "number": 5380,
    "title": "Multiple Targets does not build with IAR8.2",
    "user": {
      "login": "teetak01",
      "id": 15607794,
      "avatar_url": "https://avatars1.githubusercontent.com/u/15607794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teetak01",
      "html_url": "https://github.com/teetak01",
      "followers_url": "https://api.github.com/users/teetak01/followers",
      "following_url": "https://api.github.com/users/teetak01/following{/other_user}",
      "gists_url": "https://api.github.com/users/teetak01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teetak01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teetak01/subscriptions",
      "organizations_url": "https://api.github.com/users/teetak01/orgs",
      "repos_url": "https://api.github.com/users/teetak01/repos",
      "events_url": "https://api.github.com/users/teetak01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teetak01/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-10-25T12:34:03Z",
    "updated_at": "2017-11-06T08:13:12Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO_F429ZI, \r\nB96B_F446VE, \r\nDISCO_F413ZH, \r\nDISCO_F429ZI, \r\nDISCO_F469NI,  \r\nDISCO_F746NG, \r\nDISCO_F769NI, \r\nDISCO_L475VG_IOT01A, \r\nDISCO_L476VG, \r\nMTS_DRAGONFLY_F411RE,\r\nMTS_MDOT_F411RE,\r\nNUCLEO_F207ZG,\r\nNUCLEO_F303RE,\r\nNUCLEO_F303ZE,\r\nNUCLEO_F401RE,\r\nNUCLEO_F410RB,\r\nNUCLEO_F411RE,\r\nNUCLEO_F412ZG,\r\nNUCLEO_F429ZI,\r\nNUCLEO_F439ZI,\r\nNUCLEO_F446RE,\r\nNUCLEO_F446ZE,\r\nNUCLEO_F746ZG,\r\nNUCLEO_F756ZG,\r\nNUCLEO_F767ZI,\r\nNUCLEO_L432KC,\r\nNUCLEO_L476RG,\r\nNUCLEO_L486RG,\r\nUBLOX_C030_N211,\r\nUBLOX_C030_U201,\r\nUBLOX_EVK_ODIN_W2,\r\n\r\n**Toolchain:**\r\nIAR\r\n\r\n**Toolchain version:**\r\nIAR ANSI C/C++ Compiler V8.20.1.57/LNX for ARM\r\n\r\n**Expected behavior**\r\nCode compiles\r\n\r\n**Actual behavior**\r\n\r\nmbed compile -t IAR -m NUCLEO_F429ZI\r\n\r\n```\r\n00:01:56.716 Compile [  1.8%]: BufferedSerial.cpp\r\n00:01:56.716 \r\n[Error] stm32f4xx_hal_def.h@132,30: [Pe167]: argument of type \"unsigned long volatile *\" is incompatible with parameter of type \"unsigned int const volatile *\"\r\n00:01:56.716 [Error] stm32f4xx_hal_def.h@134,34: [Pe167]: argument of type \"unsigned long volatile *\" is incompatible with parameter of type \"unsigned int volatile *\"\r\n00:01:56.716 [Error] stm32f4xx_hal_def.h@142,30: [Pe167]: argument of type \"unsigned long volatile *\" is incompatible with parameter of type \"unsigned int const volatile *\"\r\n00:01:56.716 [Error] stm32f4xx_hal_def.h@144,0: [Pe167]: argument of type \"unsigned long volatile *\" is incompatible with parameter of type \"unsigned int volatile *\"\r\n00:01:57.250 [ERROR] \r\n00:01:57.250   \t\tnewValue = (uint32_t)__LDREXW((volatile unsigned long *)ptr) | mask;\r\n00:01:57.250   \t\t                              ^\r\n00:01:57.250 \"app/mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_def.h\",132  Error[Pe167]: argument of type \"unsigned long volatile *\" is incompatible with parameter of type \"unsigned int const volatile *\"\r\n00:01:57.250 \r\n00:01:57.250   \t} while (__STREXW(newValue,(volatile unsigned long*) ptr));\r\n00:01:57.250   \t                           ^\r\n00:01:57.250 \"app/mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_def.h\",134  Error[Pe167]: argument of type \"unsigned long volatile *\" is incompatible with parameter of type \"unsigned int volatile *\"\r\n00:01:57.250 \r\n00:01:57.250   \t\tnewValue = (uint32_t)__LDREXW((volatile unsigned long *)ptr) &~mask;\r\n00:01:57.250   \t\t                              ^\r\n00:01:57.250 \"app/mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_def.h\",142  Error[Pe167]: argument of type \"unsigned long volatile *\" is incompatible with parameter of type \"unsigned int const volatile *\"\r\n00:01:57.250 \r\n00:01:57.250   \t} while (__STREXW(newValue,(volatile unsigned long*) ptr));\r\n00:01:57.250   \t                           ^\r\n00:01:57.250 \"app/mbed-os/targets/TARGET_STM/TARGET_STM32F4/device/stm32f4xx_hal_def.h\",144  Error[Pe167]: argument of type \"unsigned long volatile *\" is incompatible with parameter of type \"unsigned int volatile *\"\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5374",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5374/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5374/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5374/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5374",
    "id": 268197135,
    "number": 5374,
    "title": "NUCLEO_F446RE: CAN RX interrupt ends up in infinite loop",
    "user": {
      "login": "pavels",
      "id": 244128,
      "avatar_url": "https://avatars2.githubusercontent.com/u/244128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pavels",
      "html_url": "https://github.com/pavels",
      "followers_url": "https://api.github.com/users/pavels/followers",
      "following_url": "https://api.github.com/users/pavels/following{/other_user}",
      "gists_url": "https://api.github.com/users/pavels/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pavels/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pavels/subscriptions",
      "organizations_url": "https://api.github.com/users/pavels/orgs",
      "repos_url": "https://api.github.com/users/pavels/repos",
      "events_url": "https://api.github.com/users/pavels/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pavels/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2017-10-24T21:46:21Z",
    "updated_at": "2018-04-16T08:15:58Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO_F446RE\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\narm-none-eabi-gcc (Arch Repository) 7.1.0\r\n\r\n**mbed-cli version:** \r\n1.2.0\r\n\r\n**mbed-os sha:**\r\ncc7556a92 (HEAD, tag: mbed_lib_rev152, tag: mbed-os-5.6.1, tag: latest, origin/mbed-os-5.6)\r\n\r\n---\r\n\r\nSomething is wrong with the CAN RX interrupt handling.\r\nI am simply attaching my interrupt handler using `attach` method in instance of `CAN` class.\r\nFirst - it is not possible to call `read()` on the can object in the interrupt routine as there is a mutex lock and this will fail in the interrupt context. On the other end if you do not read from the can interface. The interrupt routine is called again and again in infinite loop so it is not possible to pass the actual read to for example EventQueue as the interrupt handler will be called again and again and the program never leaves the interrupt context.\r\n\r\nIf i comment out the locking in `CAN.cpp` and execute `read()` in the interrupt handler, all is OK and the interrupt handler is called only when there is some messages left in the mailbox.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5364",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5364/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5364/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5364/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5364",
    "id": 267708197,
    "number": 5364,
    "title": "Reduce HAL code duplication",
    "user": {
      "login": "jorisa",
      "id": 5098411,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5098411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisa",
      "html_url": "https://github.com/jorisa",
      "followers_url": "https://api.github.com/users/jorisa/followers",
      "following_url": "https://api.github.com/users/jorisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisa/orgs",
      "repos_url": "https://api.github.com/users/jorisa/repos",
      "events_url": "https://api.github.com/users/jorisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-10-23T15:16:11Z",
    "updated_at": "2017-11-06T13:30:57Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "With the crazy amount of targets that are now supported also comes a crazy amount of duplicated code. Now that the mbed build system is getting more and more sophisticated, would it be an idea to create a HAL for a specific peripheral, and than bind these to a specific target using the target json?\r\n\r\nI'm not sure how well this would work out in practice as there might be variations between different microcontrollers implementations, but I am expecting that the same peripherals get re-used across a family.\r\n\r\nAs en example I looked at the C_CAN implementation here:\r\n[TARGET_NXP\\TARGET_LPC15XX\\can_api.c](https://github.com/ARMmbed/mbed-os/blob/master/targets/TARGET_NXP/TARGET_LPC15XX/can_api.c)\r\nand\r\n[TARGET_NXP\\TARGET_LPC11XX_11CXX\\TARGET_LPC11CXX\\can_api.c](https://github.com/ARMmbed/mbed-os/blob/master/targets/TARGET_NXP/TARGET_LPC11XX_11CXX/TARGET_LPC11CXX/can_api.c)\r\n\r\nOnly diff [here](http://www.mergely.com/FfBaNLWu/) for your convenience\r\n\r\nIt seems like they are functionally identical, except that someone has gone through the effort to make one of them more pretty.\r\n\r\nCould something like this work?\r\n\r\nFor example:\r\n```\r\n\"LPC1549\": {\r\n    \"supported_form_factors\": [\"ARDUINO\"],\r\n    \"core\": \"Cortex-M3\",\r\n    \"default_toolchain\": \"uARM\",\r\n    \"extra_labels\": [\"NXP\", \"LPC15XX\"],\r\n    \"supported_toolchains\": [\"uARM\", \"GCC_CR\", \"GCC_ARM\", \"IAR\"],\r\n    \"inherits\": [\"LPCTarget\"],\r\n    \"detect_code\": [\"1549\"],\r\n    \"device_has\": {\r\n        \"ANALOGIN\" : {\r\n            \"driver\": \"/targets/NXP/peripheral/ADC_12BIT_V1\",\r\n            \"instance\": {\r\n                \"ADC0\": \"LPC_ADC0_BASE\",\r\n                \"ADC1\": \"LPC_ADC1_BASE\",\r\n            }\r\n        },\r\n        \"CAN\" :  {\r\n            \"driver\": \"/targets/NXP/peripheral/C_CAN\",\r\n            \"instance\": {\r\n                \"CAN0\": \"LPC_C_CAN0_BASE\",\r\n            }\r\n        }\r\n    },\r\n    \"default_lib\": \"small\",\r\n    \"release_versions\": [\"2\"],\r\n    \"device_name\": \"LPC1549JBD64\"\r\n},\r\n```\r\n\r\nI think the main two advantages would be:\r\n* More efficient to refactor code, less likely that bugs only get fixed for a specific targets \r\n* Easier to add support to even more microcontroller variants (that are very similar to parts already supported, but slightly different configuration)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5361",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5361/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5361/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5361/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5361",
    "id": 267613432,
    "number": 5361,
    "title": "Add set_reboot_execute_callback method to M2MDevice",
    "user": {
      "login": "ghseb",
      "id": 20226385,
      "avatar_url": "https://avatars3.githubusercontent.com/u/20226385?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghseb",
      "html_url": "https://github.com/ghseb",
      "followers_url": "https://api.github.com/users/ghseb/followers",
      "following_url": "https://api.github.com/users/ghseb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghseb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghseb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghseb/subscriptions",
      "organizations_url": "https://api.github.com/users/ghseb/orgs",
      "repos_url": "https://api.github.com/users/ghseb/repos",
      "events_url": "https://api.github.com/users/ghseb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghseb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-23T10:15:47Z",
    "updated_at": "2017-10-27T17:04:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Expected behavior**\r\nA Reset Execute Callback can be set for the Reboot resource of M2MDevice.\r\n\r\n**Actual behavior**\r\nIt seems that it is currently not possible to set a callback which is called when execute is called on the Reboot resource of M2mDevice. \r\n\r\n----------------------------------------------------------------\r\n**Suggested enhancement**\r\nA public method could be added to M2MDevice which allows to set a reboot callback similar to `bool M2mFirmware::set_update_execute_callback(execute_callback callback);`\r\n\r\n**Pros**\r\nServer-initiated resets can be implemented.\r\n\r\n**Cons**\r\n-\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5357",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5357/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5357/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5357/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5357",
    "id": 267371784,
    "number": 5357,
    "title": "Uvision5: export from within a sub folder",
    "user": {
      "login": "chrissnow",
      "id": 3310276,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3310276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrissnow",
      "html_url": "https://github.com/chrissnow",
      "followers_url": "https://api.github.com/users/chrissnow/followers",
      "following_url": "https://api.github.com/users/chrissnow/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrissnow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrissnow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrissnow/subscriptions",
      "organizations_url": "https://api.github.com/users/chrissnow/orgs",
      "repos_url": "https://api.github.com/users/chrissnow/repos",
      "events_url": "https://api.github.com/users/chrissnow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrissnow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-10-21T11:08:29Z",
    "updated_at": "2017-12-16T16:50:41Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nAny\r\n**Toolchain:**\r\nARM, possibly others\r\n\r\n**Expected behavior**\r\nExport's a valid project, or refuses to export or exports to the current directory.\r\n**Actual behavior**\r\nExport's a project but the paths are all wrong\r\n\r\n**Steps to reproduce**\r\n```\r\nmbed import mbed-os-example-blinky\r\ncd mbed-os-example-blinky\r\nmbed export -i uvision5\r\n```\r\nWorks as expected and creates a project in the normal place.\r\nsample file ref.\r\n```\r\n<FilePath>.\\mbed-os\\drivers\\BusIn.cpp</FilePath>\r\n```\r\n\r\nHowever move into a subdirectory.\r\n```\r\ncd mbed-os\r\nmbed export -i uvision5\r\n```\r\nWhich is successful and creates the project in the normal place but..\r\nSample file ref\r\n```\r\n<FilePath>..\\mbed-os\\drivers\\BusIn.cpp</FilePath>\r\n```\r\nNotice the ..\\ which should be .\\"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5350",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5350/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5350/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5350/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5350",
    "id": 267115765,
    "number": 5350,
    "title": "K64F: SPI dummy data not working as intended",
    "user": {
      "login": "kjbracey-arm",
      "id": 11025917,
      "avatar_url": "https://avatars3.githubusercontent.com/u/11025917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kjbracey-arm",
      "html_url": "https://github.com/kjbracey-arm",
      "followers_url": "https://api.github.com/users/kjbracey-arm/followers",
      "following_url": "https://api.github.com/users/kjbracey-arm/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjbracey-arm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kjbracey-arm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjbracey-arm/subscriptions",
      "organizations_url": "https://api.github.com/users/kjbracey-arm/orgs",
      "repos_url": "https://api.github.com/users/kjbracey-arm/repos",
      "events_url": "https://api.github.com/users/kjbracey-arm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kjbracey-arm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-10-20T09:27:53Z",
    "updated_at": "2017-10-27T18:09:23Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "\r\n### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F (and other Freescale?)\r\n\r\n**mbed-os sha:**\r\n6e0d01cd13\r\n\r\n**Expected behavior**\r\nWhen RX len > TX len in SPI block write,  the excess TX bytes should be the fill value.\r\n\r\n**Actual behavior**\r\nIt actually reads off the end of the TX buffer and transmits those bytes.\r\n\r\nThe core implementation of DSPI_MasterTransferBlocking looks encouraging, with separate remainingSendByteCount and remainingReceiveByteCount, but both of those are always set to the same value, the maximum of RX and TX len.\r\n\r\nBug observed while inspecting SPI traffic to the Atmel RF233 radio. Doesn't affect me - the readio doesn't care about the extra data, but apparently SD cards do? And obviously running off the end of buffers is bad."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5349",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5349/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5349/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5349/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5349",
    "id": 266895969,
    "number": 5349,
    "title": "I2C driver port missing a command, can get stuck in loop forever",
    "user": {
      "login": "danclement",
      "id": 14295243,
      "avatar_url": "https://avatars0.githubusercontent.com/u/14295243?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danclement",
      "html_url": "https://github.com/danclement",
      "followers_url": "https://api.github.com/users/danclement/followers",
      "following_url": "https://api.github.com/users/danclement/following{/other_user}",
      "gists_url": "https://api.github.com/users/danclement/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danclement/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danclement/subscriptions",
      "organizations_url": "https://api.github.com/users/danclement/orgs",
      "repos_url": "https://api.github.com/users/danclement/repos",
      "events_url": "https://api.github.com/users/danclement/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danclement/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 509256180,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20onsemi",
        "name": "devices: onsemi",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-10-19T15:55:57Z",
    "updated_at": "2017-11-14T18:03:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\nFrom if section below there is no operator that increments the write variable causing the system to get stuck in while loop forever.\r\n\r\nReviewing the code it's apparent that a line of code was missed from the HAL port.\r\n\r\nThe fix is to add write++ at the end of the if section.  This needs to be implemented and checked in mbed but in our other SDK it exists and is tested so the risk is low.\r\n\r\nI listed this as minor because it's very easy to make the change locally and is low risk.  We will update the code and do the mbed tests and formally make a pull request as time and resources permit.\r\n\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNCS36510\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Expected behavior**\r\nAfter bitwise write of data write variable should increment and the while loop should eventually exit as expected.\r\n\r\n**Actual behavior**\r\nFor the I2C_CMD_RDAT8 command, the code gets stuck in the while loop because write variable never increments.\r\n\r\n**Steps to reproduce**\r\nUse the I2C and send the I2C_CMD_RDAT8 command, code will get stuck in while loop.\r\n\r\nFrom file: ncs36510_i2c.c\r\n\r\n```\r\n       while (write < len) {\r\n\r\n       /* Send write command */\r\n        SEND_COMMAND(I2C_CMD_WDAT8);\r\n\r\n        if(buf[write] == I2C_CMD_RDAT8) {\r\n\r\n            /* SW work around to counter FSM issue. If the only command in the CMD FIFO is the WDAT8 command (data of 0x13)\r\n            then as the command is read out (i.e. the FIFO goes empty), the WDAT8 command will be misinterpreted as a\r\n            RDAT8 command by the data FSM; resulting in an I2C bus error (NACK instead of an ACK). */\r\n\r\n            /* Send 0x13 bit wise */\r\n            SEND_COMMAND(I2C_CMD_WDAT0);\r\n \r\n            SEND_COMMAND(I2C_CMD_WDAT0);\r\n \r\n            SEND_COMMAND(I2C_CMD_WDAT0);\r\n \r\n            SEND_COMMAND(I2C_CMD_WDAT1);\r\n \r\n            SEND_COMMAND(I2C_CMD_WDAT0);\r\n \r\n            SEND_COMMAND(I2C_CMD_WDAT0);\r\n \r\n            SEND_COMMAND(I2C_CMD_WDAT1);\r\n \r\n            SEND_COMMAND(I2C_CMD_WDAT1);\r\n\r\n            // Add write++ command here\r\n           write++\r\n\r\n        } else {\r\n            /* Send data */\r\n            SEND_COMMAND(buf[write++]);\r\n        }\r\n        SEND_COMMAND(I2C_CMD_VRFY_ACK);\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5348",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5348/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5348/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5348/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5348",
    "id": 266881466,
    "number": 5348,
    "title": "K64F: LowPowerTimeout: Inaccurate delay after board power up",
    "user": {
      "login": "fkjagodzinski",
      "id": 26014847,
      "avatar_url": "https://avatars0.githubusercontent.com/u/26014847?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fkjagodzinski",
      "html_url": "https://github.com/fkjagodzinski",
      "followers_url": "https://api.github.com/users/fkjagodzinski/followers",
      "following_url": "https://api.github.com/users/fkjagodzinski/following{/other_user}",
      "gists_url": "https://api.github.com/users/fkjagodzinski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fkjagodzinski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fkjagodzinski/subscriptions",
      "organizations_url": "https://api.github.com/users/fkjagodzinski/orgs",
      "repos_url": "https://api.github.com/users/fkjagodzinski/repos",
      "events_url": "https://api.github.com/users/fkjagodzinski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fkjagodzinski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "cmonr",
      "id": 260086,
      "avatar_url": "https://avatars1.githubusercontent.com/u/260086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmonr",
      "html_url": "https://github.com/cmonr",
      "followers_url": "https://api.github.com/users/cmonr/followers",
      "following_url": "https://api.github.com/users/cmonr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmonr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmonr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmonr/subscriptions",
      "organizations_url": "https://api.github.com/users/cmonr/orgs",
      "repos_url": "https://api.github.com/users/cmonr/repos",
      "events_url": "https://api.github.com/users/cmonr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmonr/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cmonr",
        "id": 260086,
        "avatar_url": "https://avatars1.githubusercontent.com/u/260086?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cmonr",
        "html_url": "https://github.com/cmonr",
        "followers_url": "https://api.github.com/users/cmonr/followers",
        "following_url": "https://api.github.com/users/cmonr/following{/other_user}",
        "gists_url": "https://api.github.com/users/cmonr/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cmonr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cmonr/subscriptions",
        "organizations_url": "https://api.github.com/users/cmonr/orgs",
        "repos_url": "https://api.github.com/users/cmonr/repos",
        "events_url": "https://api.github.com/users/cmonr/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cmonr/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-10-19T15:16:35Z",
    "updated_at": "2017-12-18T09:12:28Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Related issue: #5150 \r\n- Priority: Minor\r\n\r\n## Bug\r\n\r\n**Target**\r\nK64F\r\n\r\n**Toolchain**\r\nGCC_ARM, ARM, IAR\r\n\r\n**Toolchain version**\r\nGCC_ARM -- _6.3.1_,\r\nARM -- _5.24 (Flex) ARM Compiler 5.06 update 5 (build 528)_,\r\nIAR -- _ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM_\r\n\r\n**mbed-cli version** \r\n1.2.0\r\n\r\n**mbed-os sha**\r\ne1090cafe\r\n\r\n**Code**\r\n```cpp\r\n#include \"mbed.h\"\r\n\r\n#define TEST_DELAY_US 30000ULL\r\n\r\nint main() {\r\n    Timer timer;\r\n    LowPowerTimeout timeout;\r\n\r\n    timer.start();\r\n    timeout.attach_us(mbed::callback(&timer, &Timer::stop), TEST_DELAY_US);\r\n\r\n    // Need to wait much longer than TEST_DELAY_US\r\n    Thread::wait(3000);\r\n    printf(\"%10i\\n\", timer.read_us());\r\n    return 0;\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nWhen the board is powered up the callback is called exactly after `TEST_DELAY_US`.\r\n\r\n**Actual behavior**\r\nCallback is triggered with a delay different than expected after powerup. When a RESET button is pressed the delay is correct though.\r\nRegular `Timeout` works as expected.\r\n\r\n```\r\n# board power up\r\n     95670  # not even near 30000 us!\r\n# RESET button pressed\r\n     30013\r\n# RESET button pressed\r\n     30027\r\n# RESET button pressed\r\n     30029\r\n\r\n# board power up\r\n     94519\r\n# RESET button pressed\r\n     30014\r\n# RESET button pressed\r\n     30010\r\n\r\n# board power up\r\n     94744\r\n# RESET button pressed\r\n     30034\r\n```\r\n\r\nCC @bulislaw @0xc0170 @mmahadevan108 \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5341",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5341/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5341/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5341/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5341",
    "id": 266549511,
    "number": 5341,
    "title": "FATFS: FAT16 broken at smallest cluster count",
    "user": {
      "login": "chrissnow",
      "id": 3310276,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3310276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrissnow",
      "html_url": "https://github.com/chrissnow",
      "followers_url": "https://api.github.com/users/chrissnow/followers",
      "following_url": "https://api.github.com/users/chrissnow/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrissnow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrissnow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrissnow/subscriptions",
      "organizations_url": "https://api.github.com/users/chrissnow/orgs",
      "repos_url": "https://api.github.com/users/chrissnow/repos",
      "events_url": "https://api.github.com/users/chrissnow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrissnow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "geky",
      "id": 1075160,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geky",
      "html_url": "https://github.com/geky",
      "followers_url": "https://api.github.com/users/geky/followers",
      "following_url": "https://api.github.com/users/geky/following{/other_user}",
      "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
      "organizations_url": "https://api.github.com/users/geky/orgs",
      "repos_url": "https://api.github.com/users/geky/repos",
      "events_url": "https://api.github.com/users/geky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geky/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "geky",
        "id": 1075160,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/geky",
        "html_url": "https://github.com/geky",
        "followers_url": "https://api.github.com/users/geky/followers",
        "following_url": "https://api.github.com/users/geky/following{/other_user}",
        "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
        "organizations_url": "https://api.github.com/users/geky/orgs",
        "repos_url": "https://api.github.com/users/geky/repos",
        "events_url": "https://api.github.com/users/geky/events{/privacy}",
        "received_events_url": "https://api.github.com/users/geky/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-18T16:03:04Z",
    "updated_at": "2017-12-08T19:47:11Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "\r\n### Description\r\n- Type: Bug\r\n- Related issue:\r\n- Priority: Blocker Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\nIf you have a device that has 4096 512/528b sectors and try to format without specifying the AU it fails.\r\nhttps://github.com/ARMmbed/mbed-os/blob/20d93bf78d5172b6a0f1c1065058d641e4e0f2e1/features/filesystem/fat/ChaN/ff.cpp#L4172-L4174\r\nWhich results in FAT16 as the result since nclst = 0x1000\r\nYet this then fails here as there is not enough sectors for FAT16\r\nhttps://github.com/ARMmbed/mbed-os/blob/20d93bf78d5172b6a0f1c1065058d641e4e0f2e1/features/filesystem/fat/ChaN/ff.cpp#L4204-L4207\r\nand returns\r\n\r\n```\r\nFR_MKFS_ABORTED\r\n```\r\nIf you format with an AU of 2\r\n```c++\r\nFATFileSystem::format(&flash,2)\r\n```\r\nIt will succeed with FAT12\r\n\r\n**Expected behavior**\r\nFormat's the device as FAT12\r\n**Actual behavior**\r\n```\r\nFR_MKFS_ABORTED\r\n```\r\n**Steps to reproduce**\r\nUse a 16mbit DataFlash which has 4096 sectors of 512/528 (or anything similar)\r\n```c++\r\nFATFileSystem::format(&flash); //this fails\r\nFATFileSystem::format(&flash,2);//this works\r\n```\r\n\r\nFurther info. https://github.com/ARMmbed/dataflash-driver/issues/3\r\nCC @geky @marcuschangarm "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5336",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5336/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5336/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5336/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5336",
    "id": 266297169,
    "number": 5336,
    "title": "Incremental compile ignores device_has changes",
    "user": {
      "login": "c1728p9",
      "id": 2916772,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2916772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/c1728p9",
      "html_url": "https://github.com/c1728p9",
      "followers_url": "https://api.github.com/users/c1728p9/followers",
      "following_url": "https://api.github.com/users/c1728p9/following{/other_user}",
      "gists_url": "https://api.github.com/users/c1728p9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/c1728p9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/c1728p9/subscriptions",
      "organizations_url": "https://api.github.com/users/c1728p9/orgs",
      "repos_url": "https://api.github.com/users/c1728p9/repos",
      "events_url": "https://api.github.com/users/c1728p9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/c1728p9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-10-17T22:14:57Z",
    "updated_at": "2017-10-18T19:42:19Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Build time dependencies don't pick up when a device_has value is added or removed. This problem can be reproduced by building, removing a device_has field from targets.json and rebuilding again. The incremental compile will not rebuild all the sources."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5318",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5318/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5318/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5318/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5318",
    "id": 265427091,
    "number": 5318,
    "title": "LPC4088 Compilation Warnings",
    "user": {
      "login": "sarahmarshy",
      "id": 12565767,
      "avatar_url": "https://avatars3.githubusercontent.com/u/12565767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sarahmarshy",
      "html_url": "https://github.com/sarahmarshy",
      "followers_url": "https://api.github.com/users/sarahmarshy/followers",
      "following_url": "https://api.github.com/users/sarahmarshy/following{/other_user}",
      "gists_url": "https://api.github.com/users/sarahmarshy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sarahmarshy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sarahmarshy/subscriptions",
      "organizations_url": "https://api.github.com/users/sarahmarshy/orgs",
      "repos_url": "https://api.github.com/users/sarahmarshy/repos",
      "events_url": "https://api.github.com/users/sarahmarshy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sarahmarshy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-10-13T21:43:56Z",
    "updated_at": "2017-10-17T11:52:43Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Inspired by: https://os.mbed.com/forum/bugs-suggestions/topic/28059/\r\n\r\nmbed-os-example-blinky compiles with 8 warnings for this target. Half of them from LWIP, half from NXP HAL.\r\n\r\n@0xc0170, who's the right person from NXP to tag? "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5309",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5309/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5309/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5309/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5309",
    "id": 264965826,
    "number": 5309,
    "title": "MAX32630 MAX32625:  Program hangs when scheduled many tickers one after the other with the same time interval",
    "user": {
      "login": "maciejbocianski",
      "id": 17130713,
      "avatar_url": "https://avatars0.githubusercontent.com/u/17130713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maciejbocianski",
      "html_url": "https://github.com/maciejbocianski",
      "followers_url": "https://api.github.com/users/maciejbocianski/followers",
      "following_url": "https://api.github.com/users/maciejbocianski/following{/other_user}",
      "gists_url": "https://api.github.com/users/maciejbocianski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maciejbocianski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maciejbocianski/subscriptions",
      "organizations_url": "https://api.github.com/users/maciejbocianski/orgs",
      "repos_url": "https://api.github.com/users/maciejbocianski/repos",
      "events_url": "https://api.github.com/users/maciejbocianski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maciejbocianski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 550082561,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20maxim",
        "name": "devices: maxim",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-10-12T14:35:48Z",
    "updated_at": "2018-01-09T07:11:26Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "When schedule many Tickers one after the other with the same time interval 100ms and then wait 105ms it's expected that after this time all Tickers will be fired once. But we get other results. There is no action test hangs and timeout occurs\r\n\r\nProblem noticed in https://github.com/ARMmbed/mbed-os/pull/5261 in the following test\r\n```\r\n/** Test many tickers run one after the other\r\n\r\n    Given many Tickers\r\n    When schedule them one after the other with the same time intervals\r\n    Then tickers properly execute callbacks\r\n    When schedule them one after the other with the different time intervals\r\n    Then tickers properly execute callbacks\r\n */\r\nvoid test_multi_ticker(void)\r\n\r\n```\r\nSample code for reproduction\r\n```\r\n#define MULTI_TICKER_TIME_MS 100\r\n#define TICKER_COUNT 16\r\nTicker ticker[TICKER_COUNT];\r\nuint32_t multi_counter;\r\n\r\nvoid increment_multi_counter(void)\r\n{\r\n   core_util_atomic_incr_u32(&multi_counter, 1);\r\n}\r\n\r\nconst uint32_t extra_wait = 5; // extra 5ms wait time\r\nmulti_counter = 0;\r\nfor (int i = 0; i < TICKER_COUNT; i++) {\r\n    ticker[i].attach_us(callback(increment_multi_counter), MULTI_TICKER_TIME_MS * 1000);\r\n}\r\n\r\nThread::wait(MULTI_TICKER_TIME_MS + extra_wait);\r\nfor (int i = 0; i < TICKER_COUNT; i++) {\r\n    ticker[i].detach();\r\n }\r\n\r\nTEST_ASSERT_EQUAL(TICKER_COUNT, multi_counter);\r\n```\r\n\r\n### Description\r\n- Type: Bug\r\n- Related PR: https://github.com/ARMmbed/mbed-os/pull/5261\r\n- Related Issues: https://github.com/ARMmbed/mbed-os/issues/5307\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nMAX32630, MAX32625\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**mbed-os sha:**\r\nmaster\r\n\r\n**Expected behavior**\r\nTicker callback is executed exactly 16 times\r\n\r\n**Actual behavior**\r\nTest hung and timeout occurs"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5301",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5301/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5301/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5301/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5301",
    "id": 264707208,
    "number": 5301,
    "title": "Project exporters and CMSIS Pack for NCS36510 target",
    "user": {
      "login": "danclement",
      "id": 14295243,
      "avatar_url": "https://avatars0.githubusercontent.com/u/14295243?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danclement",
      "html_url": "https://github.com/danclement",
      "followers_url": "https://api.github.com/users/danclement/followers",
      "following_url": "https://api.github.com/users/danclement/following{/other_user}",
      "gists_url": "https://api.github.com/users/danclement/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danclement/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danclement/subscriptions",
      "organizations_url": "https://api.github.com/users/danclement/orgs",
      "repos_url": "https://api.github.com/users/danclement/repos",
      "events_url": "https://api.github.com/users/danclement/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danclement/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 509256180,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20onsemi",
        "name": "devices: onsemi",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-10-11T19:28:35Z",
    "updated_at": "2017-11-14T18:04:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "**Need advice for how best to implement a minimal viable CMSIS pack for target NCS36510, how to test it, and how to integrate the pack into mbed so the project exporter can support Keil (and GCC and IAR if they can use the CMSIS pack also).**\r\n\r\n@theotherjimmy @maclobdell @jacobjohnson-ON \r\n\r\n### Summary of question points\r\n\r\n1. What is included in a minimal CMSIS device pack?\r\n2. How do we test this CMSIS pack?\r\n3. How do we bring it into mbed?\r\n4. How do we enable support in the exporter to use this cmsis pack, for all toolchains including Keil?\r\n\r\n**Target**\r\nNCS36510\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5282",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5282/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5282/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5282/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5282",
    "id": 263865025,
    "number": 5282,
    "title": "Compiling for ARMC6 picks up TOOLCHAIN_ARM folders also",
    "user": {
      "login": "SeppoTakalo",
      "id": 3104794,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3104794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SeppoTakalo",
      "html_url": "https://github.com/SeppoTakalo",
      "followers_url": "https://api.github.com/users/SeppoTakalo/followers",
      "following_url": "https://api.github.com/users/SeppoTakalo/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeppoTakalo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SeppoTakalo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeppoTakalo/subscriptions",
      "organizations_url": "https://api.github.com/users/SeppoTakalo/orgs",
      "repos_url": "https://api.github.com/users/SeppoTakalo/repos",
      "events_url": "https://api.github.com/users/SeppoTakalo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SeppoTakalo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 22,
    "created_at": "2017-10-09T11:38:42Z",
    "updated_at": "2018-01-26T16:33:35Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Toolchain:**\r\nARMC6\r\n\r\n**Expected behavior**\r\nWhen compiling Mbed OS, it should pick up folder `TOOLCHAIN_X` only if the `X` matches the toolchain you are using.\r\n\r\n**Actual behavior**\r\nWhen compiling using `ARMC6` it picks up also `TOOLCHAIN_ARM` folders.\r\n\r\n**Steps to reproduce**\r\n```\r\nmbed import mbed-os-example-mesh-minimal\r\ncd mbed-os-example-mesh-minimal\r\nmbed target K64F\r\nmbed toolchain ARMC6\r\nmbed compile\r\n```\r\n\r\nCompilation should fail because we have not provided any binaries for ARMC6 toolchain. See [here](https://github.com/ARMmbed/mbed-os/tree/master/features/nanostack/FEATURE_LOWPAN_ROUTER)\r\n\r\nCompilation however succeed. This means that it was using binary blobs targeted for Arm compiler 5.\r\n\r\nArm compiler 5 and 6 are entirely different compilers. First one is developed within ARM. The version 6 is based on LLVM/Clang.\r\nEven that these both use the same object formats, we cannot guarantee the compatibility.\r\nIt may work, but it might also work when linking against GCC objects.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5281",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5281/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5281/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5281/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5281",
    "id": 263856484,
    "number": 5281,
    "title": "FlashIAP::program failed on ODIN board",
    "user": {
      "login": "Alonof",
      "id": 4798395,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4798395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Alonof",
      "html_url": "https://github.com/Alonof",
      "followers_url": "https://api.github.com/users/Alonof/followers",
      "following_url": "https://api.github.com/users/Alonof/following{/other_user}",
      "gists_url": "https://api.github.com/users/Alonof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Alonof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Alonof/subscriptions",
      "organizations_url": "https://api.github.com/users/Alonof/orgs",
      "repos_url": "https://api.github.com/users/Alonof/repos",
      "events_url": "https://api.github.com/users/Alonof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Alonof/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2017-10-09T11:02:02Z",
    "updated_at": "2018-02-01T08:16:01Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority:  Major\r\n\r\n## Bug\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Toolchain version:**\r\n\r\n**mbed-cli version:** \r\n1.2.0\r\n\r\n**Expected behavior**\r\nFlashIAP:: program failed programming the internal flash on Odin Board.\r\nSame code that runs on NUCLEO F429ZI ( the same CPU has ODIN) passes while in ODIN is failing \r\n\r\n**Actual behavior**\r\ncalling FlashIAP:: program on ODIN\r\n\r\n**Steps to reproduce**\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5280",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5280/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5280/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5280/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5280",
    "id": 263854743,
    "number": 5280,
    "title": "FlashIAP Error Handling",
    "user": {
      "login": "Alonof",
      "id": 4798395,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4798395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Alonof",
      "html_url": "https://github.com/Alonof",
      "followers_url": "https://api.github.com/users/Alonof/followers",
      "following_url": "https://api.github.com/users/Alonof/following{/other_user}",
      "gists_url": "https://api.github.com/users/Alonof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Alonof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Alonof/subscriptions",
      "organizations_url": "https://api.github.com/users/Alonof/orgs",
      "repos_url": "https://api.github.com/users/Alonof/repos",
      "events_url": "https://api.github.com/users/Alonof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Alonof/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-10-09T10:55:07Z",
    "updated_at": "2017-12-04T20:34:50Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\nAll FlashIAP APIs return \"-1\" as an error, there is no way of knowing what is the real error\r\n- Type:  BUG\r\n- Priority:  Blocker\r\n\r\n## Bug\r\n\r\n**Target**\r\nall Boards\r\n\r\n**Toolchain:**\r\nGCC_ARM|\r\n\r\n**Toolchain version:**\r\n\r\n**mbed-cli version:** \r\n1.2.0\r\n\r\n**mbed-os sha:**\r\ncc7556a92 (HEAD, tag: mbed_lib_rev152, tag: mbed-os-5.6.1, tag: latest) Merge pull request #5184 from \r\nARMmbed/release-candidate\r\n\r\n**Expected behavior**\r\nEach error is translated into understandable opCode\r\n\r\n**Actual behavior**\r\nEvery flashAPI error is translated into '-1' to the user\r\n\r\n**Steps to reproduce**\r\nFor example in ODIN W2 board:\r\nWhen Calling mbedOS flash API  `FLASH_Program()` the function calls to an internal mbedOS wrapper function --> 'HAL_FLASH_Program()' found at `stm32f4xx_hal_flash.c` this function waits for the last flash operation to be completed but if timed out then it returns an error which is translated into `-1`.\r\nIf the caller to `FLASH_Program` knows the real failure then a retry can be called.\r\nin this case, the flash write operation failed.\r\n\r\nThis bug causes Odin flash tests to fail \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5267",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5267/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5267/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5267/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5267",
    "id": 263389361,
    "number": 5267,
    "title": "CAN read doesn't work when the interrupt is attached.",
    "user": {
      "login": "lightway29",
      "id": 7972972,
      "avatar_url": "https://avatars1.githubusercontent.com/u/7972972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightway29",
      "html_url": "https://github.com/lightway29",
      "followers_url": "https://api.github.com/users/lightway29/followers",
      "following_url": "https://api.github.com/users/lightway29/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightway29/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightway29/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightway29/subscriptions",
      "organizations_url": "https://api.github.com/users/lightway29/orgs",
      "repos_url": "https://api.github.com/users/lightway29/repos",
      "events_url": "https://api.github.com/users/lightway29/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightway29/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-10-06T09:40:36Z",
    "updated_at": "2017-10-09T07:30:47Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug \r\n- Priority: Major\r\n\r\nThis is a simple CAN read sample.Which is suppose to flip the led1 when a can message is received.The attached interrupt function is never called even though the messages received.\r\n\r\n_Note - CAN messages are sent from another device with an interval of 1sec._\r\n\r\n\r\n```c++\r\n#include \"mbed.h\"\r\n\r\nDigitalOut led1(LED1);\r\nCAN can(p9, p10);\r\nCANMessage msg;\r\n\r\nbool msg_rx_flag = 0;\r\n\r\nvoid can_interrupt() {\r\n  can.attach(NULL);\r\n  msg_rx_flag = 1;\r\n}\r\n\r\nint main() {\r\n  printf(\"[DEBUG LOG] Main loop started. \\n\\r\");\r\n\r\n  can.mode(CAN::Normal);\r\n  can.frequency(100000);  // Initialise mbed CAN with a baudrate of 100 kbps\r\n  can.attach(&can_interrupt, CAN::RxIrq);\r\n\r\n  while (1) {\r\n    if (msg_rx_flag == 1) {\r\n      if (can.read(msg)) {\r\n        led1 = !led1;\r\n      }\r\n      msg_rx_flag = 0;\r\n      can.attach(&can_interrupt, CAN::RxIrq);\r\n    }\r\n  }\r\n}\r\n\r\n```\r\nBut this works without any issue\r\n```c++\r\n#include \"mbed.h\"\r\n\r\nDigitalOut led1(LED1);\r\nCAN can(p9, p10);\r\nCANMessage msg;\r\n\r\nbool msg_rx_flag = 0;\r\n\r\nvoid can_interrupt() {\r\n  if (can.read(msg)) {\r\n    led1 = !led1;\r\n  }\r\n}\r\n\r\nint main() {\r\n  printf(\"[DEBUG LOG] Main loop started. \\n\\r\");\r\n\r\n  can.mode(CAN::Normal);\r\n  can.frequency(100000);  // Initialise mbed CAN with a baudrate of 100 kbps\r\n  can.attach(&can_interrupt, CAN::RxIrq);\r\n\r\n  while (1) {\r\n  }\r\n}\r\n\r\n```\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNXP LPC1768\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n1.60301.0\r\n\r\n**mbed-os(5.5.6) sha:**\r\nmbed_lib_rev152 \r\n\r\n**Expected behavior**\r\nThe registered interrupt should be triggered when a message is received.And the led1 should be flipped.\r\n**Actual behavior**\r\nThe interrupt function is not trigger when simple flag is set to be true and read can messages in the main loop like in the mbed sample.\r\n**Steps to reproduce**\r\n\r\n1. Setup a device to send can messages(Extended) with a delay of one second.\r\n2.Run the first code sample.\r\n3.Run the second code sample\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5256",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5256/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5256/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5256/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5256",
    "id": 262935509,
    "number": 5256,
    "title": "Host test timing_drift_auto can return passing result even if crash occurs",
    "user": {
      "login": "c1728p9",
      "id": 2916772,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2916772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/c1728p9",
      "html_url": "https://github.com/c1728p9",
      "followers_url": "https://api.github.com/users/c1728p9/followers",
      "following_url": "https://api.github.com/users/c1728p9/following{/other_user}",
      "gists_url": "https://api.github.com/users/c1728p9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/c1728p9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/c1728p9/subscriptions",
      "organizations_url": "https://api.github.com/users/c1728p9/orgs",
      "repos_url": "https://api.github.com/users/c1728p9/repos",
      "events_url": "https://api.github.com/users/c1728p9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/c1728p9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-04T21:24:03Z",
    "updated_at": "2017-10-05T05:04:02Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "The host test timing_drift_auto returns success based on the individual test cases run, but not on the test as a whole. Because of this, if a crash occurs during teardown after all tests have run and passed then the host test will return pass, even though a crash occurred.\r\n\r\nAn example of this can be seen on the [nightly results](http://mbedosci.cloudapp.net/results/nightly/1515/PASS/NRF51_DK/GCC_ARM/test_log_NRF51_DK_GCC_ARM.txt) for PR #5242:\r\n```\r\n[1507071477.06][HTST][INF] DUT end time  : 16964000.0\r\n[1507071477.06][HTST][INF] min_pass : 16.2592500091 , max_pass : 17.6001000881 for 5.0%%\r\n[1507071477.06][HTST][INF] min_inconclusive : 15.9239000797 , max_inconclusive : 17.97075001\r\n[1507071477.06][HTST][INF] Time reported by device: 16.898\r\n[1507071477.06][HTST][INF] Test passed !!!\r\n[1507071477.07][SERI][TXD] {{pass;0}}\r\n[1507071477.19][CONN][RXD] Thread 0x0 error -6: Not allowed in ISR context\r\n[1507071690.48][HTST][INF] test suite run finished after 240.53 sec...\r\n[1507071690.48][CONN][INF] received special even '__host_test_finished' value='True', finishing\r\n[1507071690.51][HTST][INF] CONN exited with code: 0\r\n[1507071690.51][HTST][INF] No events in queue\r\n[1507071690.51][HTST][INF] stopped consuming events\r\n[1507071690.51][HTST][INF] host test result(): True\r\n[1507071690.51][HTST][WRN] missing __exit event from DUT\r\n[1507071690.51][HTST][WRN] missing __exit_event_queue event from host test\r\n[1507071690.51][HTST][INF] calling blocking teardown()\r\n[1507071690.51][HTST][INF] teardown() finished\r\n[1507071690.51][HTST][INF] {{result;success}}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5254",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5254/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5254/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5254/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5254",
    "id": 262927251,
    "number": 5254,
    "title": "Wi-Fi WPA2-Enterprise support",
    "user": {
      "login": "loverdeg-ep",
      "id": 24318071,
      "avatar_url": "https://avatars0.githubusercontent.com/u/24318071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loverdeg-ep",
      "html_url": "https://github.com/loverdeg-ep",
      "followers_url": "https://api.github.com/users/loverdeg-ep/followers",
      "following_url": "https://api.github.com/users/loverdeg-ep/following{/other_user}",
      "gists_url": "https://api.github.com/users/loverdeg-ep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loverdeg-ep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loverdeg-ep/subscriptions",
      "organizations_url": "https://api.github.com/users/loverdeg-ep/orgs",
      "repos_url": "https://api.github.com/users/loverdeg-ep/repos",
      "events_url": "https://api.github.com/users/loverdeg-ep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loverdeg-ep/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-10-04T20:54:53Z",
    "updated_at": "2018-01-08T11:06:16Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "## Question\r\n\r\nWhat is the current status of  WPA2-Enterprise support for WifiInterface and any existing WifiInterface implementations?\r\n\r\nPlanning?, progressing but private?, not on the roadmap? etc..\r\n\r\nI'm seeing a couple projects in which stakeholders want to make WPA2-Enterprise a requirement."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5251",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5251/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5251/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5251/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5251",
    "id": 262741409,
    "number": 5251,
    "title": "nRF51822 921600 baud bug",
    "user": {
      "login": "aritec",
      "id": 1751845,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1751845?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aritec",
      "html_url": "https://github.com/aritec",
      "followers_url": "https://api.github.com/users/aritec/followers",
      "following_url": "https://api.github.com/users/aritec/following{/other_user}",
      "gists_url": "https://api.github.com/users/aritec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aritec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aritec/subscriptions",
      "organizations_url": "https://api.github.com/users/aritec/orgs",
      "repos_url": "https://api.github.com/users/aritec/repos",
      "events_url": "https://api.github.com/users/aritec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aritec/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-04T10:40:09Z",
    "updated_at": "2017-10-04T14:11:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "On nRF51822 baud rate of 921600 b/s can't be set because of bug in serial_api.c:\r\nfor-loop needs to go up to 18\r\n```\r\n// serial_baud\r\n// set the baud rate, taking in to account the current SystemFrequency\r\nvoid serial_baud(serial_t *obj, int baudrate)\r\n{\r\n    if (baudrate<=1200) {\r\n        obj->uart->BAUDRATE = UART_BAUDRATE_BAUDRATE_Baud1200;\r\n        return;\r\n    }\r\n\r\n    for (int i = 1; i<18; i++) {\r\n        if (baudrate<acceptedSpeeds[i][0]) {\r\n            obj->uart->BAUDRATE = acceptedSpeeds[i - 1][1];\r\n            return;\r\n        }\r\n    }\r\n    obj->uart->BAUDRATE = UART_BAUDRATE_BAUDRATE_Baud1M;\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5244",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5244/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5244/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5244/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5244",
    "id": 262422023,
    "number": 5244,
    "title": "Compiling Odin Wifi driver fails with ARMC6 toolchain",
    "user": {
      "login": "JammuKekkonen",
      "id": 30659138,
      "avatar_url": "https://avatars0.githubusercontent.com/u/30659138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JammuKekkonen",
      "html_url": "https://github.com/JammuKekkonen",
      "followers_url": "https://api.github.com/users/JammuKekkonen/followers",
      "following_url": "https://api.github.com/users/JammuKekkonen/following{/other_user}",
      "gists_url": "https://api.github.com/users/JammuKekkonen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JammuKekkonen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JammuKekkonen/subscriptions",
      "organizations_url": "https://api.github.com/users/JammuKekkonen/orgs",
      "repos_url": "https://api.github.com/users/JammuKekkonen/repos",
      "events_url": "https://api.github.com/users/JammuKekkonen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JammuKekkonen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-10-03T13:12:58Z",
    "updated_at": "2017-10-10T13:25:52Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n\r\nCompiling Odin Wifi driver fails with ARMC6 toolchain\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nARMC6\r\n\r\n**mbed-os sha:**\r\ncc7556a92\r\n\r\n**Expected behavior**\r\nOdin wifi driver compiles\r\n\r\n**Actual behavior**\r\nError: L6218E: Undefined symbol typeinfo for NetworkInterface (referred from OdinWiFiInterface.o).\r\nFinished: 0 information, 1225 warning and 1 error messages.\r\n\r\n**Steps to reproduce**\r\ntry to compile as main.cpp:\r\n\r\n#include \"OdinWiFiInterface.h\"\r\nint main(void)\r\n{\r\n    OdinWiFiInterface wifi;\r\n    wifi.connect(\"ssid\", \"pass\", NSAPI_SECURITY_WPA_WPA2);\r\n    return 0;\r\n}\r\n\r\nmbed compile -t ARMC6 -m UBLOX_EVK_ODIN_W2"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5225",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5225/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5225/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5225/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5225",
    "id": 261699184,
    "number": 5225,
    "title": "Make MBED_MEM_TRACING_ENABLED an application config option",
    "user": {
      "login": "loverdeg-ep",
      "id": 24318071,
      "avatar_url": "https://avatars0.githubusercontent.com/u/24318071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loverdeg-ep",
      "html_url": "https://github.com/loverdeg-ep",
      "followers_url": "https://api.github.com/users/loverdeg-ep/followers",
      "following_url": "https://api.github.com/users/loverdeg-ep/following{/other_user}",
      "gists_url": "https://api.github.com/users/loverdeg-ep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loverdeg-ep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loverdeg-ep/subscriptions",
      "organizations_url": "https://api.github.com/users/loverdeg-ep/orgs",
      "repos_url": "https://api.github.com/users/loverdeg-ep/repos",
      "events_url": "https://api.github.com/users/loverdeg-ep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loverdeg-ep/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-09-29T16:41:10Z",
    "updated_at": "2018-03-21T13:58:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\nEnhancement\r\n- Related issue: [Handbook-#275](https://github.com/ARMmbed/Handbook/issues/275)\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nConfusion regarding the difference between an application config option and target/toolchain specific options\r\n\r\n**Suggested enhancement**\r\nMake MBED_MEM_TRACING_ENABLED an application config option\r\n\r\n**Pros**\r\nImproved OS configuration intuitiveness\r\n\r\n**Cons**\r\nUnsure"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5221",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5221/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5221/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5221/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5221",
    "id": 261587688,
    "number": 5221,
    "title": "new and delete operators should be handled by the Runtime memory tracing",
    "user": {
      "login": "javier-moreno-tridonic-com",
      "id": 14233019,
      "avatar_url": "https://avatars2.githubusercontent.com/u/14233019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/javier-moreno-tridonic-com",
      "html_url": "https://github.com/javier-moreno-tridonic-com",
      "followers_url": "https://api.github.com/users/javier-moreno-tridonic-com/followers",
      "following_url": "https://api.github.com/users/javier-moreno-tridonic-com/following{/other_user}",
      "gists_url": "https://api.github.com/users/javier-moreno-tridonic-com/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/javier-moreno-tridonic-com/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/javier-moreno-tridonic-com/subscriptions",
      "organizations_url": "https://api.github.com/users/javier-moreno-tridonic-com/orgs",
      "repos_url": "https://api.github.com/users/javier-moreno-tridonic-com/repos",
      "events_url": "https://api.github.com/users/javier-moreno-tridonic-com/events{/privacy}",
      "received_events_url": "https://api.github.com/users/javier-moreno-tridonic-com/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-09-29T09:44:17Z",
    "updated_at": "2017-09-29T16:45:18Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\nDue to the malloc wrapping done by those operators here:\r\nhttps://github.com/ARMmbed/mbed-os/blob/master/platform/mbed_retarget.cpp\r\n\r\nSome important information is destroyed as the traced \"caller\" will be always **new**, **new[]**... etc., preventing the identification of the class/function who really triggered the memory allocation. This complicates looking for leaks.\r\n\r\n**Suggested enhancement**\r\n \r\nI don't know if that would be a real option, but maybe those operators could be moved to https://github.com/ARMmbed/mbed-os/blob/master/platform/mbed_alloc_wrappers.cpp and integrated in the tracing mechanism."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5211",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5211/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5211/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5211/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5211",
    "id": 260983954,
    "number": 5211,
    "title": "OdinWiFiInterface constructor has side-effects",
    "user": {
      "login": "kylestein-arm",
      "id": 27777713,
      "avatar_url": "https://avatars2.githubusercontent.com/u/27777713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kylestein-arm",
      "html_url": "https://github.com/kylestein-arm",
      "followers_url": "https://api.github.com/users/kylestein-arm/followers",
      "following_url": "https://api.github.com/users/kylestein-arm/following{/other_user}",
      "gists_url": "https://api.github.com/users/kylestein-arm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kylestein-arm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kylestein-arm/subscriptions",
      "organizations_url": "https://api.github.com/users/kylestein-arm/orgs",
      "repos_url": "https://api.github.com/users/kylestein-arm/repos",
      "events_url": "https://api.github.com/users/kylestein-arm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kylestein-arm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-09-27T13:56:24Z",
    "updated_at": "2017-10-05T11:08:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "\r\n### Description\r\nThe construction of an instance of OdinWiFiInterface manipulates the system event queue in such a way that previous configuration is lost.  In particular, when used with MbedCloudClient, the OdinWiFiInterface can cancel timers that were set up by the cloud client.\r\n\r\n- Type: Bug\r\n- Related issue: none known\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\nCode behaves differently depending on when an OdinWiFiInterface is instantiated.  \r\nFor instance\r\n```\r\n{\r\n    OdinWiFiInterface wifi;\r\n   \r\n    ...\r\n\r\n    MbedCloudClient _cloud_client;\r\n\r\n    _cloud_client.setup(&wifi);\r\n    ...\r\n}\r\n```\r\nruns as expected,\r\nBut\r\n```\r\n{\r\n    OdinWiFiInterface *wifi;\r\n    MbedCloudClient _cloud_client;\r\n\r\n    ...\r\n    wifi = new OdinWiFiInterface();\r\n    ...\r\n     _cloud_client.setup(wifi);\r\n    ...\r\n}\r\n```\r\nresults in a cloud client whose timers do not fire (for example it won't send keep-alive messages to the cloud)\r\n\r\nFiles using mbed-cloud-client-example-restricted to demonstrate this behavior are attached.\r\n\r\n[original.log](https://github.com/ARMmbed/mbed-os/files/1337375/original.log)\r\noriginal.log - the trace debug log of mbed-cloud-client-example-restricted (unmodified). \r\n[easy-connect-patch.txt](https://github.com/ARMmbed/mbed-os/files/1337383/easy-connect-patch.txt)\r\neasy-connect-patch.txt - patch for easy-connect.h\r\n[modified.log](https://github.com/ARMmbed/mbed-os/files/1337384/modified.log)\r\nmodified.log - the trace debug log of mbed-cloud-client-example-restricted (with easy-connect.patch applied)\r\n\r\nmbed-cloud-client-example-restricted uses the easy-connect library which instantiates a global OdinWiFiInterface at initialization.  The patch modifies easy-connect, so that the OdinWiFiInterface is instantiated dynamically just before it is needed.\r\n\r\noriginal.log shows the mbed cloud-client sending a keep-alive message as the result of a timer expiration\r\n...\r\n[DBG ][mClt]: M2MNsdlInterface::timer_expired - M2MTimerObserver::Registration - Send update registration\r\n[DBG ][mClt]: M2MNsdlInterface::send_update_registration( lifetime 0)\r\n...\r\n\r\nThese log messages are missing from modified.log.\r\n\r\n\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n\r\n**mbed-cli version:** \r\n1.1.0\r\n\r\n**mbed-os sha:**\r\nfc1836545 Merge pull request #4463 from ARMmbed/release-candidate\r\n\r\n**DAPLink version:**\r\n\r\n**Expected behavior**\r\nMbed cloud client should behave consistently regardless of when an OdinWiFiInterface is instantiated.\r\n\r\n**Actual behavior**\r\nTimers do not expire and thus Mbed cloud client does not send keep-alive messages in the case where an OdinWiFiInterface is instantiated after the cloud client.\r\n\r\n\r\n**Steps to reproduce**\r\nApply easy-connect-patch.txt to the easy-connect library in mbed-cloud-client-example-restricted.  Execute mbed-cloud-client-example-restricted\r\n\r\n\r\n\r\n----------------------------------------------------------------\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5206",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5206/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5206/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5206/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5206",
    "id": 260887871,
    "number": 5206,
    "title": "No way to efficiently wait for crypto accelerator operations in HAL",
    "user": {
      "login": "andresag01",
      "id": 3746901,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3746901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andresag01",
      "html_url": "https://github.com/andresag01",
      "followers_url": "https://api.github.com/users/andresag01/followers",
      "following_url": "https://api.github.com/users/andresag01/following{/other_user}",
      "gists_url": "https://api.github.com/users/andresag01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andresag01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andresag01/subscriptions",
      "organizations_url": "https://api.github.com/users/andresag01/orgs",
      "repos_url": "https://api.github.com/users/andresag01/repos",
      "events_url": "https://api.github.com/users/andresag01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andresag01/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 521940966,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tls",
        "name": "component: tls",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-09-27T08:25:11Z",
    "updated_at": "2017-10-06T17:17:09Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\nWhen looking at the code for crypto hardware acceleration, we noticed that there are many locations where a command is issued to the accelerator, then the thread must must wait for the operation to be completed. The mbed TLS API is mostly synchronous, so for lack of an alternative mechanism, the thread simply is set to busy wait until the accelerator has finished. This behaviour is inefficient as those CPU cycles could be used to execute another thread instead of manually checking on a condition. \r\n\r\n**Suggested enhancement**\r\nAn idea to avoid the busy waits mentioned above is to have some mechanism that enabled HAL code to issue a command for the accelerator or a peripheral and then wait on a condition that would be satisfied (e.g. by means of a semaphore) when the operation has completed.\r\n\r\n**Pros**\r\nThreads can more efficiently be scheduled and blocking in the form of busy waiting for events to occur can be avoided in a much easier way.\r\n\r\n**Cons**\r\nProbably there might be issues with backwards compatibility when adding this new feature."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5153",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5153/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5153/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5153/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5153",
    "id": 259270766,
    "number": 5153,
    "title": "Memap stats depth of 0 has unexpected behavior",
    "user": {
      "login": "theotherjimmy",
      "id": 685409,
      "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theotherjimmy",
      "html_url": "https://github.com/theotherjimmy",
      "followers_url": "https://api.github.com/users/theotherjimmy/followers",
      "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
      "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
      "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
      "repos_url": "https://api.github.com/users/theotherjimmy/repos",
      "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-09-20T19:11:29Z",
    "updated_at": "2017-10-02T09:03:25Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "# Description\r\n- Type: Bug and/or Enhancement  -- I'm honestly not sure\r\n- Related issue: `#abc`\r\n- Priority: Minor\r\n\r\nI don't think that `mbed compile` or `mbed test` for the argument `--stats-depth 0` does what I expect. With `--stats-depth 2` you get the following output:\r\n```\r\n+------------------+-------+-------+------+\r\n| Module           | .text | .data | .bss |\r\n+------------------+-------+-------+------+\r\n| [fill]           |    90 |     3 |   41 |\r\n| [lib]/libc.a     | 24469 |  2472 |   56 |\r\n| [lib]/libgcc.a   |  7134 |     0 |    0 |\r\n| [lib]/libnosys.a |    32 |     0 |    0 |\r\n| [lib]/misc       |   208 |     8 |   25 |\r\n| blinky/BUILD     | 35933 |   273 | 6010 |\r\n| fat-fs/BUILD     |  2811 |     0 | 1960 |\r\n| mbed-os/BUILD    |  2036 |     4 |  180 |\r\n| Subtotals        | 72713 |  2760 | 8272 |\r\n+------------------+-------+-------+------+\r\n```\r\nDisregarding the bugs mentioned in #5124 #5127 #4976, This output makes sense: it truncates the hierarchy from the file system at a depth of 2. The simple `du` (disk usage) comand does the same thing with it's `--max-depth` argument.\r\nFor reference,\r\n```\r\n# du --max-depth 2 -h\r\n0\t./.git/branches\r\n44K\t./.git/hooks\r\n4.0K\t./.git/info\r\n2.4M\t./.git/refs\r\n223M\t./.git/objects\r\n2.5M\t./.git/logs\r\n229M\t./.git\r\n8.0K\t./.github\r\n8.0K\t./TESTS/host_tests\r\n4.0K\t./TESTS/integration\r\n84K\t./TESTS/mbed_drivers\r\n72K\t./TESTS/mbed_functional\r\n116K\t./TESTS/mbed_hal\r\n36K\t./TESTS/mbedmicro-mbed\r\n100K\t./TESTS/mbedmicro-rtos-mbed\r\n44K\t./TESTS/storage_abstraction\r\n12K\t./TESTS/events\r\n12K\t./TESTS/mbedtls\r\n4.0K\t./TESTS/netsocket\r\n12K\t./TESTS/network\r\n504K\t./TESTS\r\n4.1M\t./features/FEATURE_BLE\r\n1.4M\t./features/FEATURE_COMMON_PAL\r\n8.1M\t./features/FEATURE_UVISOR\r\n488K\t./features/frameworks\r\n3.5M\t./features/mbedtls\r\n2.6M\t./features/storage\r\n5.2M\t./features/FEATURE_LWIP\r\n40K\t./features/TESTS\r\n364K\t./features/filesystem\r\n79M\t./features/nanostack\r\n284K\t./features/netsocket\r\n14M\t./features/unsupported\r\n118M\t./features\r\n780K\t./rtos/TARGET_CORTEX\r\n876K\t./rtos\r\n3.0M\t./tools/arm_pack_manager\r\n156K\t./tools/bootloaders\r\n56K\t./tools/compliance\r\n84K\t./tools/config\r\n24K\t./tools/data\r\n24K\t./tools/dev\r\n2.1M\t./tools/export\r\n364K\t./tools/host_tests\r\n16K\t./tools/misc\r\n92K\t./tools/targets\r\n496K\t./tools/test\r\n192K\t./tools/toolchains\r\n24K\t./tools/flash_algo\r\n4.0K\t./tools/git_hooks\r\n12K\t./tools/profiles\r\n7.3M\t./tools\r\n12K\t./cmsis/TOOLCHAIN_IAR\r\n184K\t./cmsis/TARGET_CORTEX_A\r\n156K\t./cmsis/TARGET_CORTEX_M\r\n8.0K\t./cmsis/TOOLCHAIN_GCC\r\n1.8M\t./cmsis\r\n292K\t./drivers\r\n88K\t./events/equeue\r\n408K\t./events\r\n12K\t./hal/TARGET_FLASH_CMSIS_ALGO\r\n44K\t./hal/storage_abstraction\r\n208K\t./hal\r\n564K\t./platform\r\n5.1M\t./targets/TARGET_ARM_SSG\r\n14M\t./targets/TARGET_Atmel\r\n11M\t./targets/TARGET_Maxim\r\n14M\t./targets/TARGET_NORDIC\r\n13M\t./targets/TARGET_NUVOTON\r\n600K\t./targets/TARGET_ONSEMI\r\n5.7M\t./targets/TARGET_RENESAS\r\n129M\t./targets/TARGET_STM\r\n78M\t./targets/TARGET_Silicon_Labs\r\n600K\t./targets/TARGET_WIZNET\r\n216K\t./targets/TARGET_ublox\r\n11M\t./targets/TARGET_Realtek\r\n31M\t./targets/TARGET_Freescale\r\n8.4M\t./targets/TARGET_NXP\r\n644K\t./targets/TARGET_TOSHIBA\r\n319M\t./targets\r\n15M\t./BUILD/tests\r\n15M\t./BUILD\r\n692M\t.\r\n```\r\n\r\nHowever, Memap and `du` diverge on what to do when `--stats-depth`/`--map-depth` are set to 0.\r\n\r\nMemap's behavior:\r\n```\r\n+------------------------------------------------------------------------------------------------------------------------------------------------+-------+-------+------+\r\n| Module                                                                                                                                         | .text | .data | .bss |\r\n+------------------------------------------------------------------------------------------------------------------------------------------------+-------+-------+------+\r\n| [fill]                                                                                                                                         |    90 |     3 |   41 |\r\n| [lib]/libc.a/lib_a-abort.o                                                                                                                     |    16 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-assert.o                                                                                                                    |   127 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-callocr.o                                                                                                                   |    88 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-closer.o                                                                                                                    |    36 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-ctype_.o                                                                                                                    |   257 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-dtoa.o                                                                                                                      |  4332 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-errno.o                                                                                                                     |    12 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-fclose.o                                                                                                                    |   140 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-fflush.o                                                                                                                    |   380 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-findfp.o                                                                                                                    |   280 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-fini.o                                                                                                                      |    52 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-fiprintf.o                                                                                                                  |    36 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-fputwc.o                                                                                                                    |   184 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-freer.o                                                                                                                     |   604 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-fstatr.o                                                                                                                    |    40 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-fvwrite.o                                                                                                                   |   772 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-fwalk.o                                                                                                                     |    76 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-impure.o                                                                                                                    |     0 |  1068 |    0 |\r\n| [lib]/libc.a/lib_a-init.o                                                                                                                      |    72 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-isalpha.o                                                                                                                   |    20 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-isattyr.o                                                                                                                   |    36 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-isdigit.o                                                                                                                   |    20 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-isspace.o                                                                                                                   |    20 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-locale.o                                                                                                                    |    72 |   364 |    0 |\r\n| [lib]/libc.a/lib_a-localeconv.o                                                                                                                |    28 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-lseekr.o                                                                                                                    |    40 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-makebuf.o                                                                                                                   |   240 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-malloc.o                                                                                                                    |    40 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-mallocr.o                                                                                                                   |  1384 |  1040 |   52 |\r\n| [lib]/libc.a/lib_a-mbtowc_r.o                                                                                                                  |    44 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-memchr-stub.o                                                                                                               |   128 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-memcpy-stub.o                                                                                                               |   132 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-memmove.o                                                                                                                   |   160 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-memset.o                                                                                                                    |   148 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-mprec.o                                                                                                                     |  1932 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-readr.o                                                                                                                     |    40 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-reallocr.o                                                                                                                  |   892 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-reent.o                                                                                                                     |     0 |     0 |    4 |\r\n| [lib]/libc.a/lib_a-sbrkr.o                                                                                                                     |    36 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-signal.o                                                                                                                    |   112 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-signalr.o                                                                                                                   |    48 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-sprintf.o                                                                                                                   |    68 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-stdio.o                                                                                                                     |   156 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-strcmp.o                                                                                                                    |   136 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-strlen-stub.o                                                                                                               |   100 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-svfiprintf.o                                                                                                                |   288 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-svfprintf.o                                                                                                                 |  6082 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-vfiprintf.o                                                                                                                 |  3791 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-vsnprintf.o                                                                                                                 |   148 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-vsprintf.o                                                                                                                  |    72 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-wbuf.o                                                                                                                      |   188 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-wcrtomb.o                                                                                                                   |    84 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-wctomb_r.o                                                                                                                  |    28 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-writer.o                                                                                                                    |    40 |     0 |    0 |\r\n| [lib]/libc.a/lib_a-wsetup.o                                                                                                                    |   212 |     0 |    0 |\r\n| [lib]/libgcc.a/_aeabi_uldivmod.o                                                                                                               |    64 |     0 |    0 |\r\n| [lib]/libgcc.a/_arm_cmpdf2.o                                                                                                                   |   124 |     0 |    0 |\r\n| [lib]/libgcc.a/_ashldi3.o                                                                                                                      |    24 |     0 |    0 |\r\n| [lib]/libgcc.a/_clzdi2.o                                                                                                                       |    24 |     0 |    0 |\r\n| [lib]/libgcc.a/_clzsi2.o                                                                                                                       |    60 |     0 |    0 |\r\n| [lib]/libgcc.a/_divsi3.o                                                                                                                       |   168 |     0 |    0 |\r\n| [lib]/libgcc.a/_dvmd_tls.o                                                                                                                     |     4 |     0 |    0 |\r\n| [lib]/libgcc.a/_lshrdi3.o                                                                                                                      |    24 |     0 |    0 |\r\n| [lib]/libgcc.a/_muldi3.o                                                                                                                       |    68 |     0 |    0 |\r\n| [lib]/libgcc.a/_thumb1_case_sqi.o                                                                                                              |    20 |     0 |    0 |\r\n| [lib]/libgcc.a/_thumb1_case_uhi.o                                                                                                              |    20 |     0 |    0 |\r\n| [lib]/libgcc.a/_thumb1_case_uqi.o                                                                                                              |    20 |     0 |    0 |\r\n| [lib]/libgcc.a/_udivmoddi4.o                                                                                                                   |   226 |     0 |    0 |\r\n| [lib]/libgcc.a/_udivsi3.o                                                                                                                      |   140 |     0 |    0 |\r\n| [lib]/libgcc.a/adddf3.o                                                                                                                        |  1456 |     0 |    0 |\r\n| [lib]/libgcc.a/divdf3.o                                                                                                                        |  1276 |     0 |    0 |\r\n| [lib]/libgcc.a/eqdf2.o                                                                                                                         |   112 |     0 |    0 |\r\n| [lib]/libgcc.a/fixdfsi.o                                                                                                                       |   104 |     0 |    0 |\r\n| [lib]/libgcc.a/floatsidf.o                                                                                                                     |   104 |     0 |    0 |\r\n| [lib]/libgcc.a/floatunsidf.o                                                                                                                   |    84 |     0 |    0 |\r\n| [lib]/libgcc.a/gedf2.o                                                                                                                         |   192 |     0 |    0 |\r\n| [lib]/libgcc.a/ledf2.o                                                                                                                         |   196 |     0 |    0 |\r\n| [lib]/libgcc.a/muldf3.o                                                                                                                        |  1100 |     0 |    0 |\r\n| [lib]/libgcc.a/subdf3.o                                                                                                                        |  1472 |     0 |    0 |\r\n| [lib]/libgcc.a/unorddf2.o                                                                                                                      |    52 |     0 |    0 |\r\n| [lib]/libnosys.a/getpid.o                                                                                                                      |    16 |     0 |    0 |\r\n| [lib]/libnosys.a/kill.o                                                                                                                        |    16 |     0 |    0 |\r\n| [lib]/misc/crt0.o                                                                                                                              |   108 |     0 |    0 |\r\n| [lib]/misc/crtbegin.o                                                                                                                          |    72 |     8 |   25 |\r\n| [lib]/misc/crtend.o                                                                                                                            |     4 |     0 |    0 |\r\n| [lib]/misc/crti.o                                                                                                                              |     8 |     0 |    0 |\r\n| [lib]/misc/crtn.o                                                                                                                              |    16 |     0 |    0 |\r\n| blinky/BUILD/k64f/arm/mbed-os/drivers/RawSerial.o                                                                                              |   392 |     0 |    0 |\r\n| blinky/BUILD/k64f/arm/mbed-os/drivers/SerialBase.o                                                                                             |   398 |     0 |    0 |\r\n| blinky/BUILD/k64f/arm/mbed-os/features/frameworks/greentea-client/source/greentea_test_env.o                                                   |  1428 |    56 |    8 |\r\n| blinky/BUILD/k64f/arm/mbed-os/hal/mbed_gpio.o                                                                                                  |   220 |     0 |    0 |\r\n| blinky/BUILD/k64f/arm/mbed-os/platform/mbed_alloc_wrappers.o                                                                                   |    44 |     0 |    0 |\r\n| blinky/BUILD/k64f/arm/mbed-os/platform/mbed_board.o                                                                                            |   366 |     0 |    0 |\r\n| blinky/BUILD/k64f/arm/mbed-os/rtos/TARGET_CORTEX/mbed_boot.o                                                                                   |   431 |     0 | 4360 |\r\n| blinky/BUILD/k64f/arm/mbed-os/rtos/TARGET_CORTEX/rtx5/rtx_delay.o                                                                              |    68 |     0 |    0 |\r\n| blinky/BUILD/k64f/arm/mbed-os/rtos/TARGET_CORTEX/rtx5/rtx_system.o                                                                             |   376 |     0 |    0 |\r\n| blinky/BUILD/k64f/arm/mbed-os/targets/TARGET_Freescale/TARGET_MCUXpresso_MCUS/api/gpio_api.o                                                   |   676 |     0 |  167 |\r\n| blinky/BUILD/k64f/armc6/main.o                                                                                                                 |  9751 |     4 |  413 |\r\n| blinky/BUILD/k64f/armc6/mbed-os/drivers/Timer.o                                                                                                |   202 |     0 |    0 |\r\n| blinky/BUILD/k64f/armc6/mbed-os/features/frameworks/greentea-client/source/greentea_metrics.o                                                  |    67 |     0 |    0 |\r\n| blinky/BUILD/k64f/armc6/mbed-os/features/frameworks/utest/source/unity_handler.o                                                               |   182 |     0 |    0 |\r\n| blinky/BUILD/k64f/armc6/mbed-os/features/frameworks/utest/source/utest_shim.o                                                                  |   416 |     0 |   68 |\r\n| blinky/BUILD/k64f/armc6/mbed-os/platform/mbed_error.o                                                                                          |    44 |     0 |    1 |\r\n| blinky/BUILD/k64f/armc6/mbed-os/rtos/TARGET_CORTEX/rtx5/rtx_msgqueue.o                                                                         |  1714 |     0 |    0 |\r\n| blinky/BUILD/k64f/armc6/mbed-os/rtos/TARGET_CORTEX/rtx5/rtx_thread.o                                                                           |  2076 |     0 |    0 |\r\n| blinky/BUILD/k64f/armc6/mbed-os/targets/TARGET_Freescale/TARGET_MCUXpresso_MCUS/TARGET_MCU_K64F/serial_api.o                                   |  1320 |     0 |  132 |\r\n| blinky/BUILD/k64f/gcc_arm/mbed-os/events/EventQueue.o                                                                                          |    62 |     0 |    0 |\r\n| blinky/BUILD/k64f/gcc_arm/mbed-os/events/equeue/equeue.o                                                                                       |  1200 |     0 |    0 |\r\n| blinky/BUILD/k64f/gcc_arm/mbed-os/rtos/TARGET_CORTEX/rtx5/rtx_kernel.o                                                                         |  1343 |   176 |    0 |\r\n| blinky/BUILD/k64f/iar/mbed-os/rtos/TARGET_CORTEX/rtx5/rtx_mutex.o                                                                              |   844 |     0 |    0 |\r\n| blinky/BUILD/k64f/iar/mbed-os/targets/TARGET_Freescale/TARGET_MCUXpresso_MCUS/TARGET_MCU_K64F/us_ticker.o                                      |   530 |     0 |    5 |\r\n| blinky/BUILD/mbed-os/features/frameworks/utest/source/utest_default_handlers.o                                                                 |   611 |     0 |    0 |\r\n| blinky/BUILD/mbed-os/features/frameworks/utest/source/utest_harness.o                                                                          |  2214 |    13 |  121 |\r\n| blinky/BUILD/mbed-os/features/frameworks/utest/source/utest_types.o                                                                            |   723 |     0 |    0 |\r\n| blinky/BUILD/mbed-os/rtos/TARGET_CORTEX/mbed_rtx_handlers.o                                                                                    |   649 |     0 |    0 |\r\n| blinky/BUILD/mbed-os/targets/TARGET_Freescale/TARGET_MCUXpresso_MCUS/api/lp_ticker.o                                                           |    98 |     0 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/drivers/I2C.o                                                                                                |    18 |     0 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/features/frameworks/utest/source/utest_greentea_handlers.o                                                   |   331 |     0 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/platform/mbed_critical.o                                                                                     |    62 |     0 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/platform/mbed_retarget.o                                                                                     |   647 |     4 |  264 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/platform/mbed_wait_api_rtos.o                                                                                |    64 |     0 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/rtos/TARGET_CORTEX/rtx5/TARGET_M0/TOOLCHAIN_ARM/irq_cm0.o                                                    |   152 |     0 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/rtos/TARGET_CORTEX/rtx5/rt_OsEventObserver.o                                                                 |     0 |     0 |    4 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/rtos/TARGET_CORTEX/rtx5/rtx_evflags.o                                                                        |  1168 |     0 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/rtos/TARGET_CORTEX/rtx5/rtx_memory.o                                                                         |   254 |     0 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/rtos/TARGET_CORTEX/rtx5/rtx_mempool.o                                                                        |   232 |     0 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/rtos/Thread.o                                                                                                |     8 |     0 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/TARGET_MCU_NRF51822_UNIFIED/device/cmsis_nvic.o                            |    16 |     0 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/TARGET_MCU_NRF51822_UNIFIED/device/system_nrf51.o                          |   252 |     4 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/TARGET_SDK11/drivers_nrf/common/nrf_drv_common.o                           |   100 |     0 |    0 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/TARGET_SDK11/drivers_nrf/gpiote/nrf_drv_gpiote.o                           |  1200 |     0 |   92 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/TARGET_SDK11/libraries/fds/fds.o                                           |  2018 |    16 |  281 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/TARGET_SDK11/libraries/fstorage/fstorage.o                                 |   534 |     0 |   89 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/nordic_critical.o                                                          |   396 |     0 |    5 |\r\n| blinky/BUILD/nrf51_dk/arm/mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/reloc_vector_table.o                                                       |    36 |     0 |    0 |\r\n| fat-fs/BUILD/k64f/armc6/mbed-os/drivers/InterruptIn.o                                                                                          |    90 |     0 |    0 |\r\n| fat-fs/BUILD/k64f/armc6/mbed-os/drivers/Timeout.o                                                                                              |   167 |     0 |    0 |\r\n| fat-fs/BUILD/k64f/armc6/mbed-os/drivers/TimerEvent.o                                                                                           |   180 |     0 |    0 |\r\n| fat-fs/BUILD/k64f/armc6/mbed-os/features/frameworks/greentea-client/source/greentea_serial.o                                                   |    90 |     0 |  156 |\r\n| fat-fs/BUILD/k64f/armc6/mbed-os/features/frameworks/unity/source/unity.o                                                                       |  1146 |     0 |  160 |\r\n| fat-fs/BUILD/k64f/armc6/mbed-os/features/frameworks/utest/mbed-utest-shim.o                                                                    |    16 |     0 |    0 |\r\n| fat-fs/BUILD/k64f/armc6/mbed-os/features/frameworks/utest/source/utest_case.o                                                                  |    62 |     0 |    0 |\r\n| fat-fs/BUILD/k64f/armc6/mbed-os/hal/mbed_lp_ticker_api.o                                                                                       |    56 |     0 |   24 |\r\n| fat-fs/BUILD/k64f/armc6/mbed-os/hal/mbed_ticker_api.o                                                                                          |   436 |     0 |    0 |\r\n| fat-fs/BUILD/k64f/armc6/mbed-os/rtos/TARGET_CORTEX/rtx5/rtx_lib.o                                                                              |   260 |     0 | 1620 |\r\n| fat-fs/BUILD/k64f/armc6/mbed-os/rtos/TARGET_CORTEX/rtx5/rtx_timer.o                                                                            |   228 |     0 |    0 |\r\n| fat-fs/BUILD/k64f/armc6/mbed-os/targets/TARGET_Freescale/TARGET_MCUXpresso_MCUS/api/sleep.o                                                    |    80 |     0 |    0 |\r\n| mbed-os/BUILD/tests/nrf51_dk/gcc_arm/drivers/Ticker.o                                                                                          |   238 |     0 |    0 |\r\n| mbed-os/BUILD/tests/nrf51_dk/gcc_arm/events/equeue/equeue_mbed.o                                                                               |   314 |     0 |   93 |\r\n| mbed-os/BUILD/tests/nrf51_dk/gcc_arm/hal/mbed_sleep_manager.o                                                                                  |   219 |     0 |    2 |\r\n| mbed-os/BUILD/tests/nrf51_dk/gcc_arm/hal/mbed_us_ticker_api.o                                                                                  |    56 |     0 |   24 |\r\n| mbed-os/BUILD/tests/nrf51_dk/gcc_arm/platform/mbed_assert.o                                                                                    |    85 |     0 |    0 |\r\n| mbed-os/BUILD/tests/nrf51_dk/gcc_arm/rtos/TARGET_CORTEX/mbed_rtx_idle.o                                                                        |   714 |     4 |   52 |\r\n| mbed-os/BUILD/tests/nrf51_dk/gcc_arm/rtos/TARGET_CORTEX/rtx5/rtx_evr.o                                                                         |   138 |     0 |    0 |\r\n| mbed-os/BUILD/tests/nrf51_dk/gcc_arm/targets/TARGET_NORDIC/TARGET_NRF5/TARGET_MCU_NRF51822_UNIFIED/device/TOOLCHAIN_GCC_ARM/startup_NRF51822.o |   260 |     0 |    0 |\r\n| mbed-os/BUILD/tests/nrf51_dk/gcc_arm/targets/TARGET_NORDIC/TARGET_NRF5/TARGET_SDK11/softdevice/common/softdevice_handler/softdevice_handler.o  |    12 |     0 |    9 |\r\n| Subtotals                                                                                                                                      | 72713 |  2760 | 8272 |\r\n+------------------------------------------------------------------------------------------------------------------------------------------------+-------+-------+------+\r\n```\r\n\r\nAgain, please disregard the aforementioned bugs.\r\n\r\nand `du`:\r\n```\r\n# du --max-depth 0 -h\r\n692M\t.\r\n```\r\n\r\nFor reference, I think that `--stats-depth 0` should print:\r\n```\r\n+-----------+-------+-------+------+\r\n| Module    | .text | .data | .bss |\r\n+-----------+-------+-------+------+\r\n| Subtotals | 72713 |  2760 | 8272 |\r\n+-----------+-------+-------+------+\r\nTotal Static RAM memory (data + bss): 11032 bytes\r\nTotal Flash memory (text + data): 75473 bytes\r\nImage: BUILD/tests/nrf51_dk/gcc_arm/TESTS/events/queue/queue.hex\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5142",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5142/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5142/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5142/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5142",
    "id": 259013406,
    "number": 5142,
    "title": "[OOB 5.6 r2] make_armc6 exporter does not support NRF52_DK and K64F",
    "user": {
      "login": "toyowata",
      "id": 4926755,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4926755?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toyowata",
      "html_url": "https://github.com/toyowata",
      "followers_url": "https://api.github.com/users/toyowata/followers",
      "following_url": "https://api.github.com/users/toyowata/following{/other_user}",
      "gists_url": "https://api.github.com/users/toyowata/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toyowata/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toyowata/subscriptions",
      "organizations_url": "https://api.github.com/users/toyowata/orgs",
      "repos_url": "https://api.github.com/users/toyowata/repos",
      "events_url": "https://api.github.com/users/toyowata/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toyowata/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-09-20T01:36:45Z",
    "updated_at": "2017-09-27T11:17:28Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNRF52_DK and K64F ~~(and others?)~~\r\n\r\n**Toolchain:**\r\nARMC6\r\n\r\n**Toolchain version:**\r\nProduct: MDK Professional 5.24\r\nComponent: ARM Compiler 6.7\r\nTool: armclang [5c9efc00]\r\n\r\n**mbed-cli version:** \r\n1.2.0\r\n\r\n**mbed-os sha:**\r\nmbed-os-example-blinky (4230f67abdcb)\r\n`- mbed-os (6e087488e101)\r\n\r\n**Expected behavior**\r\n```mbed export -m NRF52_DK -i make_armc6``` create Makefile.\r\n\r\n**Actual behavior**\r\n```mbed export -m NRF52_DK -i make_armc6``` does not create Makefile.\r\n\r\n```\r\nE:\\oob\\mbed-os-example-blinky> mbed export -m NRF52_DK -i make_armc6\r\nusage: project.py [-h] [-m MCU] [-i IDE] [-c] [-p PROGRAM] [-n PROGRAM] [-b]\r\n                  [-L] [-S [{matrix,ides}]] [-E] [--source SOURCE_DIR]\r\n                  [-D MACROS] [--profile PROFILE] [--update-packs]\r\n                  [--app-config APP_CONFIG]\r\nproject.py: error: NRF52_DK not supported by make_armc6\r\n[mbed] ERROR: \"c:\\python27\\python.exe\" returned error code 2.\r\n[mbed] ERROR: Command \"c:\\python27\\python.exe -u E:\\oob\\mbed-os-example-blinky\\mbed-os\\tools\\project.py -i make_armc6 -m NRF52_DK --source .\" in \"E:\\oob\\mbed-os-example-blinky\"\r\n---\r\nE:\\oob\\mbed-os-example-blinky>\r\n```\r\n**Steps to reproduce**\r\n\r\n$ mbed import mbed-os-example-blinky\r\n$ cd mbed-os-example-blinky\r\n$ mbed update mbed-os-5.6-oob2\r\n$ mbed export -m NRF52_DK -i make_armc6\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5139",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5139/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5139/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5139/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5139",
    "id": 258745592,
    "number": 5139,
    "title": "OdinWiFiInterface crashes",
    "user": {
      "login": "SeppoTakalo",
      "id": 3104794,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3104794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SeppoTakalo",
      "html_url": "https://github.com/SeppoTakalo",
      "followers_url": "https://api.github.com/users/SeppoTakalo/followers",
      "following_url": "https://api.github.com/users/SeppoTakalo/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeppoTakalo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SeppoTakalo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeppoTakalo/subscriptions",
      "organizations_url": "https://api.github.com/users/SeppoTakalo/orgs",
      "repos_url": "https://api.github.com/users/SeppoTakalo/repos",
      "events_url": "https://api.github.com/users/SeppoTakalo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SeppoTakalo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 16,
    "created_at": "2017-09-19T08:59:32Z",
    "updated_at": "2018-03-08T09:38:24Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n-----------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**mbed-cli version:** \r\n1.2.0\r\n\r\n**mbed-os sha:**\r\n\r\n| tag/branch | works |\r\n|--------|-------|\r\n| mbed-os-5.6.0-rc1 | no |\r\n| mbed-os-5.5.7 | no |\r\n| mbed-os-5.5.1 | yes |\r\n| mbed-os-5.5.0 | no |\r\n| mbed-os-5.4.7 | yes |\r\n| mbed-os-5.4.5 | yes |\r\n| master(#79bd2638) | yes |\r\n| mbed-os-5.7.6 | no |\r\n| mbed-os-5.7.0 | yes |\r\n| mbed-os-5.8.0-rc1 | yes |\r\n\r\n**Expected behavior**\r\nDriver initialises itself.\r\n\r\n**Actual behavior**\r\nDriver crashes, program does not continue.\r\n\r\n**Steps to reproduce**\r\n```\r\n$ mbed new odin-test\r\n$ cd odin-test\r\n```\r\n\r\nEdit `main.cpp` to contain following\r\n\r\n```\r\n#include \"mbed.h\"\r\n#include \"OdinWiFiInterface.h\"\r\n\r\nint main()\r\n{\r\n    printf(\"Initialising OdinWiFiInterface\\r\\n\");\r\n    wait(0.5);\r\n    OdinWiFiInterface wifi;\r\n\r\n    printf(\"Done\\r\\n\");\r\n    return 0;\r\n}\r\n```\r\n\r\nBuild & flash.\r\n\r\nCheck serial port:\r\n`Initialising OdinWiFiInterface` is printed but `Done` does not appear.\r\n\r\nWorks on version `5.5.1` and `5.4.7`\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5133",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5133/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5133/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5133/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5133",
    "id": 258512433,
    "number": 5133,
    "title": "NRF51_DK - AnalogIn, PWM, Concurrent GPIO failures (CI test shield) ",
    "user": {
      "login": "scartmell-arm",
      "id": 30798917,
      "avatar_url": "https://avatars1.githubusercontent.com/u/30798917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scartmell-arm",
      "html_url": "https://github.com/scartmell-arm",
      "followers_url": "https://api.github.com/users/scartmell-arm/followers",
      "following_url": "https://api.github.com/users/scartmell-arm/following{/other_user}",
      "gists_url": "https://api.github.com/users/scartmell-arm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scartmell-arm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scartmell-arm/subscriptions",
      "organizations_url": "https://api.github.com/users/scartmell-arm/orgs",
      "repos_url": "https://api.github.com/users/scartmell-arm/repos",
      "events_url": "https://api.github.com/users/scartmell-arm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scartmell-arm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 18,
    "created_at": "2017-09-18T15:01:47Z",
    "updated_at": "2017-11-27T13:50:08Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNRF51_DK\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n6\r\n\r\n**mbed-cli version:**\r\n1.2.0\r\n\r\n**mbed-os sha:**\r\nCurrent master `https://github.com/ARMmbed/mbed-os/#0906be6397c984026df180b07a3bbd965af52346`\r\n\r\n**Expected behavior**\r\nAll tests should pass.\r\n\r\n\r\n**Actual behavior**\r\n```\r\n+------------------+---------------+-----------------------------+------------------------------------------------------------------------+--------+--------+--------+--------------------+\r\n| target           | platform_name | test suite                  | test case                                                              | passed | failed | result | elapsed_time (sec) |\r\n+------------------+---------------+-----------------------------+------------------------------------------------------------------------+--------+--------+--------+--------------------+\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-api-analogin          | Analog Input on AIN_0                                                  | 0      | 2      | FAIL   | 0.27               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-api-analogin          | Analog Input on AIN_1                                                  | 0      | 2      | FAIL   | 0.27               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-api-analogin          | Analog Input on AIN_2                                                  | 0      | 2      | FAIL   | 0.28               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-api-analogin          | Analog Input on AIN_3                                                  | 0      | 2      | FAIL   | 0.28               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-api-analogin          | Analog Input on AIN_4                                                  | 0      | 2      | FAIL   | 0.27               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-api-analogin          | Analog Input on AIN_5                                                  | 0      | 2      | FAIL   | 0.27               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-api-pwm_fall          | PWM_0 Frequency 30ms                                                   | 0      | 0      | ERROR  | 0.0                |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-api-pwm_rise          | PWM_0 Frequency 30ms                                                   | 0      | 0      | ERROR  | 0.0                |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-api-pwm_rise_fall     | PWM_0 Frequency 10ms                                                   | 0      | 0      | ERROR  | 0.0                |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-concurrent-comms      | Concurrent testing of I2C and SPI in a single thread                   | 0      | 3      | FAIL   | 5.61               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-concurrent-comms      | Concurrent testing of I2C and SPI in multiple threads                  | 0      | 0      | ERROR  | 0.0                |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-concurrent-gpio       | Concurrent testing of DIO(D2,D3), AnalogIn(A0), and InterruptIn(D4,D5) | 0      | 2      | FAIL   | 0.19               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-concurrent-gpio       | Concurrent testing of DIO(D3,D2), AnalogIn(A1), and InterruptIn(D5,D4) | 0      | 2      | FAIL   | 0.2                |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-concurrent-gpio       | Concurrent testing of DIO(D4,D5), AnalogIn(A2), and InterruptIn(D6,D7) | 0      | 2      | FAIL   | 0.19               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-concurrent-gpio       | Concurrent testing of DIO(D5,D4), AnalogIn(A3), and InterruptIn(D7,D6) | 0      | 12     | FAIL   | 0.79               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-concurrent-gpio       | Concurrent testing of DIO(D6,D7), AnalogIn(A4), and InterruptIn(D8,D9) | 0      | 12     | FAIL   | 0.78               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-concurrent-gpio       | Concurrent testing of DIO(D7,D6), AnalogIn(A5), and InterruptIn(D9,D8) | 0      | 12     | FAIL   | 0.78               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-concurrent-gpio       | Concurrent testing of DIO(D8,D9), AnalogIn(A5), and InterruptIn(D2,D3) | 0      | 2      | FAIL   | 0.2                |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-concurrent-gpio       | Concurrent testing of DIO(D9,D8), AnalogIn(A5), and InterruptIn(D3,D2) | 0      | 12     | FAIL   | 0.79               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-concurrent-mixed      | Concurrent testing of Comms and GPIO in a single thread                | 0      | 3      | FAIL   | 19.25              |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-concurrent-mixed      | Concurrent testing of Comms and GPIO in multiple threads               | 0      | 0      | ERROR  | 0.0                |\r\n+------------------+---------------+-----------------------------+------------------------------------------------------------------------+--------+--------+--------+--------------------+\r\nmbedgt: completed in 1020.51 sec\r\nmbedgt: exited with code 8\r\n```\r\n\r\n**Steps to reproduce**\r\n\r\nRun the application at https://github.com/ARMmbed/ci-test-shield\r\n\r\ni.e.\r\n```\r\n$ git clone https://github.com/ARMmbed/ci-test-shield.git && cd ci-test-shield\r\n```\r\n\r\nSet mbed-os version in `mbed-os.lib`\r\n\r\n```\r\n$ mbed deploy\r\n$ mbed target auto\r\n$ mbed toolchain GCC_ARM\r\n$ mbed test -n tests-* --app-config .\\mbed_app.json\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5120",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5120/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5120/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5120/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5120",
    "id": 258084285,
    "number": 5120,
    "title": "K22F - AnalogOut, I2C failures (CI test shield)",
    "user": {
      "login": "scartmell-arm",
      "id": 30798917,
      "avatar_url": "https://avatars1.githubusercontent.com/u/30798917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scartmell-arm",
      "html_url": "https://github.com/scartmell-arm",
      "followers_url": "https://api.github.com/users/scartmell-arm/followers",
      "following_url": "https://api.github.com/users/scartmell-arm/following{/other_user}",
      "gists_url": "https://api.github.com/users/scartmell-arm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scartmell-arm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scartmell-arm/subscriptions",
      "organizations_url": "https://api.github.com/users/scartmell-arm/orgs",
      "repos_url": "https://api.github.com/users/scartmell-arm/repos",
      "events_url": "https://api.github.com/users/scartmell-arm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scartmell-arm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-15T15:45:56Z",
    "updated_at": "2017-09-19T11:48:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK22F\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n6\r\n\r\n**mbed-cli version:**\r\n1.2.0\r\n\r\n**mbed-os sha:**\r\nCurrent master `https://github.com/ARMmbed/mbed-os/#0906be6397c984026df180b07a3bbd965af52346\r\n`\r\n\r\n**Expected behavior**\r\n\r\nAll tests should pass.\r\n\r\n\r\n**Actual behavior**\r\n```\r\n+--------------+---------------+-----------------------------+------------------------------------------------------------------------+--------+--------+--------+--------------------+\r\n| target       | platform_name | test suite                  | test case                                                              | passed | failed | result | elapsed_time (sec) |\r\n+--------------+---------------+-----------------------------+------------------------------------------------------------------------+--------+--------+--------+--------------------+\r\n| K22F-GCC_ARM | K22F          | tests-api-analogout         | AnalogOut on AOUT                                                      | 0      | 0      | ERROR  | 0.0                |\r\n| K22F-GCC_ARM | K22F          | tests-api-i2c               | tests-api-i2c                                                          | 0      | 1      | ERROR  | 36.41              |\r\n| K22F-GCC_ARM | K22F          | tests-concurrent-comms      | tests-concurrent-comms                                                 | 0      | 1      | ERROR  | 59.85              |\r\n| K22F-GCC_ARM | K22F          | tests-concurrent-mixed      | tests-concurrent-mixed                                                 | 0      | 1      | ERROR  | 60.28              |\r\n+--------------+---------------+-----------------------------+------------------------------------------------------------------------+--------+--------+--------+--------------------+\r\nmbedgt: test case results: 1 FAIL / 106 OK / 4 ERROR\r\nmbedgt: completed in 686.01 sec\r\n\r\n```\r\n\r\n**Steps to reproduce**\r\n\r\nRun the application at https://github.com/ARMmbed/ci-test-shield\r\n\r\ni.e.\r\n```\r\n$ git clone https://github.com/ARMmbed/ci-test-shield.git && cd ci-test-shield\r\n```\r\n\r\nSet mbed-os version in `mbed-os.lib`\r\n\r\n```\r\nmbed deploy\r\nmbed target auto\r\nmbed toolchain GCC_ARM\r\nmbed test -n tests-* --app-config .\\mbed_app.json\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5119",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5119/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5119/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5119/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5119",
    "id": 258079057,
    "number": 5119,
    "title": "K64F - AnalogOut, PWM failures (CI test shield)",
    "user": {
      "login": "scartmell-arm",
      "id": 30798917,
      "avatar_url": "https://avatars1.githubusercontent.com/u/30798917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scartmell-arm",
      "html_url": "https://github.com/scartmell-arm",
      "followers_url": "https://api.github.com/users/scartmell-arm/followers",
      "following_url": "https://api.github.com/users/scartmell-arm/following{/other_user}",
      "gists_url": "https://api.github.com/users/scartmell-arm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scartmell-arm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scartmell-arm/subscriptions",
      "organizations_url": "https://api.github.com/users/scartmell-arm/orgs",
      "repos_url": "https://api.github.com/users/scartmell-arm/repos",
      "events_url": "https://api.github.com/users/scartmell-arm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scartmell-arm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-15T15:28:32Z",
    "updated_at": "2017-09-19T11:53:37Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n6\r\n\r\n**mbed-cli version:**\r\n1.2.0\r\n\r\n**mbed-os sha:**\r\nCurrent master `https://github.com/ARMmbed/mbed-os/#0906be6397c984026df180b07a3bbd965af52346\r\n`\r\n\r\n**Expected behavior**\r\n\r\nAll tests should pass.\r\n\r\n\r\n**Actual behavior**\r\n```\r\n+--------------+---------------+-----------------------------+------------------------------------------------------------------------+--------+--------+--------+--------------------+\r\n| target       | platform_name | test suite                  | test case                                                              | passed | failed | result | elapsed_time (sec) |\r\n+--------------+---------------+-----------------------------+------------------------------------------------------------------------+--------+--------+--------+--------------------+\r\n| K64F-GCC_ARM | K64F          | tests-api-analogout         | AnalogOut on AOUT                                                      | 0      | 3      | FAIL   | 0.2                |\r\n| K64F-GCC_ARM | K64F          | tests-api-pwm_rise_fall     | PWM_0 Frequency 100ms                                                  | 0      | 4      | FAIL   | 10.47              |\r\n| K64F-GCC_ARM | K64F          | tests-api-pwm_rise_fall     | PWM_1 Frequency 100ms                                                  | 0      | 4      | FAIL   | 10.48              |\r\n| K64F-GCC_ARM | K64F          | tests-api-pwm_rise_fall     | PWM_2 Frequency 100ms                                                  | 0      | 4      | FAIL   | 10.47              |\r\n| K64F-GCC_ARM | K64F          | tests-api-pwm_rise_fall     | PWM_3 Frequency 100ms                                                  | 0      | 4      | FAIL   | 10.48              |\r\n| K64F-GCC_ARM | K64F          | tests-concurrent-comms      | Concurrent testing of I2C and SPI in a single thread                   | 0      | 0      | ERROR  | 0.0                |\r\n| K64F-GCC_ARM | K64F          | tests-concurrent-mixed      | Concurrent testing of Comms and GPIO in a single thread                | 0      | 0      | ERROR  | 0.0                |\r\n+--------------+---------------+-----------------------------+------------------------------------------------------------------------+--------+--------+--------+--------------------+\r\n\r\nmbedgt: test case results: 6 FAIL / 112 OK / 2 ERROR\r\nmbedgt: completed in 624.82 sec\r\n```\r\n\r\n**Steps to reproduce**\r\n\r\nRun the application at https://github.com/ARMmbed/ci-test-shield\r\n\r\ni.e.\r\n```\r\n$ git clone https://github.com/ARMmbed/ci-test-shield.git\r\n$ cd ci-test-shield\r\n```\r\n\r\nSet mbed-os version in `mbed-os.lib`\r\n\r\n```\r\n$ mbed deploy\r\n$ mbed target auto\r\n$ mbed toolchain GCC_ARM\r\n$ mbed test -n tests-* --app-config .\\mbed_app.json\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5117",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5117/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5117/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5117/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5117",
    "id": 258066529,
    "number": 5117,
    "title": "Too many warnings while building for IAR 7.80 (Debug build)",
    "user": {
      "login": "hasnainvirk",
      "id": 13431190,
      "avatar_url": "https://avatars3.githubusercontent.com/u/13431190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hasnainvirk",
      "html_url": "https://github.com/hasnainvirk",
      "followers_url": "https://api.github.com/users/hasnainvirk/followers",
      "following_url": "https://api.github.com/users/hasnainvirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/hasnainvirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hasnainvirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hasnainvirk/subscriptions",
      "organizations_url": "https://api.github.com/users/hasnainvirk/orgs",
      "repos_url": "https://api.github.com/users/hasnainvirk/repos",
      "events_url": "https://api.github.com/users/hasnainvirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hasnainvirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345118,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20rtos",
        "name": "component: rtos",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-09-15T14:49:39Z",
    "updated_at": "2017-09-22T08:38:42Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "How to reproduce:\r\n\r\nTarget Platform: MTS_DRAGONFLY_F411RE\r\nCompiler: IAR 7.80\r\nBuild type: Debug\r\n\r\nThere are hundreds of warnings being thrown because of level of optimisation used\r\nfor IAR debug build. For example:\r\n\r\n [ 70.9%]: rtx_semaphore.c\r\n[Warning] rtx_semaphore.c@435,4: [Go005]: Cannot inline function \"__svcSemaphoreNew\" at this level of optimization\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5082",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5082/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5082/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5082/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5082",
    "id": 257057435,
    "number": 5082,
    "title": "Fix warnings in K64F drivers",
    "user": {
      "login": "SenRamakri",
      "id": 31017510,
      "avatar_url": "https://avatars0.githubusercontent.com/u/31017510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SenRamakri",
      "html_url": "https://github.com/SenRamakri",
      "followers_url": "https://api.github.com/users/SenRamakri/followers",
      "following_url": "https://api.github.com/users/SenRamakri/following{/other_user}",
      "gists_url": "https://api.github.com/users/SenRamakri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SenRamakri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SenRamakri/subscriptions",
      "organizations_url": "https://api.github.com/users/SenRamakri/orgs",
      "repos_url": "https://api.github.com/users/SenRamakri/repos",
      "events_url": "https://api.github.com/users/SenRamakri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SenRamakri/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-09-12T14:10:40Z",
    "updated_at": "2017-10-13T20:03:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\nCurrently we are seeing lot of build warnings from enumeration definitions in K64F drivers/headers.\r\n\r\n**Target**\r\nK64F|??\r\n\r\n**Steps to reproduce**\r\nJust do a clean build and you will see lot of warnings from fsl_xxxx.c/h files.\r\n\r\nSince this is from K64F SDK, it would be better for NXP team to fix these issues in their SDK. I'm attaching a git patch with some changes to fix this. You may take these changes if its feasible or implement the fixes in a different way. One possible fix would be to change the enumerations to #defines. The current fix in the patch is to selectively apply typecasting to fix the warnings.\r\n\r\nThanks.\r\n[K64F_BuildWarningsFix.zip](https://github.com/ARMmbed/mbed-os/files/1296213/K64F_BuildWarningsFix.zip)\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5075",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5075/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5075/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5075/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5075",
    "id": 256977231,
    "number": 5075,
    "title": "Example for BLE on ODIN-W2",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2017-09-12T09:29:23Z",
    "updated_at": "2018-02-26T08:21:51Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Could someone ping someone in u-blox, and see if they can publish a BLE example for the ODIN-W2? They ship a binary driver with the board, but no example code. I assume their own SDK examples for BLE work, so maybe publish an mbed program with those loaded.\r\n\r\nPreferably they'd adopt to the mbed BLE API, but that's a longer shot."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5072",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5072/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5072/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5072/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5072",
    "id": 256869947,
    "number": 5072,
    "title": "Serial communication not working with Flowcontrol disabled on NRF51 devices.",
    "user": {
      "login": "SenRamakri",
      "id": 31017510,
      "avatar_url": "https://avatars0.githubusercontent.com/u/31017510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SenRamakri",
      "html_url": "https://github.com/SenRamakri",
      "followers_url": "https://api.github.com/users/SenRamakri/followers",
      "following_url": "https://api.github.com/users/SenRamakri/following{/other_user}",
      "gists_url": "https://api.github.com/users/SenRamakri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SenRamakri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SenRamakri/subscriptions",
      "organizations_url": "https://api.github.com/users/SenRamakri/orgs",
      "repos_url": "https://api.github.com/users/SenRamakri/repos",
      "events_url": "https://api.github.com/users/SenRamakri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SenRamakri/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-09-11T23:19:16Z",
    "updated_at": "2017-09-13T14:34:17Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Bug\r\n- Priority: Major \r\n---------------------------------------------------------------\r\n## Serial communication not working with Flowcontrol disabled on NRF51 devices.\r\n\r\n**Target**\r\nNRF51_DK | Similar devices\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Steps to reproduce**\r\n\r\nRun the below application on a NRF51_DK and and observe that Serial echo doesn't work.\r\n\r\n#include \"mbed.h\"\r\n\r\nint main()\r\n{\r\n  Serial *pc = new Serial(USBTX, USBRX);\r\n  pc->format(8, Serial::None, 1);\r\n  pc->set_flow_control(Serial::Disabled);\r\n  pc->baud(115200);\r\n  pc->printf(\"LOOPBACK SERIAL  with callback>>>>>>\\r\\n\");\r\n\r\n  while (1)\r\n  {\r\n    while (pc->readable())\r\n    {\r\n      char c = pc->getc();\r\n      pc->putc(c); pc->putc(' ');\r\n    }\r\n    Thread::wait(10);\r\n  }\r\n}\r\n\r\nWe see that on these devices unless we program PSELRTS/PSELCTS registers with the right values RX/TX tasks doesn't work when Flowcontrol is disabled. We are currently pushing a workaround for this issue.\r\nhttps://github.com/ARMmbed/mbed-os/pull/5071\r\n\r\nPlease review if this fix is feasible.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5065",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5065/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5065/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5065/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5065",
    "id": 256570388,
    "number": 5065,
    "title": "NCS36510 hard fault when entering deep sleep",
    "user": {
      "login": "c1728p9",
      "id": 2916772,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2916772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/c1728p9",
      "html_url": "https://github.com/c1728p9",
      "followers_url": "https://api.github.com/users/c1728p9/followers",
      "following_url": "https://api.github.com/users/c1728p9/following{/other_user}",
      "gists_url": "https://api.github.com/users/c1728p9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/c1728p9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/c1728p9/subscriptions",
      "organizations_url": "https://api.github.com/users/c1728p9/orgs",
      "repos_url": "https://api.github.com/users/c1728p9/repos",
      "events_url": "https://api.github.com/users/c1728p9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/c1728p9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 509256180,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20onsemi",
        "name": "devices: onsemi",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-09-11T03:12:23Z",
    "updated_at": "2017-10-27T23:36:48Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "In certain configurations the NCS36510 crashes with a hard fault when entering deep sleep mode with interrupts disabled. When single stepping through the same code with a debugger a crash does not occur. Additionally adding breakpoints after the WFI instruction makes the crash go away, but may not be a robust solution.\r\n\r\nExample program which can reproduce the crash (needs to be build with IAR - `mbed compile -t IAR -m NCS36510 --profile debug`) :\r\n```c\r\n#include \"mbed.h\"\r\n\r\nDigitalOut led1(LED1);\r\nLowPowerTicker ticker;\r\n\r\nvoid blink()\r\n{\r\n    led1 = !led1;\r\n}\r\n\r\n#define ENABLE          (uint8_t)0x01\r\n#define DISABLE         (uint8_t)0x00\r\n#define MAC_LUT_SIZE    (uint8_t)96\r\n\r\n\r\nvoid test_sleep()\r\n{\r\n    SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;\r\n    PMUREG->CONTROL.BITS.ENCOMA = DISABLE;\r\n\r\n    /** Enter into deep sleep mode */\r\n    __ISB();\r\n    __WFI();\r\n    // Uncomment the below two lines to fix the hardfault\r\n    //__NOP();\r\n    //__NOP();\r\n\r\n    /** Wait for the external 32MHz to be power-ed up & running\r\n     * Re-power down the 32MHz internal osc\r\n     */\r\n    while (!CLOCKREG->CSR.BITS.XTAL32M);\r\n    PMUREG->CONTROL.BITS.INT32M = 1;\r\n}\r\n\r\nvoid test_func()\r\n{\r\n    test_sleep();\r\n}\r\n\r\nint main() {\r\n    ticker.attach_us(blink, 500 * 1000);\r\n\r\n    printf(\"Running test\\r\\n\");\r\n    core_util_critical_section_enter();\r\n    test_func();\r\n    core_util_critical_section_exit();\r\n    printf(\"Test completed\\r\\n\");\r\n}\r\n```\r\n\r\nHex and elf files build at mbed-os revision e12f116ec1ef0851195f4b0a085497e2811f8a28 with above program can be found here:\r\n[ncs32510_files.zip](https://github.com/ARMmbed/mbed-os/files/1291235/ncs32510_files.zip)\r\n\r\nIAR version used to build:\r\nIAR Embedded Workbench for ARM - 7.80.4.12495\r\nIAR Embedded Workbench shared components - 7.5.6.4719\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5041",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5041/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5041/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5041/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5041",
    "id": 255710484,
    "number": 5041,
    "title": "Error with SPI frequency set by KL25Z implementation",
    "user": {
      "login": "maclobdell",
      "id": 6129601,
      "avatar_url": "https://avatars1.githubusercontent.com/u/6129601?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maclobdell",
      "html_url": "https://github.com/maclobdell",
      "followers_url": "https://api.github.com/users/maclobdell/followers",
      "following_url": "https://api.github.com/users/maclobdell/following{/other_user}",
      "gists_url": "https://api.github.com/users/maclobdell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maclobdell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maclobdell/subscriptions",
      "organizations_url": "https://api.github.com/users/maclobdell/orgs",
      "repos_url": "https://api.github.com/users/maclobdell/repos",
      "events_url": "https://api.github.com/users/maclobdell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maclobdell/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-09-06T19:05:04Z",
    "updated_at": "2017-10-16T20:02:04Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug \r\n- Related issue: n/a\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nKL25z\r\n\r\n**Expected behavior**\r\n\r\nspi_frequency() should set the SPI clock frequency to be very close to the desired frequency per the argument.\r\n\r\n**Actual behavior**\r\nIf you pass 8MHz as your selected frequency, prescaler scales it down to 6 MHz. And if you send 16 MHz, it gets scaled down to exactly 8 MHz. Reason being half bus-clock frequency doesn't seem to be correct. \r\n\r\nSuspect there is an error in the calculation of the prescaler here https://github.com/ARMmbed/mbed-os/blob/master/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/spi_api.c#L86\r\n\r\nLink to Reference Manual for background information:  http://cache.freescale.com/files/32bit/doc/ref_manual/KL25P80M48SF0RM.pdf , check page 665, section 'SPI0_BR field descriptions'. \r\n\r\n**Steps to reproduce**\r\nSomething like this should show the problem.\r\n\r\nSPI spi(D11, D12, D13); // mosi, miso, sclk\r\n\r\nspi.frequency(8000000);\r\n\r\nspi.write(0x8F);\r\n\r\nCheck the spi clock, it will be less than what is expected.  \r\n\r\ncc @mmahadevan108   @hasnainvirk "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5040",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5040/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5040/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5040/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5040",
    "id": 255664970,
    "number": 5040,
    "title": "Mbed TLS example hangs running on UBLOX_EVK_ODIN_W2 when built with ARM and IAR compilers",
    "user": {
      "login": "scartmell-arm",
      "id": 30798917,
      "avatar_url": "https://avatars1.githubusercontent.com/u/30798917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scartmell-arm",
      "html_url": "https://github.com/scartmell-arm",
      "followers_url": "https://api.github.com/users/scartmell-arm/followers",
      "following_url": "https://api.github.com/users/scartmell-arm/following{/other_user}",
      "gists_url": "https://api.github.com/users/scartmell-arm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scartmell-arm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scartmell-arm/subscriptions",
      "organizations_url": "https://api.github.com/users/scartmell-arm/orgs",
      "repos_url": "https://api.github.com/users/scartmell-arm/repos",
      "events_url": "https://api.github.com/users/scartmell-arm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scartmell-arm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 521940966,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tls",
        "name": "component: tls",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2017-09-06T16:24:39Z",
    "updated_at": "2017-10-17T17:02:22Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "## Description\r\n\r\nWhen building the [mbed-os-example-tls/tls-client](https://github.com/ARMmbed/mbed-os-example-tls) example using the default profile the program hangs when attempting to create a connection.\r\n\r\nThis happens predominantly with the ARM compiler, and about 20% of the time with IAR compiler.\r\n\r\nThe problem doesn't occur when building using the debug profile.\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nARM | IAR\r\n\r\n**Toolchain Versions:**\r\n\r\n- IAR: Workbench 7.5\r\n- ARM: 5.06\r\n\r\n\r\n**mbed-cli version:**\r\n1.2.0\r\n\r\n**mbed-os sha:**\r\n(master) Which as of now is:\r\n\r\nhttps://github.com/ARMmbed/mbed-os/#2f2da779cbf61132dc7eeea32d455053177ff938\r\n\r\n## Steps to reproduce\r\n\r\nCompiling with the release profile enabled:\r\n\r\n```\r\n$  mbed compile -m UBLOX_EVK_ODIN_W2 -t ARM --profile mbed-os/tools/profiles/release.json\r\n```\r\n\r\nGives the following output before hanging:\r\n\r\n\r\n```\r\nUsing Ethernet LWIP\r\nClient IP Address is 10.254.100.5\r\nConnecting with developer.mbed.org\r\n```\r\n\r\nCompiling with the debug profile enabled:\r\n\r\n```\r\n$  mbed compile -m UBLOX_EVK_ODIN_W2 -t ARM --profile mbed-os/tools/profiles/debug.json\r\n```\r\n\r\nGives the correct output:\r\n\r\n```\r\nUsing Ethernet LWIP\r\nClient IP Address is 10.254.100.5\r\nConnecting with developer.mbed.org\r\nStarting the TLS handshake...\r\nTLS connection to developer.mbed.org established\r\nServer certificate:\r\n    cert. version     : 3\r\n    serial number     : 65:7B:6D:8D:15:A5:B6:86:87:6B:5E:BC\r\n    issuer name       : C=BE, O=GlobalSign nv-sa, CN=GlobalSign Organization Validation CA - SHA256 - G2\r\n    subject name      : C=GB, ST=Cambridgeshire, L=Cambridge, O=ARM Ltd, CN=*.mbed.com\r\n    issued  on        : 2017-04-03 13:54:02\r\n    expires on        : 2018-05-06 10:31:02\r\n    signed using      : RSA with SHA-256\r\n    RSA key size      : 2048 bits\r\n    basic constraints : CA=false\r\n    subject alt name  : *.mbed.com, mbed.org, *.mbed.org, mbed.com\r\n    key usage         : Digital Signature, Key Encipherment\r\n    ext key usage     : TLS Web Server Authentication, TLS Web Client Authentication\r\nCertificate verification passed\r\n\r\nHTTPS: Received 440 chars from server\r\nHTTPS: Received 200 OK status ... [OK]\r\nHTTPS: Received 'Hello world!' status ... [OK]\r\nHTTPS: Received message:\r\n\r\nHTTP/1.1 200 OK\r\nServer: nginx/1.11.10\r\nDate: Wed, 06 Sep 2017 15:59:09 GMT\r\nContent-Type: text/plain\r\nContent-Length: 14\r\nConnection: keep-alive\r\nLast-Modified: Fri, 27 Jul 2012 13:30:34 GMT\r\nAccept-Ranges: bytes\r\nCache-Control: max-age=36000\r\nExpires: Thu, 07 Sep 2017 01:59:09 GMT\r\nX-Upstream-L3: 172.17.0.4:80\r\nX-Upstream-L2: developer-sjc-indigo-2-nginx\r\nStrict-Transport-Security: max-age=31536000; includeSubdomains\r\n\r\nHello world!\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5039",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5039/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5039/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5039/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5039",
    "id": 255643559,
    "number": 5039,
    "title": "mbed OS5 SPISlave Query",
    "user": {
      "login": "gardnmc",
      "id": 25371422,
      "avatar_url": "https://avatars1.githubusercontent.com/u/25371422?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gardnmc",
      "html_url": "https://github.com/gardnmc",
      "followers_url": "https://api.github.com/users/gardnmc/followers",
      "following_url": "https://api.github.com/users/gardnmc/following{/other_user}",
      "gists_url": "https://api.github.com/users/gardnmc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gardnmc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gardnmc/subscriptions",
      "organizations_url": "https://api.github.com/users/gardnmc/orgs",
      "repos_url": "https://api.github.com/users/gardnmc/repos",
      "events_url": "https://api.github.com/users/gardnmc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gardnmc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-09-06T15:21:39Z",
    "updated_at": "2017-09-07T09:05:43Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "- Type:  General Question\r\n- Related issue: mbed OS5 SPI Slave implementation\r\n- Priority: Major\r\n\r\nI'm communicating between 2 mbed devices using SPI in a master/slave relationship (Multitech XDot as Master and uBlox Nina B1 (NRF52832)  as Slave) and would like to implement an ISR/Callback driven receiver for the Slave.\r\n\r\nThe official SPISlave example works fine for receiving a single byte and reflecting it back to the Master, but I would like to send a block of data rather than a single byte.  If I try this using the example slave code,  the slave only sees (and reflects back) the first byte in the block. \r\n\r\nI can confirm that the entire block is present on the bus using a logic analyser, so I'm enquiring if anyone has successfully implemented a true ISR driven slave SPI receiver for mbed OS5, or for any pointers to why it's not implemented as standard similar to I2CSlave.\r\n\r\nThanks.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5036",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5036/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5036/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5036/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5036",
    "id": 255591449,
    "number": 5036,
    "title": "Add hardware acceleration stress tests",
    "user": {
      "login": "andresag01",
      "id": 3746901,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3746901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andresag01",
      "html_url": "https://github.com/andresag01",
      "followers_url": "https://api.github.com/users/andresag01/followers",
      "following_url": "https://api.github.com/users/andresag01/following{/other_user}",
      "gists_url": "https://api.github.com/users/andresag01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andresag01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andresag01/subscriptions",
      "organizations_url": "https://api.github.com/users/andresag01/orgs",
      "repos_url": "https://api.github.com/users/andresag01/repos",
      "events_url": "https://api.github.com/users/andresag01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andresag01/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 521940966,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tls",
        "name": "component: tls",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-06T12:47:41Z",
    "updated_at": "2017-09-07T09:06:03Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Related issue: https://github.com/ARMmbed/mbed-os/issues/4928\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nPlatforms that support hardware acceleration can use mbed TLS as a front end to expose this functionality to applications in mbed OS. To do this, the specific target's APIs must be ported to work with mbed TLS. We should add stress tests to gain confidence in the correctness of these ports.\r\n\r\n**Suggested enhancement**\r\nAdd simple stress tests that operate the hardware accelerator concurrently, interleave encryption and decryption operations using multiple mbed TLS contexts, etc\r\n\r\n**Pros**\r\n* We can gain confidence on the correctness of the hardware acceleration ports to mbed TLS APIs in mbed OS.\r\n\r\n**Cons**\r\n* Testing will take longer."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5035",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5035/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5035/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5035/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5035",
    "id": 255551830,
    "number": 5035,
    "title": "Receiving poll events in the sigio callback for UartSerial",
    "user": {
      "login": "darbyShaw",
      "id": 21097157,
      "avatar_url": "https://avatars2.githubusercontent.com/u/21097157?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darbyShaw",
      "html_url": "https://github.com/darbyShaw",
      "followers_url": "https://api.github.com/users/darbyShaw/followers",
      "following_url": "https://api.github.com/users/darbyShaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/darbyShaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darbyShaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darbyShaw/subscriptions",
      "organizations_url": "https://api.github.com/users/darbyShaw/orgs",
      "repos_url": "https://api.github.com/users/darbyShaw/repos",
      "events_url": "https://api.github.com/users/darbyShaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darbyShaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 28,
    "created_at": "2017-09-06T10:16:08Z",
    "updated_at": "2017-10-16T08:07:22Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Type: Question/ Suggested Enhancement\r\nHello all,\r\nI use mbed OS 5 for nucleo-f401re.\r\nI want to use UartSerial asynchronously using interrupts. \r\nI see that UartSerial by default attaches to the rx_irq callback for RxIrq. \r\nI attach my callback with the sigio function. My callback is called when wake is called from rx_irq. But since I have no way of knowing that whether my callback was called for a read or a write event(since I cannot call the readable and writable functions on my object(they are ambiguous and static cast to the base SerialBase does not work since it is private inheritance)), I was thinking of passing the revents to the callback(_sigio_cb) after poll.\r\nExample:\r\n\r\n```\r\nvoid rxCpltCallback(short events){\r\n\t  uint32_t data_read=0;\r\n\t  uint32_t length = PACKET_SIZE+PACKET_HEADER_SIZE+PACKET_TRAILER_SIZE;\r\n\t  if((events & POLLIN) == 1)\r\n\t  {\r\n\t\t  data_available=1;\r\n\t  }\r\n\t  else if((events & POLLOUT)==1)\r\n\t  {\r\n\t\t  writable=1;\r\n\t  }\r\n}\r\nvoid receive(uint32_t *p_size)\r\n{\r\n\t\t\tserialPort.sigio(rxCpltCallback);\r\n\t\t\twhile(!data_available || !writable);\r\n\t\t\tif(data_available)\r\n\t\t\t{\r\n\t\t\tserialPort.read((uint8_t *)&receivedPacket[0], PACKET_SIZE+PACKET_HEADER_SIZE+PACKET_TRAILER_SIZE);\r\n\t\t\tprintf(\"\\n\\r read data\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tprintf(\"\\n\\r writable=1\");\r\n\t\t\t}\r\n}\r\nvoid UARTSerial::sigio(Callback<void(short)> func) {\r\n    core_util_critical_section_enter();\r\n    _sigio_cb = func;\r\n    if (_sigio_cb) {\r\n        short current_events = poll(0x7FFF);\r\n        if (current_events) {\r\n            _sigio_cb(current_events);\r\n        }\r\n    }\r\n    core_util_critical_section_exit();\r\n}\r\n```\r\nIs this the correct way to do it? \r\nIf yes, we would possibly want the events passed to the callback function."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5034",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5034/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5034/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5034/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5034",
    "id": 255539424,
    "number": 5034,
    "title": "Remove NonCopyable from SPI / I2C / etc.",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-09-06T09:32:14Z",
    "updated_at": "2017-11-30T07:56:51Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n\r\n- Type: Enhancement\r\n- Related issue: #4594\r\n- Priority: Major\r\n\r\nSince mbed OS 5.5.2 we've marked SPI and I2C as NonCopyable. I understand the reasoning behind this, but it has broken many mbed libraries, which cannot be easily updated. This is user hostile and bad for the platform.\r\n\r\nSome examples that are broken now and that I found with a quick Google search:\r\n\r\n* HelloMQTT\r\n* AT45 SPI Flash driver\r\n* https://developer.mbed.org/questions/78698/Program-for-STM32F411RE-wont-compile/\r\n* https://developer.mbed.org/forum/helloworld/topic/27921/?page=1#comment-53030\r\n* https://developer.mbed.org/questions/78589/Compiling-error-with-IBMIoTClientLibrary/\r\n* https://developer.mbed.org/users/12104404/code/TSL2591/\r\n\r\nSome of our partners / other devs were apparently not aware, and they have only now started patching:\r\n\r\n* https://developer.mbed.org/teams/MaximIntegrated/code/MAX14690/graph\r\n* https://developer.mbed.org/users/kenjiArai/code/Si5351A/rev/8c63d15c8c2e\r\n\r\nThere are probably hundreds of libraries that are broken now (@andcor02 had one too), the error messages are cryptic and this is very bad for the mbed platform. I'm fine throwing a deprecation warning, but breaking these libraries in a *minor* release is bad.\r\n\r\n@sg-"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5024",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5024/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5024/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5024/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5024",
    "id": 255310603,
    "number": 5024,
    "title": "Odin fails networking tests with heap and stack tracking ",
    "user": {
      "login": "sarahmarshy",
      "id": 12565767,
      "avatar_url": "https://avatars3.githubusercontent.com/u/12565767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sarahmarshy",
      "html_url": "https://github.com/sarahmarshy",
      "followers_url": "https://api.github.com/users/sarahmarshy/followers",
      "following_url": "https://api.github.com/users/sarahmarshy/following{/other_user}",
      "gists_url": "https://api.github.com/users/sarahmarshy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sarahmarshy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sarahmarshy/subscriptions",
      "organizations_url": "https://api.github.com/users/sarahmarshy/orgs",
      "repos_url": "https://api.github.com/users/sarahmarshy/repos",
      "events_url": "https://api.github.com/users/sarahmarshy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sarahmarshy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-09-05T15:08:21Z",
    "updated_at": "2017-11-29T16:46:52Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n\r\nI am using the mbed OS networking tests for Odin - (Added in #4795). Here are the commands run:\r\n```\r\nmbed test --compile -DMBED_HEAP_STATS_ENABLED=1 -DMBED_STACK_STATS_ENABLED=1 -DMBED_TRAP_ERRORS_ENABLED=1 -m auto -t IAR -n tests-netsocket-tcp_hello_world,tests-netsocket-socket_sigio -v\r\nmbed test -DMBED_HEAP_STATS_ENABLED=1 -DMBED_STACK_STATS_ENABLED=1 -DMBED_TRAP_ERRORS_ENABLED=1 -m auto -t IAR -n tests-netsocket-tcp_hello_world,tests-netsocket-socket_sigio -v --run\r\n```\r\n\r\nThese commands pass when the heap and stack stats macros are not added. They fail when the macros are used, which is how the commands are run in CI. \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nOdin W2\r\n\r\n**Toolchain:**\r\nIAR\r\n\r\n**Steps to reproduce**\r\nRun the following commands: \r\n```\r\nmbed test --compile -m auto -t IAR -n tests-netsocket-tcp_hello_world,tests-netsocket-socket_sigio -v\r\nmbed test -m auto -t IAR -n tests-netsocket-tcp_hello_world,tests-netsocket-socket_sigio -v --run\r\n```\r\n\r\nThese should pass.\r\n```\r\nmbed test --compile -DMBED_HEAP_STATS_ENABLED=1 -DMBED_STACK_STATS_ENABLED=1 -DMBED_TRAP_ERRORS_ENABLED=1 -m auto -t IAR -n tests-netsocket-tcp_hello_world,tests-netsocket-socket_sigio -v\r\nmbed test -DMBED_HEAP_STATS_ENABLED=1 -DMBED_STACK_STATS_ENABLED=1 -DMBED_TRAP_ERRORS_ENABLED=1 -m auto -t IAR -n tests-netsocket-tcp_hello_world,tests-netsocket-socket_sigio -v --run\r\n```\r\nThese will fail.\r\n\r\n@bulislaw @c1728p9 "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5023",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5023/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5023/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5023/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5023",
    "id": 255302308,
    "number": 5023,
    "title": "Cannot reconnect a LoWPANNDInterface",
    "user": {
      "login": "Mathgoat",
      "id": 2546051,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2546051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mathgoat",
      "html_url": "https://github.com/Mathgoat",
      "followers_url": "https://api.github.com/users/Mathgoat/followers",
      "following_url": "https://api.github.com/users/Mathgoat/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mathgoat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mathgoat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mathgoat/subscriptions",
      "organizations_url": "https://api.github.com/users/Mathgoat/orgs",
      "repos_url": "https://api.github.com/users/Mathgoat/repos",
      "events_url": "https://api.github.com/users/Mathgoat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mathgoat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-05T14:43:46Z",
    "updated_at": "2017-09-05T15:13:02Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F\r\n\r\n**Hardware**\r\nFirefly 6LoWPAN shield +K64F\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**mbed-cli version:** \r\n1.1.1\r\n\r\n**Expected behavior**\r\n As the EthernetInterface, the LoWPANNDInterface should be able to reconnect after a deconnection.\r\n\r\n**Actual behavior**\r\nThe LoWPANNDInterface can't be reconnected after a deconnection.\r\n\r\n**Steps to reproduce**\r\n```c\r\n#include \"mbed.h\"\r\n#include \"NanostackInterface.h\"\r\n#include \"NanostackRfPhyAtmel.h\"\r\n\r\nint main() {\r\n \tLoWPANNDInterface interface;\r\n\tNanostackRfPhyAtmel rf_phy(ATMEL_SPI_MOSI, ATMEL_SPI_MISO,\r\n\tATMEL_SPI_SCLK,\r\n \tATMEL_SPI_CS,\r\n \tATMEL_SPI_RST, ATMEL_SPI_SLP, ATMEL_SPI_IRQ, ATMEL_I2C_SDA,\r\n \tATMEL_I2C_SCL);\r\n \tinterface.initialize(&rf_phy);\r\n \tinterface.connect();\r\n \tinterface.disconnect();\r\n \trf_phy.rf_unregister(); // \"Multiple registrations of NanostackRfPhyAtmel not supported\" if not done.\r\n \tinterface.connect(); // stuck into connect_semaphore.wait(osWaitForever);\r\n }\r\n```\r\n\r\nWithout the `rf_phy.rf_unregister()` line, I get the error : \"Multiple registrations of NanostackRfPhyAtmel not supported\"\r\n\r\nWith the `rf_phy.rf_unregister()` line, it looks like the `connect_semaphore.wait(osWaitForever)` in `LoWPANNDInterface::connect()` method is stuck.\r\n\r\nIs there something I do wrong ?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5015",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5015/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5015/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5015/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5015",
    "id": 255039623,
    "number": 5015,
    "title": "NRF51_DK_BOOT target is broken",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-09-04T13:16:27Z",
    "updated_at": "2017-09-04T14:47:59Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "1. Take https://developer.mbed.org/teams/mbed-os-examples/code/mbed-os-example-ble-HeartRate/\r\n2. Compile with ARMCC for NRF51_DK => works fine\r\n3. Compile with ARMCC for NRF51_DK_BOOT => does not work. Binary is 1/3 of the non-boot image and board does not start.\r\n\r\nTested on mbed OS 5.5.5.\r\n\r\nI think this has been broken since mbed OS 5, as even with mbed OS 5.2.3 it does not produce a working binary.\r\n\r\nI tested the mbed OS 2 version of this program ([here](https://developer.mbed.org/teams/Bluetooth-Low-Energy/code/BLE_HeartRate/)) and that one does not compile (against rev126 and rev150):\r\n\r\n```\r\nError: Cannot open source input file \"device.h\": No such file or directory in \"extras/mbed_abea610beb85/platform.h\", Line: 19, Col: 21\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5011",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5011/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5011/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5011/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5011",
    "id": 254885155,
    "number": 5011,
    "title": "InterruptIn always pulled up on nRF52_DK when BLE is initialized",
    "user": {
      "login": "HITMAnsOFT",
      "id": 25843179,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25843179?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HITMAnsOFT",
      "html_url": "https://github.com/HITMAnsOFT",
      "followers_url": "https://api.github.com/users/HITMAnsOFT/followers",
      "following_url": "https://api.github.com/users/HITMAnsOFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/HITMAnsOFT/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HITMAnsOFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HITMAnsOFT/subscriptions",
      "organizations_url": "https://api.github.com/users/HITMAnsOFT/orgs",
      "repos_url": "https://api.github.com/users/HITMAnsOFT/repos",
      "events_url": "https://api.github.com/users/HITMAnsOFT/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HITMAnsOFT/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-09-03T16:33:41Z",
    "updated_at": "2017-09-04T08:29:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nnRF52_DK (tested both on a custom board and on a Sparkfun nRF52832 breakout)\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\ngcc version 5.4.1 20160919 (15:5.4.1+svn241155-1)\r\n\r\n**mbed-cli version:** \r\n1.1.1\r\n\r\n**mbed-os sha:**\r\n98ba8acb8 Merge pull request #4974 from ARMmbed/release-candidate\r\n\r\n**DAPLink version:**\r\n\r\n**Expected behavior**\r\nAfter calling mode(PinMode::PullDown) on an InterruptIn, if the pin is floating, the voltage measured on the pin should be around 0V.\r\n**Actual behavior**\r\nIf BLE is initialized, the voltage on an InterruptIn pin is always pulled up (reads 3.3V on a multimeter). DigitalIn works correctly.\r\n**Steps to reproduce**\r\nBuild and run the following code:\r\n\r\n```\r\n#include \"ble/BLE.h\"\r\n#include <mbed.h>\r\n\r\nInterruptIn button(p24); // Any dangling pin here\r\n\r\nint main()\r\n{\r\n    BLE &ble = BLE::Instance();\r\n    ble.init();\r\n    button.mode(PinMode::PullDown);\r\n    return 0;\r\n}\r\n\r\n```\r\n\r\nMeasure the voltage on p24 with a multimeter.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5010",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5010/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5010/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5010/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5010",
    "id": 254808375,
    "number": 5010,
    "title": "Support for FRDM-KL28Z (?)",
    "user": {
      "login": "larsgk",
      "id": 1014678,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1014678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/larsgk",
      "html_url": "https://github.com/larsgk",
      "followers_url": "https://api.github.com/users/larsgk/followers",
      "following_url": "https://api.github.com/users/larsgk/following{/other_user}",
      "gists_url": "https://api.github.com/users/larsgk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/larsgk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/larsgk/subscriptions",
      "organizations_url": "https://api.github.com/users/larsgk/orgs",
      "repos_url": "https://api.github.com/users/larsgk/repos",
      "events_url": "https://api.github.com/users/larsgk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/larsgk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-09-02T12:17:34Z",
    "updated_at": "2018-04-05T15:29:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement | Question\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Enhancement\r\n\r\nIs there already support for FRDM-KL28Z or what is needed to add the target and what can be done to get it ASAP?\r\n\r\nI bought a bunch of boards I would have liked to get running with software from https://github.com/empirikit/empirikit-controller before next week - not realistic, I know ;)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5009",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5009/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5009/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5009/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5009",
    "id": 254777559,
    "number": 5009,
    "title": "Question: turning off BLE ?",
    "user": {
      "login": "shayo",
      "id": 1977614,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1977614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shayo",
      "html_url": "https://github.com/shayo",
      "followers_url": "https://api.github.com/users/shayo/followers",
      "following_url": "https://api.github.com/users/shayo/following{/other_user}",
      "gists_url": "https://api.github.com/users/shayo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shayo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shayo/subscriptions",
      "organizations_url": "https://api.github.com/users/shayo/orgs",
      "repos_url": "https://api.github.com/users/shayo/repos",
      "events_url": "https://api.github.com/users/shayo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shayo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515545581,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20ble",
        "name": "component: ble",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-09-02T00:32:20Z",
    "updated_at": "2017-10-11T09:50:47Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Question: How can I turn off BLE completely after initialization?\r\nI'm using a custom board running with NRF52832\r\n\r\nI use the following to initialize the ble stack:\r\nBLE& ble = BLE::Instance(BLE::DEFAULT_INSTANCE);\r\nble.init(bleInitComplete);\r\n\r\nSimply stopping advertising doesn't work (i.e.,  if the central already knows the address, it can still connect).\r\nHow do I fully shutdown any transmission / disable radio?\r\n\r\nTried to follow the recommendations here:\r\nhttps://devzone.nordicsemi.com/question/13984/completely-disabling-bluetooth/\r\nbut if I try \r\nNRF_RADIO->TASK_DISABLE = 1\r\nor\r\nNRF_RADIO->POWER = 0\r\n\r\nthe device resets\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4981",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4981/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4981/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4981/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4981",
    "id": 253337893,
    "number": 4981,
    "title": "Get more specific error when R/TX buffers are out of resource",
    "user": {
      "login": "mohammad1603",
      "id": 15212554,
      "avatar_url": "https://avatars2.githubusercontent.com/u/15212554?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mohammad1603",
      "html_url": "https://github.com/mohammad1603",
      "followers_url": "https://api.github.com/users/mohammad1603/followers",
      "following_url": "https://api.github.com/users/mohammad1603/following{/other_user}",
      "gists_url": "https://api.github.com/users/mohammad1603/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mohammad1603/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mohammad1603/subscriptions",
      "organizations_url": "https://api.github.com/users/mohammad1603/orgs",
      "repos_url": "https://api.github.com/users/mohammad1603/repos",
      "events_url": "https://api.github.com/users/mohammad1603/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mohammad1603/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-08-28T13:59:30Z",
    "updated_at": "2017-09-06T07:37:24Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug \r\n- Priority: Minor\r\n\r\n**Target**\r\nK64F\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\nGCC 6\r\n\r\n**mbed-os sha:**\r\nlatest tag\r\n\r\n**Expected behavior**\r\nMore specific error when TX buffers go out of resources\r\n\r\nexplain:\r\nin handshake flow, the \"mbed_lwip_sendto()\" function is called, when the flow reaches \"k64f_low_level_output()\" this function calls \" osSemaphoreAcquire()\" which returns osErrorResource which is translated by the lwip code to “ERR_BUFF – 0xfe” and by the higher level lwip code to \r\n\"NSAPI_ERROR_DEVICE_ERROR - 0xfffff43c\"\r\n\r\nThe \"NSAPI_ERROR_DEVICE_ERROR\" is too generic in this case and we want more specific error for this case in order to be sure that waiting and calling the \"mbed_lwip_sendto()\" after resources are available can return with success.\r\n\r\nWe are trying to prevent a situation that we are in a loop and getting \"NSAPI_ERROR_DEVICE_ERROR\" from another reason.\r\n\r\n**Actual behavior**\r\nGetting more specific error value which say that the R/TX buffers are out of resource and the application can try again later after resources are available again.\r\n\r\n**Steps to reproduce**\r\nThe issue happens during DTLS handshake in debug mode only.\r\nattached the call stack:\r\n![2](https://user-images.githubusercontent.com/15212554/29776784-7a9c8a72-8c12-11e7-901e-54cb65e2fc1f.png)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4969",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4969/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4969/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4969/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4969",
    "id": 252474511,
    "number": 4969,
    "title": "SPI format and frequency may not be set in SPI constructor",
    "user": {
      "login": "ccchang12",
      "id": 22789977,
      "avatar_url": "https://avatars3.githubusercontent.com/u/22789977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccchang12",
      "html_url": "https://github.com/ccchang12",
      "followers_url": "https://api.github.com/users/ccchang12/followers",
      "following_url": "https://api.github.com/users/ccchang12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccchang12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccchang12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccchang12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccchang12/orgs",
      "repos_url": "https://api.github.com/users/ccchang12/repos",
      "events_url": "https://api.github.com/users/ccchang12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccchang12/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-08-24T03:10:31Z",
    "updated_at": "2017-12-16T16:50:48Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\nThe SPI class has a member \"static SPI *_owner;\" to indicate need to set SPI or not, and the default value is NULL in SPI.cpp. But after call the destructor and constructor again, it may encounter the format and frequency are not set issue due to the address is the same.\r\n\r\nIn ci-test-shield\\TESTS\\API\\SPI\\SPI.cpp, each test case calls the SPI constructor and may cause this issue. The solution should be set the _owner to be NULL in the SPI destructor as below.\r\n\r\ndiff --git a/drivers/SPI.h b/drivers/SPI.h\r\nindex 645243070..7e0ba08f4 100644\r\n--- a/drivers/SPI.h\r\n+++ b/drivers/SPI.h\r\n@@ -263,6 +263,7 @@ protected:\r\n\r\n public:\r\n     virtual ~SPI() {\r\n+        _owner = NULL;\r\n     }\r\n\r\n protected:\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4957",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4957/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4957/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4957/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4957",
    "id": 252032179,
    "number": 4957,
    "title": "How to call spi_free()",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-08-22T17:28:25Z",
    "updated_at": "2017-09-04T10:15:10Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "I need to call `spi_free()` because my SPI flash chip does not like to be init'ed from both bootloader and app.\r\n\r\nBut it's not available in the C++ API... Any idea how to do it?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4952",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4952/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4952/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4952/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4952",
    "id": 251985607,
    "number": 4952,
    "title": "UBLOX_EVK_ODIN_W2 sporadic ethernet socket connect failures",
    "user": {
      "login": "avolinski",
      "id": 17570416,
      "avatar_url": "https://avatars3.githubusercontent.com/u/17570416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/avolinski",
      "html_url": "https://github.com/avolinski",
      "followers_url": "https://api.github.com/users/avolinski/followers",
      "following_url": "https://api.github.com/users/avolinski/following{/other_user}",
      "gists_url": "https://api.github.com/users/avolinski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/avolinski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/avolinski/subscriptions",
      "organizations_url": "https://api.github.com/users/avolinski/orgs",
      "repos_url": "https://api.github.com/users/avolinski/repos",
      "events_url": "https://api.github.com/users/avolinski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/avolinski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-08-22T14:54:32Z",
    "updated_at": "2017-10-18T11:10:33Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nGCC_ARM,ARM\r\n\r\n**Toolchain version:**\r\nGCC_ARM 6\r\n\r\n**mbed-os sha:**\r\nmbedOS 5.5.5\r\n\r\n**Expected behavior**\r\nEthernet socket connect always succeeds\r\n\r\n**Actual behavior**\r\nEthernet socket connect sporadically fails\r\n\r\n**Steps to reproduce**\r\nDo lot's of connects and disconnects, with small random delay between them\r\n----------------------------------------------------------------\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4942",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4942/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4942/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4942/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4942",
    "id": 251600307,
    "number": 4942,
    "title": "Update e2 studio exporter",
    "user": {
      "login": "phyokyaw",
      "id": 6470239,
      "avatar_url": "https://avatars1.githubusercontent.com/u/6470239?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phyokyaw",
      "html_url": "https://github.com/phyokyaw",
      "followers_url": "https://api.github.com/users/phyokyaw/followers",
      "following_url": "https://api.github.com/users/phyokyaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/phyokyaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phyokyaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phyokyaw/subscriptions",
      "organizations_url": "https://api.github.com/users/phyokyaw/orgs",
      "repos_url": "https://api.github.com/users/phyokyaw/repos",
      "events_url": "https://api.github.com/users/phyokyaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phyokyaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-21T09:29:31Z",
    "updated_at": "2017-08-23T08:44:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n## Enhancement\r\n\r\n**Target**\r\nRZ-A1H\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n\r\n**mbed-cli version:** \r\n1.2.0\r\n\r\n**mbed-os sha:**\r\nff4fc34\r\n\r\n**DAPLink version:**\r\n\r\n**Expected behavior**\r\n\r\n**Actual behavior**\r\n\r\n**Steps to reproduce**\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\nhttps://developer.mbed.org/blog/entry/Fixed-exporters-in-the-mbed-Online-Compi/\r\n\r\n@theotherjimmy \r\nHi Jimmy, I am looking into changing the e2 studio exporter to remove legacy code and extend from new Exporter class. Since e2 studio uses gnuarmeclipse toolchain the exporter would be almost identical to gnuarmeclipse exporter.\r\n\r\nHowever we extend build configuration ID and toolchain ID, hence minor differences in the exporter .cproject template.\r\n\r\nWill it be feasible to create exporter that extends gnuarmeclipse exporter class? We can override the generate() method to look for e2 studio templates. If it is possible to refactor generate() from gnuarmeclipse to move gen_file(...) out we only need to override that method.\r\n\r\nTested with mbed-cli and exported project didn't build because of #4624, once that's fixed we are able to build.\r\n\r\nPlease let me know and I'll create a pull request. \r\n\r\nThanks\r\nPhyo Kyaw"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4906",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4906/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4906/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4906/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4906",
    "id": 250092714,
    "number": 4906,
    "title": "IAR Export flags not synchronized",
    "user": {
      "login": "deepikabhavnani",
      "id": 28542450,
      "avatar_url": "https://avatars3.githubusercontent.com/u/28542450?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepikabhavnani",
      "html_url": "https://github.com/deepikabhavnani",
      "followers_url": "https://api.github.com/users/deepikabhavnani/followers",
      "following_url": "https://api.github.com/users/deepikabhavnani/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepikabhavnani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepikabhavnani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepikabhavnani/subscriptions",
      "organizations_url": "https://api.github.com/users/deepikabhavnani/orgs",
      "repos_url": "https://api.github.com/users/deepikabhavnani/repos",
      "events_url": "https://api.github.com/users/deepikabhavnani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepikabhavnani/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-14T17:03:39Z",
    "updated_at": "2017-08-15T13:43:39Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Below mentioned C++ flags are not set during export operation.\r\ncxx_flags_cmd = [\"--c++\", \"--no_rtti\", \"--no_exceptions\"] \r\n\r\nIAR *.ewp fileversion 3, provides support to set separate C++ flags.\r\n```\r\n                <option>\r\n                    <name>IccExceptions2</name>\r\n                    <state>1</state>\r\n                </option>\r\n                <option>\r\n                    <name>IccRTTI2</name>\r\n                    <state>1</state>\r\n                </option>\r\n```\r\nThis support will require migration from template fileversion 2 to 3."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4904",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4904/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4904/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4904/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4904",
    "id": 250086891,
    "number": 4904,
    "title": "time() uses mutexes",
    "user": {
      "login": "chrissnow",
      "id": 3310276,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3310276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrissnow",
      "html_url": "https://github.com/chrissnow",
      "followers_url": "https://api.github.com/users/chrissnow/followers",
      "following_url": "https://api.github.com/users/chrissnow/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrissnow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrissnow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrissnow/subscriptions",
      "organizations_url": "https://api.github.com/users/chrissnow/orgs",
      "repos_url": "https://api.github.com/users/chrissnow/repos",
      "events_url": "https://api.github.com/users/chrissnow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrissnow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 512448248,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20docs",
        "name": "component: docs",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "cmonr",
      "id": 260086,
      "avatar_url": "https://avatars1.githubusercontent.com/u/260086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmonr",
      "html_url": "https://github.com/cmonr",
      "followers_url": "https://api.github.com/users/cmonr/followers",
      "following_url": "https://api.github.com/users/cmonr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmonr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmonr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmonr/subscriptions",
      "organizations_url": "https://api.github.com/users/cmonr/orgs",
      "repos_url": "https://api.github.com/users/cmonr/repos",
      "events_url": "https://api.github.com/users/cmonr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmonr/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cmonr",
        "id": 260086,
        "avatar_url": "https://avatars1.githubusercontent.com/u/260086?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cmonr",
        "html_url": "https://github.com/cmonr",
        "followers_url": "https://api.github.com/users/cmonr/followers",
        "following_url": "https://api.github.com/users/cmonr/following{/other_user}",
        "gists_url": "https://api.github.com/users/cmonr/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cmonr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cmonr/subscriptions",
        "organizations_url": "https://api.github.com/users/cmonr/orgs",
        "repos_url": "https://api.github.com/users/cmonr/repos",
        "events_url": "https://api.github.com/users/cmonr/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cmonr/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-08-14T16:40:26Z",
    "updated_at": "2017-12-08T20:39:34Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Describugption\r\n Question\\bug\r\n\r\n\r\n**Target**\r\nLPC1768\r\n\r\n\r\n## Question\r\nSince updating mbed-os to 5.5 I'm getting the following error\r\n`Mutex 10005224 error -6: Not allowed in ISR context`\r\n\r\nwhich is being caused by calling time(NULL) in the ISR.\r\n\r\n```c++\r\n#include \"mbed.h\"\r\n\r\nDigitalOut led1(P0_22, 0);\r\nDigitalOut led2(P3_25, 0);\r\nDigitalOut led3(P3_26, 0);\r\n\r\nRawSerial ser(P0_10, P0_11);\r\n\r\nvoid rxint()\r\n{\r\n\ttime(NULL);\r\n\tser.getc();\r\n\tled2 = !led2;\r\n}\r\n\r\nint main() {\r\n\r\n\tled1 = !led1;\r\n\r\n\tser.attach(callback(rxint));\r\n\r\n\twhile (1) {\r\n\t\t\r\n\t\tled1 = !led1;\r\n\t\tThread::wait(500);\r\n\t}\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4897",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4897/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4897/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4897/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4897",
    "id": 249909221,
    "number": 4897,
    "title": "How to change stack and heap size?",
    "user": {
      "login": "maxpeng",
      "id": 9015543,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9015543?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxpeng",
      "html_url": "https://github.com/maxpeng",
      "followers_url": "https://api.github.com/users/maxpeng/followers",
      "following_url": "https://api.github.com/users/maxpeng/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxpeng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxpeng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxpeng/subscriptions",
      "organizations_url": "https://api.github.com/users/maxpeng/orgs",
      "repos_url": "https://api.github.com/users/maxpeng/repos",
      "events_url": "https://api.github.com/users/maxpeng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxpeng/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345118,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20rtos",
        "name": "component: rtos",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-08-14T00:25:41Z",
    "updated_at": "2017-08-14T14:17:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "If my board is NUCLEO_F429ZI and compiler is gcc, the stack and heap size are defined in `mbed-os/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F429xI/device/TOOLCHAIN_GCC_ARM/STM32F429xI.ld` in mbed OS 5.x.\r\n\r\n*Question:*\r\nIs there a way to change the stack and heap size through mbed configuration system instead of modifying the liner configuration file of the target directly?\r\n\r\nI tried to use a `mbed_app.json` file placed in the root directory of the project, but it didn't work.\r\n```\r\n{\r\n    \"target_overrides\": {\r\n        \"*\": {\r\n            \"target.stack_size\": 4096,\r\n            \"target.heap_size\": 65536\r\n        }\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4891",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4891/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4891/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4891/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4891",
    "id": 249661347,
    "number": 4891,
    "title": "Add mbed version macros to mbed compile command.",
    "user": {
      "login": "nuket",
      "id": 1294207,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1294207?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nuket",
      "html_url": "https://github.com/nuket",
      "followers_url": "https://api.github.com/users/nuket/followers",
      "following_url": "https://api.github.com/users/nuket/following{/other_user}",
      "gists_url": "https://api.github.com/users/nuket/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nuket/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nuket/subscriptions",
      "organizations_url": "https://api.github.com/users/nuket/orgs",
      "repos_url": "https://api.github.com/users/nuket/repos",
      "events_url": "https://api.github.com/users/nuket/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nuket/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-08-11T14:57:29Z",
    "updated_at": "2017-08-21T14:49:11Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "So the upgrade to CMSIS-RTOS2 in mbed 5.5 hosed the https://github.com/nuket/mbed-memory-status library I'd built. That's fine, since it was using a lot of low-level, non-public APIs.\r\n\r\nBut then I realized there isn't even a way to build a single translation unit compatible with versions < 5.5 and >= 5.5 because there are no mbed version macros passed to the compiler.\r\n\r\n## Current Behavior\r\n\r\nLet's say I'm using an NRF52_DK, this is what `mbed compile` passes as macros:\r\n\r\n```\r\n[DEBUG] Macros: -DDEVICE_ERROR_PATTERN=1 -DTARGET_MCU_NRF52832 -DTARGET_SDK11 -D__MBED__=1 -DNRF52_PAN_53 -DTARGET_NRF52_COMMON -DDEVICE_PORTINOUT=1 -DTARGET_RTOS_M4_M7 -DDEVICE_LOWPOWERTIMER=1 -DDEVICE_RTC=1 -DTOOLCHAIN_object -DDEVICE_SERIAL_ASYNCH=1 -D__CMSIS_RTOS -DBOARD_PCA10040 -DTARGET_FF_ARDUINO -DNRF52_PAN_12 -DTOOLCHAIN_GCC -DNRF52_PAN_58 -DDEVICE_SPISLAVE=1 -DNRF52_PAN_55 -DNRF52_PAN_54 -DTARGET_CORTEX_M -DNRF52_PAN_30 -DTARGET_NRF52_DK -DNRF52_PAN_36 -DTARGET_LIKE_CORTEX_M4 -DTARGET_M4 -DTARGET_UVISOR_UNSUPPORTED -DTARGET_NRF5 -DFEATURE_BLE=1 -DTARGET_MCU_NRF52 -DCMSIS_VECTAB_VIRTUAL -DNRF52_PAN_51 -DDEVICE_SPI_ASYNCH=1 -DNRF52 -DDEVICE_I2C=1 -DDEVICE_PORTOUT=1 -DTARGET_NRF52832 -D__CORTEX_M4 -DMBED_BUILD_TIMESTAMP=1502461424.78 -DDEVICE_SERIAL=1 -D__FPU_PRESENT=1 -DS132 -DDEVICE_SLEEP=1 -DDEVICE_PORTIN=1 -DTARGET_RELEASE -DTARGET_NORDIC -DDEVICE_SERIAL_FC=1 -DBLE_STACK_SUPPORT_REQD -DNRF52_PAN_15 -DCONFIG_GPIO_AS_PINRESET -DTARGET_LIKE_MBED -D__MBED_CMSIS_RTOS_CM -DNRF52_PAN_31 -DTOOLCHAIN_GCC_ARM -DSWI_DISABLE0 -DSOFTDEVICE_PRESENT -DDEVICE_I2C_ASYNCH=1 -DCMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\" -DDEVICE_INTERRUPTIN=1 -DNRF52_PAN_64 -DNRF52_PAN_20 -DDEVICE_ANALOGIN=1 -DDEVICE_PWMOUT=1 -DNRF52_PAN_62 -DNRF52_PAN_63 -DDEVICE_SPI=1 -DARM_MATH_CM4\r\n```\r\n\r\n## Enhancement\r\n\r\nPlease add these macros:\r\n\r\n```\r\n-DMBED_VERSION_MAJOR=\r\n-DMBED_VERSION_MINOR=\r\n-DMBED_VERSION_PATCH=\r\n```\r\n\r\nSo I can use the proper `#ifdef`s in my `.c` files."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4885",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4885/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4885/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4885/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4885",
    "id": 249329185,
    "number": 4885,
    "title": "GCC small lib and OS5",
    "user": {
      "login": "jeromecoutant",
      "id": 12710147,
      "avatar_url": "https://avatars2.githubusercontent.com/u/12710147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeromecoutant",
      "html_url": "https://github.com/jeromecoutant",
      "followers_url": "https://api.github.com/users/jeromecoutant/followers",
      "following_url": "https://api.github.com/users/jeromecoutant/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeromecoutant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeromecoutant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeromecoutant/subscriptions",
      "organizations_url": "https://api.github.com/users/jeromecoutant/orgs",
      "repos_url": "https://api.github.com/users/jeromecoutant/repos",
      "events_url": "https://api.github.com/users/jeromecoutant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeromecoutant/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-08-10T12:25:38Z",
    "updated_at": "2017-11-20T15:35:10Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Hi\r\n\r\nWe got some issue with tests-mbedmicro-rtos-mbed-threads and \"small\" OS5 targets like NUCLEO_F072RB (20k RAM)\r\nThis test is FAILED with GCC_ARM.\r\nI can make it OK using the small lib, but this needs a patch in gcc.py script :\r\n\r\n        if default_lib == \"small\":\r\n    #       self.flags[\"common\"].append(\"-DMBED_RTOS_SINGLE_THREAD\") ==> removed\r\n            self.flags[\"ld\"].append(\"--specs=nano.specs\")\r\n\r\nCan someone remind me the reason to forbid multiple thread with GCC nano ?\r\n\r\nThx\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4879",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4879/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4879/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4879/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4879",
    "id": 249005429,
    "number": 4879,
    "title": "IAR build failure when building mbed-os and examples",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-08-09T11:51:44Z",
    "updated_at": "2017-08-25T19:26:49Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Description\r\n- Type: Bug \r\n- Priority:  Major\r\n\r\n## Bug\r\n\r\nThis command fails to compile (with traceback) (here is the job (internal link) http://mbed-ci-master-2.austin.arm.com:8081/job/examples_build_matrix/783/target=NUCLEO_F767ZI,toolchain=IAR ):\r\n\r\n```\r\n06:22:52 [DEBUG] Compile: C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\bin\\iasmarm --cpu Cortex-M7 --fpu VFPv5 -DTRANSACTION_QUEUE_SIZE_SPI=2 -D__CORTEX_M7 -DARM_MATH_CM7 -D__FPU_PRESENT=1 -DUSBHOST_OTHER -D__MBED_CMSIS_RTOS_CM -D__CMSIS_RTOS -f .\\BUILD\\NUCLEO_F767ZI\\IAR\\.includes_5a547c6d82611f64c4e2715b8a0e2ca1.txt -o .\\BUILD\\NUCLEO_F767ZI\\IAR\\mbed-os\\targets\\TARGET_STM\\TARGET_STM32F7\\TARGET_STM32F767xI\\device\\TOOLCHAIN_IAR\\startup_stm32f767xx.o .\\mbed-os\\targets\\TARGET_STM\\TARGET_STM32F7\\TARGET_STM32F767xI\\device\\TOOLCHAIN_IAR\\startup_stm32f767xx.S\r\n06:22:52 [DEBUG] Return: 3\r\n06:22:52 Traceback (most recent call last):\r\n06:22:52   File \"C:\\mj\\workspace\\bm_wrap\\1063\\examples\\mbed-os-example-mesh-minimal\\mbed-os\\tools\\make.py\", line 280, in <module>\r\n06:22:52     toolchain))\r\n06:22:52   File \"C:\\mj\\workspace\\bm_wrap\\1063\\examples\\mbed-os-example-mesh-minimal\\mbed-os\\tools\\build_api.py\", line 538, in build_project\r\n06:22:52     objects = toolchain.compile_sources(resources, resources.inc_dirs)\r\n06:22:52   File \"C:\\mj\\workspace\\bm_wrap\\1063\\examples\\mbed-os-example-mesh-minimal\\mbed-os\\tools\\toolchains\\__init__.py\", line 923, in compile_sources\r\n06:22:52     return self.compile_queue(queue, objects)\r\n06:22:52   File \"C:\\mj\\workspace\\bm_wrap\\1063\\examples\\mbed-os-example-mesh-minimal\\mbed-os\\tools\\toolchains\\__init__.py\", line 986, in compile_queue\r\n06:22:52     raise ToolException(err)\r\n06:22:52 ToolException\r\n06:22:52 [mbed] Working path \"C:\\mj\\workspace\\bm_wrap\\1063\\examples\\mbed-os-example-mesh-minimal\" (program)\r\n```\r\n\r\nIf you compare this command to other examples, the same command, for comparison:\r\n\r\n```\r\nCompile: C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\bin\\iasmarm --cpu Cortex-M7 --fpu VFPv5 -DTRANSACTION_QUEUE_SIZE_SPI=2 -D__CORTEX_M7 -DARM_MATH_CM7 -D__FPU_PRESENT=1 -DUSBHOST_OTHER -D__MBED_CMSIS_RTOS_CM -D__CMSIS_RTOS -f .\\BUILD\\NUCLEO_F767ZI\\IAR\\.includes_0f02e5fe9f3d74c786cba96e00bda7d5.txt -o .\\BUILD\\NUCLEO_F767ZI\\IAR\\mbed-os\\targets\\TARGET_STM\\TARGET_STM32F7\\TARGET_STM32F767xI\\device\\TOOLCHAIN_IAR\\startup_stm32f767xx.o .\\mbed-os\\targets\\TARGET_STM\\TARGET_STM32F7\\TARGET_STM32F767xI\\device\\TOOLCHAIN_IAR\\startup_stm32f767xx.S\r\n06:23:32 [DEBUG] Return: 0\r\n```\r\n\r\n\r\nFor nucleo f429zi, it is different assembly file (here is the job (internal link) http://mbed-ci-master-2.austin.arm.com:8081/job/pr_pipeline/886/)\r\n\r\n```\r\n17:10:17 Compile [  0.2%]: cmain.S\r\n17:10:17 [DEBUG] Compile: C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\bin\\iasmarm --cpu Cortex-M4F -DTRANSACTION_QUEUE_SIZE_SPI=2 -D__CORTEX_M4 -DUSB_STM_HAL -DARM_MATH_CM4 -D__FPU_PRESENT=1 -DUSBHOST_OTHER -D__MBED_CMSIS_RTOS_CM -D__CMSIS_RTOS -f .\\BUILD\\NUCLEO_F429ZI\\IAR\\.includes_c45dbc904e060289cb07543bf5b1e267.txt -o .\\BUILD\\NUCLEO_F429ZI\\IAR\\mbed-os\\cmsis\\TOOLCHAIN_IAR\\cmain.o .\\mbed-os\\cmsis\\TOOLCHAIN_IAR\\cmain.S\r\n17:10:17 [DEBUG] Return: 3\r\n17:10:17 Traceback (most recent call last):\r\n17:10:17   File \"C:\\mj\\workspace\\bm_wrap\\953\\examples\\mbed-os-example-mesh-minimal\\mbed-os\\tools\\make.py\", line 280, in <module>\r\n17:10:17     toolchain))\r\n17:10:17   File \"C:\\mj\\workspace\\bm_wrap\\953\\examples\\mbed-os-example-mesh-minimal\\mbed-os\\tools\\build_api.py\", line 536, in build_project\r\n17:10:17     objects = toolchain.compile_sources(resources, resources.inc_dirs)\r\n17:10:17   File \"C:\\mj\\workspace\\bm_wrap\\953\\examples\\mbed-os-example-mesh-minimal\\mbed-os\\tools\\toolchains\\__init__.py\", line 909, in compile_sources\r\n17:10:17     return self.compile_queue(queue, objects)\r\n17:10:17   File \"C:\\mj\\workspace\\bm_wrap\\953\\examples\\mbed-os-example-mesh-minimal\\mbed-os\\tools\\toolchains\\__init__.py\", line 972, in compile_queue\r\n17:10:17     raise ToolException(err)\r\n17:10:17 ToolException\r\n17:10:17 [mbed] Working path \"C:\\mj\\workspace\\bm_wrap\\953\\examples\\mbed-os-example-mesh-minimal\" (program)\r\n```\r\n\r\nThe same command (for sockets example):\r\n\r\n```\r\n17:10:20 Compile [  0.3%]: cmain.S\r\n17:10:20 [DEBUG] Compile: C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.5\\arm\\bin\\iasmarm --cpu Cortex-M4F -DTRANSACTION_QUEUE_SIZE_SPI=2 -D__CORTEX_M4 -DUSB_STM_HAL -DARM_MATH_CM4 -D__FPU_PRESENT=1 -DUSBHOST_OTHER -D__MBED_CMSIS_RTOS_CM -D__CMSIS_RTOS -f .\\BUILD\\NUCLEO_F429ZI\\IAR\\.includes_7085507b6b69db011e3a2f64169c8a9d.txt -o .\\BUILD\\NUCLEO_F429ZI\\IAR\\mbed-os\\cmsis\\TOOLCHAIN_IAR\\cmain.o .\\mbed-os\\cmsis\\TOOLCHAIN_IAR\\cmain.S\r\n17:10:20 [DEBUG] Return: 0\r\n```\r\n\r\nI tried to reproduce locally, cant, was able to build 20x at least. The same IAR (Compared the version numbers for linker, assembler via these logs). Any suggestions how to reproduce this one?\r\n\r\nNote, it happens randomly, not always in the CI.\r\n\r\nMine setup (IAR versions):\r\n\r\n```\r\n    IAR Assembler V7.80.4.12462/W32 for ARM\r\n    Copyright 1999-2017 IAR Systems AB.\r\n```\r\n\r\ncc @theotherjimmy @studavekar "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4877",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4877/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4877/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4877/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4877",
    "id": 248960497,
    "number": 4877,
    "title": "GCC: newlib thread safety",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-09T08:51:02Z",
    "updated_at": "2017-10-12T12:56:24Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Description\r\n- Type: Enhancement \r\n\r\nThis is tracking issue for earlier PR that was created here: https://github.com/ARMmbed/mbed-os/pull/4796 with the title: `Make the newlib Standard C Library shipped in the GNU ARM Embedded 6 Toolchain thread safe when used with mbed-os.`\r\n\r\nThanks to @adamgreen for the work, opened lot of questions 👍 \r\n\r\nSome information extracted, for better visibility, and we can split this into separate issues or move them to CMSIS5 repository.\r\n\r\nChanges that could be taken:\r\n\r\n1.  RTX: SVC_Handler assembly language updates for GDB\r\n\r\n    https://github.com/ARMmbed/mbed-os/commit/594407d5c123f5716dd5e18f2184d0532075e477\r\n\r\n    I can cherry-pick this, and send upstream to CMSIS5 for review.\r\n\r\n1. Regarget fix TOOLCHAIN_ - use macros that come from toolchain rather `TOOLCHAIN_toolchaintype`\r\n\r\n    https://github.com/ARMmbed/mbed-os/pull/4796/commits/e2002ffc2fc9148d0e413c37fcf480aa8d05074d\r\n\r\n    I'll cherrypick this and send separately. \r\n\r\nOpened questions (the main goal of the PR that raised so many questions):\r\n\r\n1. To find out which one is the main thread\r\n\r\n    @adamgreen  Do you have recommendations on how to do this? I started making this code specific to RTX/newlib only with no knowledge of mbed-os specifics but I hit an issue when I wanted to know if the current thread was the main thread and I didn't see an easy to do that from within RTX. I want to short-circuit and use _global_impure_ptr for the main thread's reentrancy data since it is already allocated by newlib. Otherwise I would be wasting this 96 bytes for newlib-nano and 1064 bytes for newlib-full.\r\n\r\n    @bulislaw : How about we expose return value of creating the main thread as a global variable? So you can compare it later with current thread id?\r\n    https://github.com/ARMmbed/mbed-os/blob/e3d4176345871f8ba16ec5e9b5182688690ef78c/rtos/mbed_boot.c#L319\r\n\r\n1. Memory for standard lib in TCB?\r\n\r\n    @c1728p9: Finally, losing the ability to have an arbitrary number of threads at run-time is a fairly big downside to this change. Its also less than ideal that the task switch handler needs to call \"__user_perthread_libspace\" to lookup the _reent structure. What if rather than looking it up, the _reent pointer was stored either in a TCB or on the stack (similar to a register) during context switch? That way lookups would take the same amount of time regardless of number of threads. Furthermore, this would allow a thread to change it's _reent pointer at run-time, since on the next context switch the new value would be saved. The initial _reent pointer on thread creation could point to a dummy _reent pointer (or maybe NULL). The real _reent pointer could then be dynamically allocated and set just before control is passed to the thread's real entry point.\r\n\r\n    @adamgreen: I used this approach because it is based on how RTX implements it for the ARM compiler and I wanted to minimize the changes to RTX. The best thing might be to just pull the per thread memory for the Standard C Library back into the thread control block like was done with an older version of RTX so that every thread created also has its data allocated for the C lib as well.\r\n\r\n    @bulislaw: It's not true anymore for ARM compiler, it was something that was annoying me for a long time and it's fixed now. We allocate maximum number of static locks (a static memory) and then compliment that with malloced mutexes for any additional dynamic locks.\r\n\r\nFor the full discussion see the original pull request.\r\n\r\ncc @JonatanAntoni @RobertRostohar - please review and share what you think about these changes proposed\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4870",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4870/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4870/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4870/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4870",
    "id": 248630459,
    "number": 4870,
    "title": "Facing error: KL46 :RTX error code: 0x00000004, task ID: 0x1FFFF160",
    "user": {
      "login": "samp12345",
      "id": 30825481,
      "avatar_url": "https://avatars0.githubusercontent.com/u/30825481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samp12345",
      "html_url": "https://github.com/samp12345",
      "followers_url": "https://api.github.com/users/samp12345/followers",
      "following_url": "https://api.github.com/users/samp12345/following{/other_user}",
      "gists_url": "https://api.github.com/users/samp12345/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samp12345/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samp12345/subscriptions",
      "organizations_url": "https://api.github.com/users/samp12345/orgs",
      "repos_url": "https://api.github.com/users/samp12345/repos",
      "events_url": "https://api.github.com/users/samp12345/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samp12345/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345118,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20rtos",
        "name": "component: rtos",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-08-08T07:55:39Z",
    "updated_at": "2017-08-16T04:03:36Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi,\r\nI am using Freescale KL46 for interfacing with few SPI devices.\r\nDuring this, I get the issue \"RTX error code: 0x00000004, task ID: 0x1FFFF160\"\r\nI am using online mbed RTOS compiler directly \r\nThe error is consistent.\r\nPlease suggest,"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4867",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4867/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4867/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4867/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4867",
    "id": 248525229,
    "number": 4867,
    "title": "Incremental compiles for config system",
    "user": {
      "login": "geky",
      "id": 1075160,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geky",
      "html_url": "https://github.com/geky",
      "followers_url": "https://api.github.com/users/geky/followers",
      "following_url": "https://api.github.com/users/geky/following{/other_user}",
      "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
      "organizations_url": "https://api.github.com/users/geky/orgs",
      "repos_url": "https://api.github.com/users/geky/repos",
      "events_url": "https://api.github.com/users/geky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-08-07T20:40:25Z",
    "updated_at": "2017-08-11T14:35:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "This is a pretty big feature request, but it would be a big improvement for users using the config system. I wanted to get it tracked somewhere in case of a rainy day.\r\n\r\nAs is, any change to a configuration file (mbed_app.json or mbed_lib.json) requires a full recompile. This takes 1min 28sec on my system with only the default profile. This is exacerbated by the fact that most config changes are small tweaks that occur repeatedly to reach a goal, and these tweaks are often carried out by a new user trying to get their system working.\r\n\r\nIncrementally compiling only the files actually depend on the modified configuration options would greatly improve the user experience with the config system.\r\n\r\nUnfortunately this isn't very straightforward with how the tools currently handle mbed_config.h. Bouncing ideas around it seems the best case would be to create the dependency information ourselves, either by scanning non-recompiled files for config options at compile time, or by storing config dependency information in the BUILD directory.\r\n\r\ncc @theotherjimmy "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4856",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4856/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4856/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4856/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4856",
    "id": 247984322,
    "number": 4856,
    "title": "CLI compiling options",
    "user": {
      "login": "mapellil",
      "id": 17618662,
      "avatar_url": "https://avatars2.githubusercontent.com/u/17618662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mapellil",
      "html_url": "https://github.com/mapellil",
      "followers_url": "https://api.github.com/users/mapellil/followers",
      "following_url": "https://api.github.com/users/mapellil/following{/other_user}",
      "gists_url": "https://api.github.com/users/mapellil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mapellil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mapellil/subscriptions",
      "organizations_url": "https://api.github.com/users/mapellil/orgs",
      "repos_url": "https://api.github.com/users/mapellil/repos",
      "events_url": "https://api.github.com/users/mapellil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mapellil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-08-04T11:52:53Z",
    "updated_at": "2017-12-12T21:57:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Question\r\n- Related issue: \r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n\r\n**Target**\r\nNUCLEO-F401RE\r\n\r\n**Toolchain:**\r\nGCC_ARM Mbed CLI\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**From the CLI how to change the the default option -mfloat-abi=softfp for the NUCLEO-F401RE (M4) defined in the gcc.py? More in general how to override from CLI the default compiling options defined in the gcc.py ?   **\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4830",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4830/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4830/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4830/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4830",
    "id": 246574462,
    "number": 4830,
    "title": "mbed requires use of printf/scanf through any use of Stream",
    "user": {
      "login": "fahhem",
      "id": 306100,
      "avatar_url": "https://avatars3.githubusercontent.com/u/306100?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fahhem",
      "html_url": "https://github.com/fahhem",
      "followers_url": "https://api.github.com/users/fahhem/followers",
      "following_url": "https://api.github.com/users/fahhem/following{/other_user}",
      "gists_url": "https://api.github.com/users/fahhem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fahhem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fahhem/subscriptions",
      "organizations_url": "https://api.github.com/users/fahhem/orgs",
      "repos_url": "https://api.github.com/users/fahhem/repos",
      "events_url": "https://api.github.com/users/fahhem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fahhem/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-07-30T10:00:37Z",
    "updated_at": "2017-08-02T17:36:51Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nscanf/printf can be heavyweight (nanolib takes >2.5kb in flash) and hard to optimize even when only used once due to source->static lib->source traversal.\r\n\r\nWhen you use a Stream subclass (like Serial), here's what happens:\r\nStream::Stream() calls fdopen->mbed_fdopen\r\n\r\nIn mbed_retarget.cpp, mbed_fdopen() calls sprintf just to do \":%p\" % this, then calls std::fopen, which eventually leads to _open, which calls sscanf to rip the pointer out of \":%p\".\r\n\r\n**Suggested enhancement**\r\n***Option A: optimize these specific uses of printf/scanf out.***\r\nprintf: A simpler (computationally) way to calculate a buf that will be checked by _open is:\r\n```C++\r\n// Around line 828\r\nstd::FILE *mbed_fdopen(FileHandle *fh, const char *mode) {\r\n    // char buf[12]; /* :0x12345678 + null byte */\r\n    // std::sprintf(buf, \":%p\", fh);\r\n    char buf[2 + sizeof(fh) + 1]; \r\n    static_assert(sizeof(buf) == 7, \"Pointers aren't 4 bytes?\");\r\n    buf[0] = ':';\r\n    memcpy(buf + 1, &fh, sizeof(fh));\r\n    buf[1 + sizeof(fh)] = '\\0';\r\n\r\n// Around line 178\r\nextern \"C\" FILEHANDLE PREFIX(_open)(const char* name, int openmode) {\r\n...\r\n// Around line 232\r\n      if (name[0] == ':') {\r\n        void *p;\r\n        // std::sscanf(name, \":%p\", &p);\r\n        memcpy(&p, name + 1, sizeof(p));\r\n        res = (FileHandle*)p;\r\n```\r\nThis saves **~3.3kB** from my program, though I still have these symbols in my Map and I can't trace them any further: svfprintf, vfprintf, fseek, setvbuf.\r\n\r\n***Option B: Allow Serial to not support file-like operations (via define?, or a SerialLite?)***\r\nTo compare apples to apples, I first wrote the following code to ensure I was linking everything in:\r\n\r\n```C++\r\nmbed::Callback<void(int)> null_cb(nullptr);\r\nchar buf[80];\r\nint written = std::sprintf(buf, \"Some stuff: %d\", 9);\r\nserial.write((uint8_t*)buf, written, null_cb));\r\n```\r\nThis uses the async `write()` code since the synchronous `write()` is implemented by `Stream`. Then I removed `Stream` as a base class of `Serial` in both Serial.h and Serial.cpp. Compiling before and after that base class removal, I got a **5kB** shrink in text (and 300 in bss because mbed_retarget's filehandles aren't linked in anymore).\r\n\r\n**Pros**\r\nBoth options can be done, though B is more intrusive and more work as it seems the purpose of Stream was to capitalize on the stdlib's implementations of fprintf, fflush, etc. However, for more production-worthy systems, being able to use Serial ports without linking in string-manipulation libraries and/or file-manipulation libraries means being able to put more code in the same microcontroller or to cost-down and use one with less flash (and less ram, etc).\r\n\r\nOption A:\r\n* Save ~3kB in firmware not using scanf elsewhere\r\n\r\nOption B:\r\n* Save ~5kB in firmware not using file-like abilities on Serial.\r\n* Since `Stream::printf` calls `fprintf` synchronously, but `SerialBase::write` is an async write, adding/moving `Stream::write` to `SerialBase` or a new `StreamLite`would give `Serial` a synchronous write that doesn't link in file handling.\r\n\r\nTo be clear, I haven't thought through Option B, partly because I don't know mbed's long-term vision for `Serial`, `Stream`, etc. I just know that ripping out file handling code brings my blinky+serial code down to ~15kB from ~23kB. While that's still really large for the functionality, it's mostly UART and RCC related plus 4 printf-related functions that I'll figure out some other way.\r\n\r\n**Cons**\r\nOption A:\r\n* The filename string is less human-readable (not really a problem)\r\n* Slightly more code to use memcpy over sscanf and sprintf.\r\n\r\nOption B:\r\n* This requires more thinking/decisions and a lot more work than what I've done here. If you're okay with more defines, I can make one to just rip out Stream as a subclass, but that seems hacky.\r\n\r\n\r\n\r\n*Conclusion*\r\n\r\nI'll send a PR for Option A to discuss the exact implementation since that seems reasonable. For Option B, I'd like to hear your thoughts and see what path you would prefer."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4818",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4818/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4818/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4818/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4818",
    "id": 245793966,
    "number": 4818,
    "title": "Where is the old 'net' library?",
    "user": {
      "login": "sstaub",
      "id": 6450325,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6450325?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sstaub",
      "html_url": "https://github.com/sstaub",
      "followers_url": "https://api.github.com/users/sstaub/followers",
      "following_url": "https://api.github.com/users/sstaub/following{/other_user}",
      "gists_url": "https://api.github.com/users/sstaub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sstaub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sstaub/subscriptions",
      "organizations_url": "https://api.github.com/users/sstaub/orgs",
      "repos_url": "https://api.github.com/users/sstaub/repos",
      "events_url": "https://api.github.com/users/sstaub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sstaub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-07-26T17:18:12Z",
    "updated_at": "2017-07-27T21:28:10Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Where is the old 'net' library gone? It was in the features/unsupported folder.\r\nI need them for multicast feature, which is not supported in mbedos5.\r\nPlease bring it back for use with mbed2."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4811",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4811/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4811/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4811/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4811",
    "id": 245385805,
    "number": 4811,
    "title": "Online compiler list of exporters looks ugly and inconsequent",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 534372905,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20online%20deployment",
        "name": "type: online deployment",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-07-25T12:33:09Z",
    "updated_at": "2017-07-26T08:07:56Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "![inconsistent](https://user-images.githubusercontent.com/816856/28572117-ece4fac0-7145-11e7-88bc-66602e00179d.png)\r\n\r\n1. Exporters are listed randomly.\r\n1. Half of them is styled nicely, half of them not (`vscode_gcc_arm` should f.e. be Visual Studio Code (GCC ARM)`).\r\n1. Still two GCC exports which are not correct I think (Code Sourcery and ARM Embedded).\r\n1. No icons on most exporters.\r\n\r\nWhere can I fix this @theotherjimmy?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4810",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4810/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4810/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4810/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4810",
    "id": 245385103,
    "number": 4810,
    "title": "VSCode export does not work in online compiler",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 534372905,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20online%20deployment",
        "name": "type: online deployment",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-07-25T12:30:32Z",
    "updated_at": "2017-07-31T13:43:47Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO-F411RE\r\n\r\n**Toolchain:**\r\nOnline compiler\r\n\r\nExport to vscode_gcc_arm, result:\r\n\r\n![error](https://user-images.githubusercontent.com/816856/28572085-ce2c7586-7145-11e7-95c0-d6d3d1d856f4.png)\r\n\r\n@theotherjimmy "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4791",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4791/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4791/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4791/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4791",
    "id": 244413817,
    "number": 4791,
    "title": "Compile failing when project path contains non-ascii character",
    "user": {
      "login": "xymopen",
      "id": 8053733,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8053733?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xymopen",
      "html_url": "https://github.com/xymopen",
      "followers_url": "https://api.github.com/users/xymopen/followers",
      "following_url": "https://api.github.com/users/xymopen/following{/other_user}",
      "gists_url": "https://api.github.com/users/xymopen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xymopen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xymopen/subscriptions",
      "organizations_url": "https://api.github.com/users/xymopen/orgs",
      "repos_url": "https://api.github.com/users/xymopen/repos",
      "events_url": "https://api.github.com/users/xymopen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xymopen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-07-20T15:56:14Z",
    "updated_at": "2017-07-22T06:23:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**platform:** \r\n(`Windows 10 64 Bit`)\r\n\r\n**Python version:** \r\n(`2.7.13 64 Bit`)\r\n\r\n**mbed-cli version:** \r\n(`1.2.0`)\r\n\r\n**mbed-os sha:**\r\n(`692d905`)\r\n\r\n**Steps to reproduce**\r\n\r\n    # 示例 means example\r\n    mkdir 示例\r\n    cd 示例\r\n    mbed import mbed-os\r\n    cd mbed-os\r\n    mbed compile -m DISCO_F407VG -t GCC_ARM\r\n\r\n**Actual behavior**\r\n\r\n    Building project mbed-os (DISCO_F407VG, GCC_ARM)\r\n    Scan: .\r\n    Scan: env\r\n    Scan: mbed\r\n    Compile [  0.3%]: AnalogIn.cpp\r\n    Compile [  0.7%]: BusInOut.cpp\r\n    Compile [  1.0%]: BusIn.cpp\r\n    Compile [  1.3%]: BusOut.cpp\r\n    Compile [  1.6%]: FlashIAP.cpp\r\n    Compile [  2.0%]: CAN.cpp\r\n    Compile [  2.3%]: Ethernet.cpp\r\n    Compile [  2.6%]: I2CSlave.cpp\r\n    Compile [  2.9%]: I2C.cpp\r\n    Compile [  3.3%]: InterruptIn.cpp\r\n    Compile [  3.6%]: InterruptManager.cpp\r\n    Compile [  3.9%]: RawSerial.cpp\r\n    Compile [  4.2%]: SPISlave.cpp\r\n    Compile [  4.6%]: SPI.cpp\r\n    Compile [  4.9%]: Serial.cpp\r\n    Compile [  5.2%]: SerialBase.cpp\r\n    Compile [  5.5%]: Ticker.cpp\r\n    Compile [  5.9%]: Timeout.cpp\r\n    Compile [  6.2%]: TimerEvent.cpp\r\n    Compile [  6.5%]: Timer.cpp\r\n    Compile [  6.8%]: UARTSerial.cpp\r\n    Compile [  7.2%]: equeue_posix.c\r\n    Compile [  7.5%]: EventQueue.cpp\r\n    Compile [  7.8%]: equeue_mbed.cpp\r\n    Compile [  8.1%]: equeue.c\r\n    Compile [  8.5%]: Dir.cpp\r\n    Compile [  8.8%]: File.cpp\r\n    Compile [  9.1%]: FileSystem.cpp\r\n    Compile [  9.4%]: ChainingBlockDevice.cpp\r\n    Compile [  9.8%]: ccsbcs.cpp\r\n    Compile [ 10.1%]: HeapBlockDevice.cpp\r\n    Compile [ 10.4%]: SlicingBlockDevice.cpp\r\n    Compile [ 10.7%]: MBRBlockDevice.cpp\r\n    Compile [ 11.1%]: ff.cpp\r\n    Compile [ 11.4%]: greentea_metrics.cpp\r\n    Compile [ 11.7%]: greentea_serial.cpp\r\n    Compile [ 12.1%]: FATFileSystem.cpp\r\n    Compile [ 12.4%]: greentea_test_env.cpp\r\n    Compile [ 12.7%]: unity.c\r\n    Compile [ 13.0%]: mbed-utest-shim.cpp\r\n    Compile [ 13.4%]: unity_handler.cpp\r\n    Compile [ 13.7%]: utest_case.cpp\r\n    Compile [ 14.0%]: utest_default_handlers.cpp\r\n    Compile [ 14.3%]: utest_stack_trace.cpp\r\n    Compile [ 14.7%]: utest_greentea_handlers.cpp\r\n    Compile [ 15.0%]: mbed_trng.c\r\n    Compile [ 15.3%]: utest_harness.cpp\r\n    Compile [ 15.6%]: aesni.c\r\n    Compile [ 16.0%]: utest_shim.cpp\r\n    Compile [ 16.3%]: arc4.c\r\n    Compile [ 16.6%]: utest_types.cpp\r\n    Compile [ 16.9%]: aes.c\r\n    Compile [ 17.3%]: asn1parse.c\r\n    Compile [ 17.6%]: asn1write.c\r\n    Compile [ 17.9%]: base64.c\r\n    Compile [ 18.2%]: blowfish.c\r\n    Compile [ 18.6%]: camellia.c\r\n    Compile [ 18.9%]: certs.c\r\n    Compile [ 19.2%]: ccm.c\r\n    Compile [ 19.5%]: cipher_wrap.c\r\n    Compile [ 19.9%]: cipher.c\r\n    Compile [ 20.2%]: cmac.c\r\n    Compile [ 20.5%]: ctr_drbg.c\r\n    Compile [ 20.8%]: bignum.c\r\n    Compile [ 21.2%]: debug.c\r\n    Compile [ 21.5%]: des.c\r\n    Compile [ 21.8%]: dhm.c\r\n    Compile [ 22.1%]: ecdh.c\r\n    Compile [ 22.5%]: ecjpake.c\r\n    Compile [ 22.8%]: ecdsa.c\r\n    Compile [ 23.1%]: entropy.c\r\n    Compile [ 23.5%]: entropy_poll.c\r\n    Compile [ 23.8%]: ecp_curves.c\r\n    Compile [ 24.1%]: havege.c\r\n    Compile [ 24.4%]: error.c\r\n    Compile [ 24.8%]: gcm.c\r\n    Compile [ 25.1%]: hmac_drbg.c\r\n    Compile [ 25.4%]: md2.c\r\n    Compile [ 25.7%]: ecp.c\r\n    Compile [ 26.1%]: md4.c\r\n    Compile [ 26.4%]: md5.c\r\n    Compile [ 26.7%]: md.c\r\n    Compile [ 27.0%]: net_sockets.c\r\n    Compile [ 27.4%]: memory_buffer_alloc.c\r\n    Compile [ 27.7%]: md_wrap.c\r\n    Compile [ 28.0%]: padlock.c\r\n    Compile [ 28.3%]: oid.c\r\n    Compile [ 28.7%]: pk.c\r\n    Compile [ 29.0%]: pem.c\r\n    Compile [ 29.3%]: pkcs11.c\r\n    Compile [ 29.6%]: pkcs12.c\r\n    Compile [ 30.0%]: pkcs5.c\r\n    Compile [ 30.3%]: pk_wrap.c\r\n    Compile [ 30.6%]: ripemd160.c\r\n    Compile [ 30.9%]: platform.c\r\n    Compile [ 31.3%]: pkwrite.c\r\n    Compile [ 31.6%]: pkparse.c\r\n    Compile [ 31.9%]: sha1.c\r\n    Compile [ 32.2%]: ssl_cache.c\r\n    Compile [ 32.6%]: ssl_ciphersuites.c\r\n    Compile [ 32.9%]: sha256.c\r\n    Compile [ 33.2%]: sha512.c\r\n    Compile [ 33.6%]: ssl_cli.c\r\n    Compile [ 33.9%]: rsa.c\r\n    Compile [ 34.2%]: ssl_cookie.c\r\n    Compile [ 34.5%]: ssl_srv.c\r\n    Compile [ 34.9%]: ssl_ticket.c\r\n    Compile [ 35.2%]: ssl_tls.c\r\n    Compile [ 35.5%]: threading.c\r\n    Compile [ 35.8%]: timing.c\r\n    Compile [ 36.2%]: version.c\r\n    Compile [ 36.5%]: version_features.c\r\n    Compile [ 36.8%]: x509_create.c\r\n    Compile [ 37.1%]: x509_csr.c\r\n    Compile [ 37.5%]: x509.c\r\n    Compile [ 37.8%]: x509_crl.c\r\n    Compile [ 38.1%]: x509write_crt.c\r\n    Compile [ 38.4%]: x509write_csr.c\r\n    Compile [ 38.8%]: xtea.c\r\n    Compile [ 39.1%]: aes_alt.c\r\n    Compile [ 39.4%]: sha1_alt.c\r\n    Compile [ 39.7%]: sha256_alt.c\r\n    Compile [ 40.1%]: NetworkInterface.cpp\r\n    Compile [ 40.4%]: x509_crt.c\r\n    Compile [ 40.7%]: NetworkStack.cpp\r\n    Compile [ 41.0%]: Socket.cpp\r\n    Compile [ 41.4%]: TCPServer.cpp\r\n    Compile [ 41.7%]: SocketAddress.cpp\r\n    Compile [ 42.0%]: OnboardCellularInterface.cpp\r\n    Compile [ 42.3%]: WiFiAccessPoint.cpp\r\n    Compile [ 42.7%]: TCPSocket.cpp\r\n    Compile [ 43.0%]: UDPSocket.cpp\r\n    Compile [ 43.3%]: mbed_flash_api.c\r\n    Compile [ 43.6%]: PPPCellularInterface.cpp\r\n    Compile [ 44.0%]: UARTCellularInterface.cpp\r\n    Compile [ 44.3%]: nsapi_dns.cpp\r\n    Compile [ 44.6%]: mbed_gpio.c\r\n    Compile [ 45.0%]: mbed_lp_ticker_api.c\r\n    Compile [ 45.3%]: mbed_pinmap_common.c\r\n    Compile [ 45.6%]: mbed_ticker_api.c\r\n    Compile [ 45.9%]: mbed_us_ticker_api.c\r\n    Compile [ 46.3%]: CallChain.cpp\r\n    Compile [ 46.6%]: FileHandle.cpp\r\n    Compile [ 46.9%]: FileBase.cpp\r\n    Compile [ 47.2%]: ATCmdParser.cpp\r\n    Compile [ 47.6%]: FilePath.cpp\r\n    Compile [ 47.9%]: LocalFileSystem.cpp\r\n    Compile [ 48.2%]: FileSystemHandle.cpp\r\n    Compile [ 48.5%]: mbed_application.c\r\n    Compile [ 48.9%]: mbed_alloc_wrappers.cpp\r\n    Compile [ 49.2%]: Stream.cpp\r\n    Compile [ 49.5%]: mbed_assert.c\r\n    Compile [ 49.8%]: mbed_board.c\r\n    Compile [ 50.2%]: mbed_critical.c\r\n    Compile [ 50.5%]: mbed_error.c\r\n    Compile [ 50.8%]: mbed_mem_trace.c\r\n    Compile [ 51.1%]: mbed_mktime.c\r\n    Compile [ 51.5%]: mbed_interface.c\r\n    Compile [ 51.8%]: mbed_sdk_boot.c\r\n    Compile [ 52.1%]: mbed_poll.cpp\r\n    Compile [ 52.4%]: mbed_rtc_time.cpp\r\n    Compile [ 52.8%]: mbed_stats.c\r\n    Compile [ 53.1%]: mbed_wait_api_no_rtos.c\r\n    Compile [ 53.4%]: mbed_semihost_api.c\r\n    Compile [ 53.7%]: mbed_retarget.cpp\r\n    Compile [ 54.1%]: Mutex.cpp\r\n    Compile [ 54.4%]: Semaphore.cpp\r\n    Compile [ 54.7%]: mbed_wait_api_rtos.cpp\r\n    Compile [ 55.0%]: RtosTimer.cpp\r\n    Compile [ 55.4%]: mbed_boot.c\r\n    Compile [ 55.7%]: RTX_Config.c\r\n    Compile [ 56.0%]: rtos_idle.c\r\n    Compile [ 56.4%]: cmsis_os1.c\r\n    Compile [ 56.7%]: irq_cm4f.S\r\n    Compile [ 57.0%]: rt_OsEventObserver.c\r\n    Compile [ 57.3%]: Thread.cpp\r\n    Compile [ 57.7%]: rtx_delay.c\r\n    Compile [ 58.0%]: rtx_evflags.c\r\n    Compile [ 58.3%]: rtx_lib.c\r\n    Compile [ 58.6%]: rtx_evr.c\r\n    Compile [ 59.0%]: rtx_memory.c\r\n    Compile [ 59.3%]: rtx_kernel.c\r\n    Compile [ 59.6%]: rtx_mempool.c\r\n    Compile [ 59.9%]: rtx_msgqueue.c\r\n    Compile [ 60.3%]: rtx_mutex.c\r\n    Compile [ 60.6%]: rtx_semaphore.c\r\n    Compile [ 60.9%]: rtx_system.c\r\n    Compile [ 61.2%]: mbed_rtx_handlers.c\r\n    Compile [ 61.6%]: rtx_timer.c\r\n    Compile [ 61.9%]: PeripheralPins.c\r\n    Compile [ 62.2%]: startup_stm32f407xx.S\r\n    Compile [ 62.5%]: system_clock.c\r\n    Compile [ 62.9%]: rtx_thread.c\r\n    Compile [ 63.2%]: analogin_api.c\r\n    Compile [ 63.5%]: hal_init_pre.c\r\n    Compile [ 63.8%]: analogout_device.c\r\n    Compile [ 64.2%]: stm32f4xx_hal.c\r\n    Compile [ 64.5%]: stm32f4xx_hal_adc_ex.c\r\n    Compile [ 64.8%]: stm32f4xx_hal_cec.c\r\n    Compile [ 65.1%]: stm32f4xx_hal_adc.c\r\n    Compile [ 65.5%]: stm32f4xx_hal_can.c\r\n    Compile [ 65.8%]: stm32f4xx_hal_cryp.c\r\n    Compile [ 66.1%]: stm32f4xx_hal_crc.c\r\n    Compile [ 66.4%]: stm32f4xx_hal_cortex.c\r\n    Compile [ 66.8%]: stm32f4xx_hal_cryp_ex.c\r\n    Compile [ 67.1%]: stm32f4xx_hal_dac_ex.c\r\n    Compile [ 67.4%]: stm32f4xx_hal_dac.c\r\n    Compile [ 67.8%]: stm32f4xx_hal_dcmi_ex.c\r\n    Compile [ 68.1%]: stm32f4xx_hal_dcmi.c\r\n    Compile [ 68.4%]: stm32f4xx_hal_dfsdm.c\r\n    Compile [ 68.7%]: stm32f4xx_hal_dma2d.c\r\n    Compile [ 69.1%]: stm32f4xx_hal_dma.c\r\n    Compile [ 69.4%]: stm32f4xx_hal_dma_ex.c\r\n    Compile [ 69.7%]: stm32f4xx_hal_dsi.c\r\n    Compile [ 70.0%]: stm32f4xx_hal_flash.c\r\n    Compile [ 70.4%]: stm32f4xx_hal_eth.c\r\n    Compile [ 70.7%]: stm32f4xx_hal_flash_ex.c\r\n    Compile [ 71.0%]: stm32f4xx_hal_flash_ramfunc.c\r\n    Compile [ 71.3%]: stm32f4xx_hal_fmpi2c_ex.c\r\n    Compile [ 71.7%]: stm32f4xx_hal_fmpi2c.c\r\n    Compile [ 72.0%]: stm32f4xx_hal_hash.c\r\n    Compile [ 72.3%]: stm32f4xx_hal_gpio.c\r\n    Compile [ 72.6%]: stm32f4xx_hal_hash_ex.c\r\n    Compile [ 73.0%]: stm32f4xx_hal_i2c_ex.c\r\n    Compile [ 73.3%]: stm32f4xx_hal_hcd.c\r\n    Compile [ 73.6%]: stm32f4xx_hal_i2s.c\r\n    Compile [ 73.9%]: stm32f4xx_hal_i2s_ex.c\r\n    Compile [ 74.3%]: stm32f4xx_hal_irda.c\r\n    Compile [ 74.6%]: stm32f4xx_hal_iwdg.c\r\n    Compile [ 74.9%]: stm32f4xx_hal_i2c.c\r\n    Compile [ 75.2%]: stm32f4xx_hal_lptim.c\r\n    Compile [ 75.6%]: stm32f4xx_hal_ltdc.c\r\n    Compile [ 75.9%]: stm32f4xx_hal_ltdc_ex.c\r\n    Compile [ 76.2%]: stm32f4xx_hal_msp_template.c\r\n    Compile [ 76.5%]: stm32f4xx_hal_mmc.c\r\n    [Warning] stm32f4xx_hal_mmc.c@1319,30: suggest parentheses around comparison in operand of '&' [-Wparentheses]\r\n    Compile [ 76.9%]: stm32f4xx_hal_nor.c\r\n    Compile [ 77.2%]: stm32f4xx_hal_pccard.c\r\n    Compile [ 77.5%]: stm32f4xx_hal_nand.c\r\n    Compile [ 77.9%]: stm32f4xx_hal_pcd_ex.c\r\n    Compile [ 78.2%]: stm32f4xx_hal_pwr.c\r\n    Compile [ 78.5%]: stm32f4xx_hal_pwr_ex.c\r\n    Compile [ 78.8%]: stm32f4xx_hal_pcd.c\r\n    [Warning] stm32f4xx_hal_pcd.c@1285,11: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n    [Warning] stm32f4xx_hal_pcd.c@1300,13: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n    [Warning] stm32f4xx_hal_pcd.c@1312,10: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n    Compile [ 79.2%]: stm32f4xx_hal_qspi.c\r\n    Compile [ 79.5%]: stm32f4xx_hal_rcc.c\r\n    Compile [ 79.8%]: stm32f4xx_hal_rcc_ex.c\r\n    Compile [ 80.1%]: stm32f4xx_hal_rng.c\r\n    Compile [ 80.5%]: stm32f4xx_hal_rtc.c\r\n    Compile [ 80.8%]: stm32f4xx_hal_sai.c\r\n    Compile [ 81.1%]: stm32f4xx_hal_sai_ex.c\r\n    Compile [ 81.4%]: stm32f4xx_hal_rtc_ex.c\r\n    Compile [ 81.8%]: stm32f4xx_hal_sdram.c\r\n    Compile [ 82.1%]: stm32f4xx_hal_spdifrx.c\r\n    Compile [ 82.4%]: stm32f4xx_hal_smartcard.c\r\n    Compile [ 82.7%]: stm32f4xx_hal_sd.c\r\n    Compile [ 83.1%]: stm32f4xx_hal_sram.c\r\n    Compile [ 83.4%]: stm32f4xx_hal_spi.c\r\n    Compile [ 83.7%]: stm32f4xx_hal_tim_ex.c\r\n    Compile [ 84.0%]: stm32f4xx_hal_uart.c\r\n    Compile [ 84.4%]: stm32f4xx_hal_tim.c\r\n    Compile [ 84.7%]: stm32f4xx_ll_adc.c\r\n    Compile [ 85.0%]: stm32f4xx_hal_wwdg.c\r\n    Compile [ 85.3%]: stm32f4xx_ll_crc.c\r\n    Compile [ 85.7%]: stm32f4xx_ll_dac.c\r\n    Compile [ 86.0%]: stm32f4xx_ll_dma.c\r\n    Compile [ 86.3%]: stm32f4xx_ll_dma2d.c\r\n    Compile [ 86.6%]: stm32f4xx_hal_usart.c\r\n    Compile [ 87.0%]: stm32f4xx_ll_exti.c\r\n    Compile [ 87.3%]: stm32f4xx_ll_gpio.c\r\n    Compile [ 87.6%]: stm32f4xx_ll_i2c.c\r\n    Compile [ 87.9%]: stm32f4xx_ll_fmc.c\r\n    Compile [ 88.3%]: stm32f4xx_ll_pwr.c\r\n    Compile [ 88.6%]: stm32f4xx_ll_lptim.c\r\n    Compile [ 88.9%]: stm32f4xx_ll_rcc.c\r\n    Compile [ 89.3%]: stm32f4xx_ll_fsmc.c\r\n    Compile [ 89.6%]: stm32f4xx_ll_rng.c\r\n    Compile [ 89.9%]: stm32f4xx_ll_rtc.c\r\n    Compile [ 90.2%]: stm32f4xx_ll_spi.c\r\n    Compile [ 90.6%]: stm32f4xx_ll_tim.c\r\n    Compile [ 90.9%]: stm32f4xx_ll_usart.c\r\n    Compile [ 91.2%]: stm32f4xx_ll_sdmmc.c\r\n    Compile [ 91.5%]: system_stm32f4xx.c\r\n    Compile [ 91.9%]: stm32f4xx_ll_utils.c\r\n    Compile [ 92.2%]: gpio_irq_device.c\r\n    Compile [ 92.5%]: stm32f4xx_ll_usb.c\r\n    Compile [ 92.8%]: pwmout_device.c\r\n    Compile [ 93.2%]: spi_api.c\r\n    Compile [ 93.5%]: serial_device.c\r\n    [Warning] serial_device.c@290,35: unused variable 'tmpval' [-Wunused-variable]\r\n    Compile [ 93.8%]: analogout_api.c\r\n    Compile [ 94.1%]: can_api.c\r\n    Compile [ 94.5%]: gpio_api.c\r\n    Compile [ 94.8%]: hal_tick_16b.c\r\n    Compile [ 95.1%]: gpio_irq_api.c\r\n    Compile [ 95.4%]: hal_tick_32b.c\r\n    Compile [ 95.8%]: lp_ticker.c\r\n    Compile [ 96.1%]: mbed_overrides.c\r\n    Compile [ 96.4%]: pinmap.c\r\n    Compile [ 96.7%]: i2c_api.c\r\n    Compile [ 97.1%]: port_api.c\r\n    Compile [ 97.4%]: pwmout_api.c\r\n    Compile [ 97.7%]: rtc_api.c\r\n    Compile [ 98.0%]: serial_api.c\r\n    Compile [ 98.4%]: trng_api.c\r\n    Compile [ 98.7%]: sleep.c\r\n    [ERROR] 'ascii' codec can't decode byte 0xcf in position 0: ordinal not in range(128)\r\n    [mbed] ERROR: \"c:\\program files\\python\\2.x\\python.exe\" returned error code 1.\r\n    [mbed] ERROR: Command \"c:\\program files\\python\\2.x\\python.exe -u E:\\项目\\示例\\mbed-os\\tools\\make.py -t GCC_ARM -m DISCO_F407VG --source . --build .\\BUILD\\DISCO_F407VG\\GCC_ARM\" in \"E:\\项目\\示例\\mbed-os\"\r\n    ---\r\n\r\n\r\nRemoving the non-ascii characters in project path resolves the issue."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4789",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4789/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4789/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4789/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4789",
    "id": 244336025,
    "number": 4789,
    "title": "SPI: endianness support",
    "user": {
      "login": "alphatronicstva",
      "id": 30299364,
      "avatar_url": "https://avatars1.githubusercontent.com/u/30299364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alphatronicstva",
      "html_url": "https://github.com/alphatronicstva",
      "followers_url": "https://api.github.com/users/alphatronicstva/followers",
      "following_url": "https://api.github.com/users/alphatronicstva/following{/other_user}",
      "gists_url": "https://api.github.com/users/alphatronicstva/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alphatronicstva/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alphatronicstva/subscriptions",
      "organizations_url": "https://api.github.com/users/alphatronicstva/orgs",
      "repos_url": "https://api.github.com/users/alphatronicstva/repos",
      "events_url": "https://api.github.com/users/alphatronicstva/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alphatronicstva/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-07-20T11:55:18Z",
    "updated_at": "2017-07-24T13:43:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "We need to be able to say to each SPI object if it is LSB first or MBS first. This isn't implemented at the moment."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4761",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4761/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4761/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4761/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4761",
    "id": 243250307,
    "number": 4761,
    "title": "USB MSD does not function properly on multiple targets",
    "user": {
      "login": "Sissors",
      "id": 5982704,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5982704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sissors",
      "html_url": "https://github.com/Sissors",
      "followers_url": "https://api.github.com/users/Sissors/followers",
      "following_url": "https://api.github.com/users/Sissors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sissors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sissors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sissors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sissors/orgs",
      "repos_url": "https://api.github.com/users/Sissors/repos",
      "events_url": "https://api.github.com/users/Sissors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sissors/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345068,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20usb",
        "name": "component: usb",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-07-16T16:27:03Z",
    "updated_at": "2017-07-17T07:54:06Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nKL25z, K64F, Arch Max\r\n\r\n**Toolchain:**\r\nOnline compiler\r\n\r\nUSB MSD code does not result in a USB drive showing up. To verify both USB RAM disk code has been used: https://developer.mbed.org/users/Sissors/code/USBMSB_Ramdisk_kl25z/, and the standard USBMSD_SD example https://developer.mbed.org/users/samux/code/USBMSD_SD_HelloWorld_Mbed/docs/989ca460ad95/main_8cpp_source.html (updated where needed, in which case also in the read/write function the count argument needs to be added). For testing, both it is a matter of programming, plug in the MCU USB connector, and a drive should popup (of course when SD card is used that needs to actually be there, RAM disk needs nothing else).\r\n\r\nInitially this appeared on a KL25z who is running some code already for years, and USB MSD is used to be able to modify configuration settings. Nothing was changed, yet it did not work anymore. I verified that code, USB RAM disk and SD file system myself, most on 2 PCs:\r\nThe original code on KL25z: Does not work\r\nSD filesystem on KL25z and Arch Max (STM32F4): Does not work\r\nRAM disk on KL25, K64F, Arch Max and LPC1768: Those first 3 it does not work, on the LPC1768 it works flawless, with identical code. \r\n\r\nOn all targets I have also used the USB Mouse example to verify the USB connection: works flawless on every target.\r\n\r\nWhen it does not work it differs a bit how it doesn't work. Once in a while on Freescale MCUs the drive does show up, but when I try to open it in Windows explorer it returns an error. Sometimes a warning popups regarding broken USB device. Sometimes nothing happens. Sometimes in device manager it shows up the USB mass storage is there, but nothing in explorer. I tested this on my laptop, and some also on my desktop. @0xc0170 tested the RAM disk on Freescale and STM board, did not work. And someone else also helped me out by testing it on a K64F: did not work. \r\n\r\nNow the weirdest part: This is both with latest version of the libs, and with old versions which 100% sure used to work perfectly fine. The original issue showed up with a board which was running the same code for years already, and twice a year or something got plugged into a laptop to update its time using USB MSD. So I would guess some Windows update might be related to it, but maybe it is something completely different.\r\n\r\nSo my first question: Can others reproduce this effect? And if yes, what is causing it?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4692",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4692/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4692/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4692/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4692",
    "id": 240170465,
    "number": 4692,
    "title": "[API] Request API change configure ADC sampling time",
    "user": {
      "login": "LMESTM",
      "id": 17590297,
      "avatar_url": "https://avatars2.githubusercontent.com/u/17590297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LMESTM",
      "html_url": "https://github.com/LMESTM",
      "followers_url": "https://api.github.com/users/LMESTM/followers",
      "following_url": "https://api.github.com/users/LMESTM/following{/other_user}",
      "gists_url": "https://api.github.com/users/LMESTM/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LMESTM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LMESTM/subscriptions",
      "organizations_url": "https://api.github.com/users/LMESTM/orgs",
      "repos_url": "https://api.github.com/users/LMESTM/repos",
      "events_url": "https://api.github.com/users/LMESTM/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LMESTM/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-07-03T13:19:15Z",
    "updated_at": "2017-07-04T09:03:55Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\nThere have been 2 recent fixes where we needed to increase  sampling time of ADCs #4326 and #4641, \r\n\r\nThis raises the question of optionally configuring this sampling time from the application, for instance \r\nas MIN / MAX / DEFAULT or MEDIUM. That would require a modification of the AnalogIn.h API, whether in a new constructor variant or by adding a new method. "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4686",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4686/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4686/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4686/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4686",
    "id": 240033457,
    "number": 4686,
    "title": "UBLOX EVK NINA B1: mbed 5.5 regression on Serial class (nrf5)",
    "user": {
      "login": "NeilMacMullen",
      "id": 9131337,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9131337?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NeilMacMullen",
      "html_url": "https://github.com/NeilMacMullen",
      "followers_url": "https://api.github.com/users/NeilMacMullen/followers",
      "following_url": "https://api.github.com/users/NeilMacMullen/following{/other_user}",
      "gists_url": "https://api.github.com/users/NeilMacMullen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NeilMacMullen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NeilMacMullen/subscriptions",
      "organizations_url": "https://api.github.com/users/NeilMacMullen/orgs",
      "repos_url": "https://api.github.com/users/NeilMacMullen/repos",
      "events_url": "https://api.github.com/users/NeilMacMullen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NeilMacMullen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 39,
    "created_at": "2017-07-02T20:46:46Z",
    "updated_at": "2018-04-19T19:33:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "This code no longer echoes back received characters on 5.5 (commit c9e63f14085f5751ff5ead79a7c0382d50a813a2) although the initial \"LOOPBACK SERIAL\" message is shown.\r\n\r\n```\r\n`#include \"mbed.h\"\r\n \r\nint main()\r\n{\r\n  Serial *pc = new Serial(USBTX, USBRX);\r\n \r\n  pc->format(8, Serial::None, 1);\r\n  pc->set_flow_control(Serial::RTSCTS);\r\n  pc->baud(115200);\r\n  pc->printf(\"LOOPBACK SERIAL %d %d>>>>>>\\r\\n\",USBTX,USBRX);\r\n  while (1)\r\n  {\r\n    while (pc->readable())\r\n    {\r\n      char c = pc->getc();\r\n      pc->putc(c);\r\n    }\r\n    Thread::wait(10);\r\n  }\r\n}\r\n`\r\n```\r\n\r\n### Description\r\n- Type: Bug \r\n\r\n**Target**\r\nUBLOX_EVK_NINA_B1\r\n\r\n**Toolchain:**\r\nGCC_ARM"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4670",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4670/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4670/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4670/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4670",
    "id": 239480565,
    "number": 4670,
    "title": "No mbedTLS server support",
    "user": {
      "login": "sherrellbc",
      "id": 8580880,
      "avatar_url": "https://avatars0.githubusercontent.com/u/8580880?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sherrellbc",
      "html_url": "https://github.com/sherrellbc",
      "followers_url": "https://api.github.com/users/sherrellbc/followers",
      "following_url": "https://api.github.com/users/sherrellbc/following{/other_user}",
      "gists_url": "https://api.github.com/users/sherrellbc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sherrellbc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sherrellbc/subscriptions",
      "organizations_url": "https://api.github.com/users/sherrellbc/orgs",
      "repos_url": "https://api.github.com/users/sherrellbc/repos",
      "events_url": "https://api.github.com/users/sherrellbc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sherrellbc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 521940966,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tls",
        "name": "component: tls",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-06-29T13:33:54Z",
    "updated_at": "2017-07-03T07:28:03Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement | Question\r\n- Priority: Major\r\n----------------------------------------------------------------\r\n\r\n## Enhancement\r\n\r\nIt does not appear to be possible to host an mbedTLS SSL server on mbed-os. I found [this](https://github.com/ARMmbed/mbedtls/blob/development/programs/ssl/ssl_server.c) example on the mbedTLS Github page, but the code was written assuming a UNIX platform. \r\nSimilarly, there are no server examples over at [mbed-os-example-tls](https://github.com/ARMmbed/mbed-os-example-tls).\r\n\r\nAfter searching around a bit I have found the following:\r\n- [tls.mbed](https://tls.mbed.org/discussions/generic/compiling-problems) \r\n- [developer.mbed](https://developer.mbed.org/questions/69356/How-the-communication-between-client-ser/)\r\n- [developer.mbed](https://developer.mbed.org/questions/76079/mbedtls-linker-error/)\r\n\r\nAll pointing to there not being any server support for mbedTLS on mbed-os.\r\n\r\nA majority of the functionality necessary for implementing a server seems to be available in [net_sockets.c](https://github.com/ARMmbed/mbedtls/blob/development/library/net_sockets.c). Specifically, of course, [bind](https://github.com/ARMmbed/mbedtls/blob/development/library/net_sockets.c#L184) and [accept](https://github.com/ARMmbed/mbedtls/blob/development/library/net_sockets.c#L296). However, due to the [MBEDTLS_NET_C](https://github.com/ARMmbed/mbedtls/blob/development/library/net_sockets.c#L28) macro being undefined, essentially the entire file is excluded at compile-time. However, according to the [documentation](https://github.com/ARMmbed/mbedtls/blob/development/include/mbedtls/config.h#L2015-L2031) for this macro, it seems server support can be had with a little support from the platform. \r\n\r\nAm I overlooking mbedTLS server support or is it currently unimplemented. If unimplemented, is it planned?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4669",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4669/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4669/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4669/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4669",
    "id": 239477227,
    "number": 4669,
    "title": "feature request: Heap traces",
    "user": {
      "login": "jupe",
      "id": 3822425,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3822425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jupe",
      "html_url": "https://github.com/jupe",
      "followers_url": "https://api.github.com/users/jupe/followers",
      "following_url": "https://api.github.com/users/jupe/following{/other_user}",
      "gists_url": "https://api.github.com/users/jupe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jupe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jupe/subscriptions",
      "organizations_url": "https://api.github.com/users/jupe/orgs",
      "repos_url": "https://api.github.com/users/jupe/repos",
      "events_url": "https://api.github.com/users/jupe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jupe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 450730255,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/scope:%20feature",
        "name": "scope: feature",
        "color": "c2e0c6",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-06-29T13:23:29Z",
    "updated_at": "2017-07-03T07:31:10Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Related issue: #4573, ...\r\n- Priority: Major\r\n\r\n\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n[memory traces](https://github.com/ARMmbed/mbed-os/pull/2487) are good when analysing fragmentation or who is spending memory in very low level (caller level). But it doesn't tell anything about real heap usage or malloc overheads. memory traces are also very heavy because it prints line to stdout every time when some alloc (`malloc`, `free`, `realloc`,..) is called, so it cannot be activated in all cases, e.g. \"end-user\" applications which start failing if memory traces takes too much cpu/io time. \r\nThere is already API to fetch heap state but that is application level API - so application needs interaction to get heap state to get printed out.\r\n\r\n**Suggested enhancement**\r\nIf we could have similar feature than memory-trace, which prints heap state every time when it  changes so application doesn't need to care about it at all. This approach would be also much more light because heap state doesn't change so often compared to malloc calls (memory traces). Feature could be behind compile time flag so it doesn't affect performance if it is not activated.\r\n\r\nThis should be quite easy to implement in gcc at least.  IAR/armcc might be more complicated.\r\n\r\n**Pros**\r\n* allows to track heap consumption using [mbed-traces](armmbed/mbed-trace) \"in background\"\r\n* we could collect memory usage from every test applications without any changes to applications - just by activating it in compiling time (otherwise we have to create dedicated \"memory\" tests which tells memory consumption only for that use-case, nothing more)\r\n  * **all**  tests we have could benefits from this\r\n* tells exactly how much memory is needed for certain use-case\r\n* we could create common tools  (in host side) top of this feature\r\n* could fulfill memory-trace analyse results\r\n\r\n**Cons**\r\nsome work."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4651",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4651/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4651/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4651/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4651",
    "id": 238950324,
    "number": 4651,
    "title": "REALTEK_RTL8195AM compiles, but fails to flash in uvision",
    "user": {
      "login": "MarceloSalazar",
      "id": 1931553,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarceloSalazar",
      "html_url": "https://github.com/MarceloSalazar",
      "followers_url": "https://api.github.com/users/MarceloSalazar/followers",
      "following_url": "https://api.github.com/users/MarceloSalazar/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarceloSalazar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarceloSalazar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarceloSalazar/subscriptions",
      "organizations_url": "https://api.github.com/users/MarceloSalazar/orgs",
      "repos_url": "https://api.github.com/users/MarceloSalazar/repos",
      "events_url": "https://api.github.com/users/MarceloSalazar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarceloSalazar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620926933,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20realtek",
        "name": "devices: realtek",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2017-06-27T19:02:17Z",
    "updated_at": "2017-12-19T12:30:48Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "REALTEK_RTL8195AM compiles in uvision, but fails to find the correct target to flash to.\r\n\r\nmbed OS: `92fbf2a9b3988d430482fc25a6077f2462e2a634` (mbed OS 5.5)\r\nmbed CLI version: `1.1.1`\r\n\r\n```\r\n\".\\BUILD\\mbed-os-example-blinky.axf\" - 0 Error(s), 297 Warning(s).\r\nBuild Time Elapsed:  00:01:38\r\nLoad \"C:\\\\cygwin64\\\\home\\\\micray01\\\\mbed-os\\\\mbed-os-example-blinky\\\\BUILD\\\\mbed-os-example-blinky.axf\" \r\nNo Algorithm found for: 10006000H - 1000FFFFH\r\nNo Algorithm found for: 10010000H - 10016F83H\r\nErase skipped!\r\nError: Flash Download failed  -  \"Cortex-M3\"\r\nFlash Load finished at 17:34:35\r\n```\r\n\r\nIssue original raised here: https://github.com/ARMmbed/mbed-os-example-blinky/issues/62\r\n\r\n@mray19027 @0xc0170 "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4643",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4643/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4643/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4643/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4643",
    "id": 238805347,
    "number": 4643,
    "title": "Adding RTL8711, RTL8710",
    "user": {
      "login": "malachib",
      "id": 1586399,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1586399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/malachib",
      "html_url": "https://github.com/malachib",
      "followers_url": "https://api.github.com/users/malachib/followers",
      "following_url": "https://api.github.com/users/malachib/following{/other_user}",
      "gists_url": "https://api.github.com/users/malachib/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/malachib/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/malachib/subscriptions",
      "organizations_url": "https://api.github.com/users/malachib/orgs",
      "repos_url": "https://api.github.com/users/malachib/repos",
      "events_url": "https://api.github.com/users/malachib/events{/privacy}",
      "received_events_url": "https://api.github.com/users/malachib/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620926933,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20realtek",
        "name": "devices: realtek",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-06-27T10:27:33Z",
    "updated_at": "2017-11-22T05:47:45Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Question/Enhancement\r\n- Related issue: #4438 \r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\nI am excited to see Ameba support officially materializing in mbed-os!\r\nAny chance the RTL871x series are invited to the party?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4617",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4617/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4617/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4617/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4617",
    "id": 237841070,
    "number": 4617,
    "title": "A number of targets are not recognised in the online IDE",
    "user": {
      "login": "adbridge",
      "id": 11191917,
      "avatar_url": "https://avatars2.githubusercontent.com/u/11191917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adbridge",
      "html_url": "https://github.com/adbridge",
      "followers_url": "https://api.github.com/users/adbridge/followers",
      "following_url": "https://api.github.com/users/adbridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/adbridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adbridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adbridge/subscriptions",
      "organizations_url": "https://api.github.com/users/adbridge/orgs",
      "repos_url": "https://api.github.com/users/adbridge/repos",
      "events_url": "https://api.github.com/users/adbridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adbridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-06-22T13:12:49Z",
    "updated_at": "2017-06-22T15:14:26Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "The following targets are not recognised by the online IDE when trying to compile them.\r\n\r\n\"USENSE\"\r\n\"TB_SENSE_12\"\r\n\"DISCO_L475VG_IOT01A\" \r\n\"EFM32PG12_STK3402\"\r\n\"TB_SENSE_1\"\r\n\"UBRIDGE\"\r\n\"NRF52840_DK\"\r\n\"RO359B\"\r\n\"ARM_CM3DS_MPS2\"\r\n\"DISCO_L072CZ_LRWAN1\"\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4614",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4614/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4614/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4614/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4614",
    "id": 237810030,
    "number": 4614,
    "title": "OC_MBUINO target is incorrect defined",
    "user": {
      "login": "adbridge",
      "id": 11191917,
      "avatar_url": "https://avatars2.githubusercontent.com/u/11191917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adbridge",
      "html_url": "https://github.com/adbridge",
      "followers_url": "https://api.github.com/users/adbridge/followers",
      "following_url": "https://api.github.com/users/adbridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/adbridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adbridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adbridge/subscriptions",
      "organizations_url": "https://api.github.com/users/adbridge/orgs",
      "repos_url": "https://api.github.com/users/adbridge/repos",
      "events_url": "https://api.github.com/users/adbridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adbridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "screamerbg",
      "id": 5940648,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5940648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/screamerbg",
      "html_url": "https://github.com/screamerbg",
      "followers_url": "https://api.github.com/users/screamerbg/followers",
      "following_url": "https://api.github.com/users/screamerbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/screamerbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/screamerbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/screamerbg/subscriptions",
      "organizations_url": "https://api.github.com/users/screamerbg/orgs",
      "repos_url": "https://api.github.com/users/screamerbg/repos",
      "events_url": "https://api.github.com/users/screamerbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/screamerbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "screamerbg",
        "id": 5940648,
        "avatar_url": "https://avatars2.githubusercontent.com/u/5940648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/screamerbg",
        "html_url": "https://github.com/screamerbg",
        "followers_url": "https://api.github.com/users/screamerbg/followers",
        "following_url": "https://api.github.com/users/screamerbg/following{/other_user}",
        "gists_url": "https://api.github.com/users/screamerbg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/screamerbg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/screamerbg/subscriptions",
        "organizations_url": "https://api.github.com/users/screamerbg/orgs",
        "repos_url": "https://api.github.com/users/screamerbg/repos",
        "events_url": "https://api.github.com/users/screamerbg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/screamerbg/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-06-22T11:08:53Z",
    "updated_at": "2018-03-28T19:14:09Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n\r\nWhen trying to build blinky using the mbed library, the OC_MBUINO board fails to compile.\r\n\r\n- Bug \r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Toolchain:**\r\nARM using the online IDE API\r\n\r\n\r\n**Expected behavior**\r\nTarget compiles\r\n\r\n**Actual behavior**\r\nThe following error is produced:\r\n```\r\n   Library name 'platform' is not unique (defined in '/src/mbed/TARGET_OC_MBUINO/mbed_lib.json' and \r\n'/src/mbed/TARGET_LPC11U24/mbed_lib.json')\r\n```\r\n\r\n**Steps to reproduce**\r\nBuild OC_MBUINO using mbed in the online compiler\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4582",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4582/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4582/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4582/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4582",
    "id": 236660000,
    "number": 4582,
    "title": "Major Bug: LPC15XX Extended CAN Read Not working",
    "user": {
      "login": "sivasuren1",
      "id": 29503768,
      "avatar_url": "https://avatars3.githubusercontent.com/u/29503768?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sivasuren1",
      "html_url": "https://github.com/sivasuren1",
      "followers_url": "https://api.github.com/users/sivasuren1/followers",
      "following_url": "https://api.github.com/users/sivasuren1/following{/other_user}",
      "gists_url": "https://api.github.com/users/sivasuren1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sivasuren1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sivasuren1/subscriptions",
      "organizations_url": "https://api.github.com/users/sivasuren1/orgs",
      "repos_url": "https://api.github.com/users/sivasuren1/repos",
      "events_url": "https://api.github.com/users/sivasuren1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sivasuren1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-06-17T13:15:27Z",
    "updated_at": "2017-08-10T02:56:01Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\nBug-Major \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nLPC15XX\r\n\r\n**Toolchain:**\r\nARM\r\n**Expected behavior**\r\nWhen I issue a command in normal (CANStandard) I get a a response. However When I send by CAN Extended, the ISR fires but can.read returns 0. We tried the same code on LCP1768 and it works fine\r\n\r\nOur CAN Similator shows that it responds the same way with boht LPC1768 and LCP1549 but the code in LPC1549 doesnt not read it\r\n\r\n**Actual behavior**\r\nCAN.READ() issues a 0 instead of. \r\n\r\n**Steps to reproduce**\r\nCode\r\n```cpp\r\nCAN can2(P0_22, P0_23);\r\nSerial serialPort(USBTX, USBRX);\r\nCANMessage msg;\r\n\r\nchar counter = 0;\r\nchar can_msg[8];\r\nvoid setCanMessage(char* _cmd);\r\n\r\nvoid setCanMessage(char* _cmd)\r\n{\r\n    can_msg[0] = 2;\r\n    can_msg[1] = 1;\r\n    can_msg[2] = 13;\r\n    can_msg[3] = 0;\r\n    can_msg[4] = 0;\r\n    can_msg[5] = 0;\r\n    can_msg[6] = 0;\r\n    can_msg[7] = 0;\r\n}\r\n\r\n\r\nvoid send()\r\n{\r\n    setCanMessage(\"010D\");\r\n\r\n    can2.reset();\r\n    can2.frequency(500000);\r\n\r\n\r\n    if (can2.write(CANMessage(PID_REQUEST,can_msg,8,CANData,CANExtended))) {\r\n        printf(\"Message sent\\r\\n\");\r\n    }\r\n}\r\n\r\nvoid canRead()\r\n{\r\n        CANMessage canMessage;\r\n        can2.read(canMessage);\r\n        serialPort.printf(\"%02X\\r\\n\",canMessage.len);\r\n        for (int i = 0; i < (int)canMessage.len; i++) {\r\n            serialPort.printf(\"%02X\",canMessage.data[i]);\r\n        }\r\n        char *message = (char *)\"\\r\\nCAN RX IRQ\\r\\n\\0\";\r\n        serialOut(message);\r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n    can2.attach(canRead);\r\n    while(1) {\r\n        serialPort.printf(\"loop()\\r\\n\");\r\n        send();\r\n        wait(2);\r\n    }\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4574",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4574/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4574/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4574/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4574",
    "id": 236494901,
    "number": 4574,
    "title": "HAL: specify what flow control is",
    "user": {
      "login": "pan-",
      "id": 409941,
      "avatar_url": "https://avatars3.githubusercontent.com/u/409941?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pan-",
      "html_url": "https://github.com/pan-",
      "followers_url": "https://api.github.com/users/pan-/followers",
      "following_url": "https://api.github.com/users/pan-/following{/other_user}",
      "gists_url": "https://api.github.com/users/pan-/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pan-/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pan-/subscriptions",
      "organizations_url": "https://api.github.com/users/pan-/orgs",
      "repos_url": "https://api.github.com/users/pan-/repos",
      "events_url": "https://api.github.com/users/pan-/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pan-/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-06-16T14:12:25Z",
    "updated_at": "2017-06-30T16:20:10Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Enhancement\r\n- Priority: Major\r\n\r\n## Enhancement\r\n\r\nThe function [`serial_set_flow_control`](https://github.com/ARMmbed/mbed-os/blob/master/hal/serial_api.h#L220) enable hardware flow control of the serial port but there is no description of what flow control is. \r\n\r\nThe lack of specification is detrimental for coherence of the platform because the HAL maintainer is free to interpret what flow control is/should be. \r\n\r\nIncoherence between ports is already in the code base, for instance, on the `NRF52` based targets, the line CTS/RTS are active low while on the `MAXIM32630` target those lines are active high. \r\n\r\n**Suggested enhancement**\r\n\r\n* Define polarity of control flow line; maybe a function to configure it can also be added.\r\n* Detail what rxflow and txflow are and how they are supposed to work.\r\n* Add (hardware) tests verifying the compliance of a port with the specification\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4573",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4573/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4573/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4573/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4573",
    "id": 236459278,
    "number": 4573,
    "title": "Heap tracking hook",
    "user": {
      "login": "RobMeades",
      "id": 6726745,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6726745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RobMeades",
      "html_url": "https://github.com/RobMeades",
      "followers_url": "https://api.github.com/users/RobMeades/followers",
      "following_url": "https://api.github.com/users/RobMeades/following{/other_user}",
      "gists_url": "https://api.github.com/users/RobMeades/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RobMeades/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RobMeades/subscriptions",
      "organizations_url": "https://api.github.com/users/RobMeades/orgs",
      "repos_url": "https://api.github.com/users/RobMeades/repos",
      "events_url": "https://api.github.com/users/RobMeades/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RobMeades/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-06-16T11:43:35Z",
    "updated_at": "2017-12-13T20:16:27Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "## Enhancement\r\n\r\nWhen working in a constrained environment (e.g. NXP1768) with increasingly large applications (e.g. mbedClient), being able to track what's happening to the available RAM is really important.  The current [run-time stats](https://docs.mbed.com/docs/mbed-os-handbook/en/5.2/advanced/runtime_stats/) are good but not _quite_ good enough: one can add calls to `mbed_stats_heap_get()` throughout the visible code, but that does not account for the stuff that happens in libraries and, also, it does not allow you to see what that last fatal failed `malloc()` that triggered the \"Operator new out of memory\" was for: was it a few 10's of bytes, easy to free up, or was it for a 4k block, in which case give up and go home?\r\n\r\nWhat would be useful for these situations, as @0xc0170 suggested, is a hook into `malloc()` and `free()` allowing each attempt to deploy heap to be logged by the user.  Then you can really see what's happening and decide whether it's time to go home or not."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4569",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4569/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4569/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4569/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4569",
    "id": 236225251,
    "number": 4569,
    "title": "Radio and UART interrupt on NRF52-DK",
    "user": {
      "login": "hesolium",
      "id": 19782188,
      "avatar_url": "https://avatars2.githubusercontent.com/u/19782188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hesolium",
      "html_url": "https://github.com/hesolium",
      "followers_url": "https://api.github.com/users/hesolium/followers",
      "following_url": "https://api.github.com/users/hesolium/following{/other_user}",
      "gists_url": "https://api.github.com/users/hesolium/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hesolium/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hesolium/subscriptions",
      "organizations_url": "https://api.github.com/users/hesolium/orgs",
      "repos_url": "https://api.github.com/users/hesolium/repos",
      "events_url": "https://api.github.com/users/hesolium/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hesolium/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-06-15T15:15:20Z",
    "updated_at": "2017-06-16T07:49:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I report this problem here although this may be the case for Nordic Semiconductor engineers.\r\n\r\nI use both radio (ESB mode) and UART for communication. I noticed that there are problems with the simultaneous use of the radio and the console (MBED Serial class). As a result, I stopped using the console and started direct using UARTE with easy-dma support. Works fine with one exception. Radio (listening) somehow disable UARTE interrupt and does not enable after the end of its operation. I had to make an artificial (for me:) fix. Any use of UARTE (start of transmission or reception) must be preceded by NVIC_EnableIRQ for UARTE interrupt (No. 2). Without this fix transmission and reception of data from the UARTE will freeze. No interrupts are generated, but the requested operations (i.e. transmit) are performed by easy-dma. The same problem is with the Serial class. Radio disable the (UART) interrupt and not enable after completed task. Is this a problem with software or hardware (MCU)? Any cure?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4564",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4564/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4564/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4564/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4564",
    "id": 236108388,
    "number": 4564,
    "title": "cant debug threads on mbedos 5.5",
    "user": {
      "login": "orenc17",
      "id": 17570086,
      "avatar_url": "https://avatars0.githubusercontent.com/u/17570086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/orenc17",
      "html_url": "https://github.com/orenc17",
      "followers_url": "https://api.github.com/users/orenc17/followers",
      "following_url": "https://api.github.com/users/orenc17/following{/other_user}",
      "gists_url": "https://api.github.com/users/orenc17/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/orenc17/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/orenc17/subscriptions",
      "organizations_url": "https://api.github.com/users/orenc17/orgs",
      "repos_url": "https://api.github.com/users/orenc17/repos",
      "events_url": "https://api.github.com/users/orenc17/events{/privacy}",
      "received_events_url": "https://api.github.com/users/orenc17/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-06-15T08:04:09Z",
    "updated_at": "2017-06-16T16:29:55Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Hi\r\ni'm debuging threads with eclipse and pyocd on the mbedos-5.5-rc2 tag\r\nand it seems that eclipse cant tell the difference between the different threads\r\ni'm currently debuging on K64F compiled with GCC_ARM 6\r\n\r\nthis wasn't a problem with 5.4.x\r\n\r\nThanks"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4551",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4551/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4551/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4551/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4551",
    "id": 235818315,
    "number": 4551,
    "title": "Mbed (callback) documentation",
    "user": {
      "login": "Sissors",
      "id": 5982704,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5982704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sissors",
      "html_url": "https://github.com/Sissors",
      "followers_url": "https://api.github.com/users/Sissors/followers",
      "following_url": "https://api.github.com/users/Sissors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sissors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sissors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sissors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sissors/orgs",
      "repos_url": "https://api.github.com/users/Sissors/repos",
      "events_url": "https://api.github.com/users/Sissors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sissors/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-06-14T09:31:20Z",
    "updated_at": "2017-06-19T18:41:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "- Type: Enhancement\r\n- Priority: Major\r\n\r\n-----------------------------------------------------------------\r\n\r\nThis is a two part request / question / feedback:\r\n\r\nSpecifically I started with my WakeUp library, where I wanted to remove the compilation warnings from the FunctionPointer I used there, so I had to switch to the Callback template. No problem, well except the problem: How? I at least knew I needed the Callback function, but finding documentation for it proved to be impossible. Maybe it is hidden somewhere, but I could not find it. \r\nSo we just go to the source code, close to 5000 lines of code: https://github.com/ARMmbed/mbed-os/blob/master/platform/Callback.h. Of course not all of them are relevant to what I need, but despite being familiar with both mbed and basic usage of templates, I quickly gave that up. In the end I copied the implementation from the Ticker.h file. Which of course is perfectly fine, but something that is a pretty basic function users would want to add to a library should not require me to search through the source code of mbed on how to implement it.\r\n\r\nNext I tried if it compiled, and attaching a member function took me 3 attempts before I had the correct syntax. Also that should be better documented somewhere. \r\n\r\n\r\nThen the second part: The documentation in general. I cannot find it anymore (and that might tell enough in itself), but I remember what the old \"about mbed\" page said. Something regarding how it started with how much effort it was for an intern to get started on a simple microcontroller design. Now I realise that the focus of mbed shifted more to the professionals, but is that simply intern also supposed to be able to use it, or should he/she just shift to an Arduino?\r\n\r\nThis is just one example, but lets say the intern wants to make a PWM signal. The old documentation wasn't perfect (and mainly really outdated with references only to the LPC1768, LPC11u24 and KL25z). But to start with, the new documentation requires quite a bit more searching before you even end up on the PWM page. At which point it starts with:\r\n\"Use the PwmOut interface to control the frequency and mark-to-space ratio of a digital pulse train.\"\r\n\r\nmark-to-space ratio? Lets just call it dutycyle / pulse width. Next is the API documentation. Well the API, it is just a copy of the .h file. Filled with things where your intern really won't understand what they are about. The Ticker page for example does have an actual API, although there the DEPRECATED warning messages shout through everything. And things like protected member stuff really does not need to be visible on that page, only the public functions.\r\n\r\nSo I would summarize it as: Please get a first year intern, and let him make a simple setup. And then track how much he can actually use the mbed documentation. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4550",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4550/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4550/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4550/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4550",
    "id": 235803017,
    "number": 4550,
    "title": "Boot sequence mbed SDK + RTX documentation missing",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-06-14T08:36:05Z",
    "updated_at": "2017-06-21T13:31:50Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\nThe new boot sequence for mbed OS is nicely documented in the mbed boot code file https://github.com/ARMmbed/mbed-os/blob/master/rtos/mbed_boot.c#L17. The same can be done for mbed 2 (plus how it is changed when RTX is included) - this has separate boot sequence in mbed_sdk_boot code file https://github.com/ARMmbed/mbed-os/blob/master/platform/mbed_sdk_boot.c\r\n\r\ncc @LMESTM thanks for raising this"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4512",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4512/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4512/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4512/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/4512",
    "id": 234722240,
    "number": 4512,
    "title": "Decimal part of both Humidity value and Pressure value are removed at BLE EnvironmentalService ",
    "user": {
      "login": "soramame21",
      "id": 17120422,
      "avatar_url": "https://avatars0.githubusercontent.com/u/17120422?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soramame21",
      "html_url": "https://github.com/soramame21",
      "followers_url": "https://api.github.com/users/soramame21/followers",
      "following_url": "https://api.github.com/users/soramame21/following{/other_user}",
      "gists_url": "https://api.github.com/users/soramame21/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soramame21/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soramame21/subscriptions",
      "organizations_url": "https://api.github.com/users/soramame21/orgs",
      "repos_url": "https://api.github.com/users/soramame21/repos",
      "events_url": "https://api.github.com/users/soramame21/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soramame21/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515545581,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20ble",
        "name": "component: ble",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-06-09T05:04:39Z",
    "updated_at": "2017-06-14T03:14:26Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "It's an issue of BLE feature. \r\nBLE **EnvironmentalService** removed decimal part of both Humidity value and Pressure value before sending. only temperature value can be sent correctly with decimal part.\r\n**EnvironmentalService** includes following 3 characterisitics.\r\n1.  temperature\r\n2.  humidity\r\n3.  pressure\r\n\r\n### Description\r\n- Type: Bug\r\n- Related issue: \r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Tested Target**\r\nTY51822r3,  it can be reproduced on any targets with a BLE shield.\r\n\r\n**Expected behavior**\r\nBoth Humidity value and Pressure value are sent with decimal part.\r\n**Actual behavior**\r\nDecimal part of  Humidity and Pressure cannot be sent correctly. \r\n**Steps to reproduce**\r\nJust calling API updateHumidity() and updatePressure()\r\n**How to fixed**\r\nChanged input value type from **HumidityType_t**, **PressureType_t** to **float**\r\nPlease look attached diff file.\r\n[ren_diff0609.txt](https://github.com/ARMmbed/mbed-os/files/1063033/ren_diff0609.txt)\r\n\r\n"
  }
]
