[
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/974",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/974/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/974/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/974/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/974",
    "id": 62126058,
    "number": 974,
    "title": "[export] add gcc/uvision templates for RedBearLab nRF51822.",
    "user": {
      "login": "explora26",
      "id": 5006945,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5006945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/explora26",
      "html_url": "https://github.com/explora26",
      "followers_url": "https://api.github.com/users/explora26/followers",
      "following_url": "https://api.github.com/users/explora26/following{/other_user}",
      "gists_url": "https://api.github.com/users/explora26/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/explora26/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/explora26/subscriptions",
      "organizations_url": "https://api.github.com/users/explora26/orgs",
      "repos_url": "https://api.github.com/users/explora26/repos",
      "events_url": "https://api.github.com/users/explora26/events{/privacy}",
      "received_events_url": "https://api.github.com/users/explora26/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-16T16:01:03Z",
    "updated_at": "2015-03-16T16:09:59Z",
    "closed_at": "2015-03-16T16:09:59Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/974",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/974",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/974.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/974.patch"
    },
    "body": "Fix the issue #638  \n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/973",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/973/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/973/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/973/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/973",
    "id": 62099983,
    "number": 973,
    "title": "[HRM1017] Fix the incorrect softdevice path.",
    "user": {
      "login": "explora26",
      "id": 5006945,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5006945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/explora26",
      "html_url": "https://github.com/explora26",
      "followers_url": "https://api.github.com/users/explora26/followers",
      "following_url": "https://api.github.com/users/explora26/following{/other_user}",
      "gists_url": "https://api.github.com/users/explora26/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/explora26/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/explora26/subscriptions",
      "organizations_url": "https://api.github.com/users/explora26/orgs",
      "repos_url": "https://api.github.com/users/explora26/repos",
      "events_url": "https://api.github.com/users/explora26/events{/privacy}",
      "received_events_url": "https://api.github.com/users/explora26/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-16T14:36:31Z",
    "updated_at": "2015-03-16T16:09:45Z",
    "closed_at": "2015-03-16T16:09:45Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/973",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/973",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/973.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/973.patch"
    },
    "body": "explora26@i5-GA-H77:/tmp/BLE_iBeacon$ make merge \nsrec_cat mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s110_nrf51822_7_0_0/s110_nrf51822_7.0.0_softdevice.hex -intel BLE_iBeacon.hex -intel -o combined.hex -intel --line-length=44\nsrec_cat:\n    mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s110_nrf51822_7_0_0/s110_nrf51822_7.0.0_softdevice.hex:\n    open: No such file or directory\nmake: **\\* [merge] Error 1\n\nThe softdevice path is incorrect\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/972",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/972/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/972/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/972/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/972",
    "id": 62086297,
    "number": 972,
    "title": "[NUCLEO_L073RZ] Add new target",
    "user": {
      "login": "bcostm",
      "id": 5803932,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5803932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bcostm",
      "html_url": "https://github.com/bcostm",
      "followers_url": "https://api.github.com/users/bcostm/followers",
      "following_url": "https://api.github.com/users/bcostm/following{/other_user}",
      "gists_url": "https://api.github.com/users/bcostm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bcostm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bcostm/subscriptions",
      "organizations_url": "https://api.github.com/users/bcostm/orgs",
      "repos_url": "https://api.github.com/users/bcostm/repos",
      "events_url": "https://api.github.com/users/bcostm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bcostm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-16T13:46:07Z",
    "updated_at": "2015-03-20T09:06:40Z",
    "closed_at": "2015-03-20T09:06:37Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/972",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/972",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/972.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/972.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/971",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/971/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/971/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/971/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/971",
    "id": 62058502,
    "number": 971,
    "title": "Added to option --auto handler for -f <mcu> filter switch. ",
    "user": {
      "login": "PrzemekWirkus",
      "id": 6360720,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6360720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PrzemekWirkus",
      "html_url": "https://github.com/PrzemekWirkus",
      "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
      "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
      "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
      "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
      "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
      "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-16T12:05:25Z",
    "updated_at": "2015-03-16T14:04:30Z",
    "closed_at": "2015-03-16T14:04:25Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/971",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/971",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/971.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/971.patch"
    },
    "body": "# Description\n\nNow using `-f` switch will filter target platforms to test when you use for example auto-detection (`--auto` option). Use comma to pass more MCU names to `-f` filter.\nYou can't apply regular expression on names, only give full platform name!\n\nFor system connected with two boards: `NUCLEO_L053R8` and `KL25Z` we can check configuration (using switch `--config`):\nWe can see both boards are detected and we will test both of them if test suite will be executed without `-O` or `--config` option.\n\n```\n$ singletest.py --auto --config\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected NUCLEO_L053R8, port: COM35, mounted: E:\nMBEDLS: Detected KL25Z, port: COM89, mounted: F:\nMUTs configuration in auto-detected:\n+-------+-------------+---------------+------+-------+\n| index | peripherals | mcu           | disk | port  |\n+-------+-------------+---------------+------+-------+\n| 1     |             | NUCLEO_L053R8 | E:   | COM35 |\n| 2     |             | KL25Z         | F:   | COM89 |\n+-------+-------------+---------------+------+-------+\n\nTest specification in auto-detected:\n+---------------+-----+------+\n| mcu           | ARM | uARM |\n+---------------+-----+------+\n| KL25Z         | Yes | -    |\n| NUCLEO_L053R8 | -   | Yes  |\n+---------------+-----+------+\n```\n\nBuilding original configuration (no filter):\n\n```\n$ singletest.py --auto -j 8 -O\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected NUCLEO_L053R8, port: COM35, mounted: E:\nMBEDLS: Detected KL25Z, port: COM89, mounted: F:\nBuilding library CMSIS (KL25Z, ARM)\nBuilding library MBED (KL25Z, ARM)\nBuilding project DETECT (KL25Z, ARM)\n.\n.\n.\nBuilding library CMSIS (NUCLEO_L053R8, uARM)\nBuilding library MBED (NUCLEO_L053R8, uARM)\nBuilding project DETECT (NUCLEO_L053R8, uARM)\n.\n.\n.\nCompleted in 3.68 sec\n```\n\nFiltering out other boards and checking configuration, leaving KL25Z:\n\n```\n$ singletest.py --auto -j 8 -O -f KL25Z --config\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected NUCLEO_L053R8, port: COM35, mounted: E:\nMBEDLS: Detected KL25Z, port: COM89, mounted: F:\nMUTs configuration in auto-detected:\n+-------+-------------+-------+------+-------+\n| index | peripherals | mcu   | disk | port  |\n+-------+-------------+-------+------+-------+\n| 2     |             | KL25Z | F:   | COM89 |\n+-------+-------------+-------+------+-------+\n\nTest specification in auto-detected:\n+-------+-----+\n| mcu   | ARM |\n+-------+-----+\n| KL25Z | Yes |\n+-------+-----+\n```\n\nBuilding original configuration (with applied filter):\n\n```\n$ singletest.py --auto -j 8 -O -f KL25Z\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected NUCLEO_L053R8, port: COM35, mounted: E:\nMBEDLS: Detected KL25Z, port: COM89, mounted: F:\nBuilding library CMSIS (KL25Z, ARM)\nBuilding library MBED (KL25Z, ARM)\nBuilding project DETECT (KL25Z, ARM)\n.\n.\n.\nCompleted in 1.33 sec\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/970",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/970/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/970/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/970/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/970",
    "id": 61617622,
    "number": 970,
    "title": "NO PORT_I in the file ? mbed/libraries/mbed/targets/hal/TARGET_STM/TARGET_STM32F4XX/PinNames.h      ",
    "user": {
      "login": "idodoyo",
      "id": 8999156,
      "avatar_url": "https://avatars3.githubusercontent.com/u/8999156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/idodoyo",
      "html_url": "https://github.com/idodoyo",
      "followers_url": "https://api.github.com/users/idodoyo/followers",
      "following_url": "https://api.github.com/users/idodoyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/idodoyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/idodoyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/idodoyo/subscriptions",
      "organizations_url": "https://api.github.com/users/idodoyo/orgs",
      "repos_url": "https://api.github.com/users/idodoyo/repos",
      "events_url": "https://api.github.com/users/idodoyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/idodoyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-03-14T14:22:08Z",
    "updated_at": "2017-01-10T23:47:06Z",
    "closed_at": "2017-01-10T23:47:06Z",
    "author_association": "NONE",
    "body": "NO PORT_I??\n\n```\ntypedef enum {\n    // STM32 Pin Names\n    PA_0 = 0, PA_1, PA_2, PA_3, PA_4, PA_5, PA_6, PA_7, PA_8, PA_9, PA_10, PA_11, PA_12, PA_13, PA_14, PA_15,\n    PB_0, PB_1, PB_2, PB_3, PB_4, PB_5, PB_6, PB_7, PB_8, PB_9, PB_10, PB_11, PB_12, PB_13, PB_14, PB_15,\n    PC_0, PC_1, PC_2, PC_3, PC_4, PC_5, PC_6, PC_7, PC_8, PC_9, PC_10, PC_11, PC_12, PC_13, PC_14, PC_15,\n    PD_0, PD_1, PD_2, PD_3, PD_4, PD_5, PD_6, PD_7, PD_8, PD_9, PD_10, PD_11, PD_12, PD_13, PD_14, PD_15,\n    PE_0, PE_1, PE_2, PE_3, PE_4, PE_5, PE_6, PE_7, PE_8, PE_9, PE_10, PE_11, PE_12, PE_13, PE_14, PE_15,\n    PF_0, PF_1, PF_2, PF_3, PF_4, PF_5, PF_6, PF_7, PF_8, PF_9, PF_10, PF_11, PF_12, PF_13, PF_14, PF_15,\n    PH_0, PH_1, PH_2, PH_3, PH_4, PH_5, PH_6, PH_7, PH_8, PH_9, PH_10, PH_11,\n\n    LED1        = PD_13,\n    LED2        = PD_12,\n    LED3        = PD_13,\n    LED4        = PD_12,\n    LED5        = PD_14,\n    LED6        = PD_15,\n\n    // Not connected\n    NC = (int)0xFFFFFFFF\n} PinName;\n```\n\nEdited by 0xc0170: use markdown syntax for code highlighting.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/969",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/969/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/969/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/969/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/969",
    "id": 61027301,
    "number": 969,
    "title": "Update pin mapping form ODIN and C029",
    "user": {
      "login": "mazgch",
      "id": 5808299,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5808299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mazgch",
      "html_url": "https://github.com/mazgch",
      "followers_url": "https://api.github.com/users/mazgch/followers",
      "following_url": "https://api.github.com/users/mazgch/following{/other_user}",
      "gists_url": "https://api.github.com/users/mazgch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mazgch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mazgch/subscriptions",
      "organizations_url": "https://api.github.com/users/mazgch/orgs",
      "repos_url": "https://api.github.com/users/mazgch/repos",
      "events_url": "https://api.github.com/users/mazgch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mazgch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-13T10:03:21Z",
    "updated_at": "2015-03-13T10:37:27Z",
    "closed_at": "2015-03-13T10:37:27Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/969",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/969",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/969.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/969.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/968",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/968/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/968/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/968/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/968",
    "id": 60966923,
    "number": 968,
    "title": "FRDM_K64F, SPI MODE 3, MOSI error",
    "user": {
      "login": "z1z2",
      "id": 7046470,
      "avatar_url": "https://avatars0.githubusercontent.com/u/7046470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/z1z2",
      "html_url": "https://github.com/z1z2",
      "followers_url": "https://api.github.com/users/z1z2/followers",
      "following_url": "https://api.github.com/users/z1z2/following{/other_user}",
      "gists_url": "https://api.github.com/users/z1z2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/z1z2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/z1z2/subscriptions",
      "organizations_url": "https://api.github.com/users/z1z2/orgs",
      "repos_url": "https://api.github.com/users/z1z2/repos",
      "events_url": "https://api.github.com/users/z1z2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/z1z2/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-13T02:46:25Z",
    "updated_at": "2015-05-22T09:50:53Z",
    "closed_at": "2015-05-22T09:50:53Z",
    "author_association": "NONE",
    "body": "In the following example, I supposed to send 170 ( 0xAA), but received 171. It seems that the MOSI jumps up too early and makes the LSB always be \"1\". How can I solve the problem?\n\n![Image](http://developer.mbed.org/media/uploads/zhyena/frdm_k64f_spi_mode3.png.pagespeed.ce.72NOKkkrQM.png)\n\n``` C\n#include \"mbed.h\"\n\nSPI device(PTD6,NC,PTD5);\n\nint main() {\n    int i = 0;\n    device.format(8,3);\n    while(1) {\n        device.write(0x55);\n        device.write(0xAA);\n        wait(1);\n    }\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/967",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/967/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/967/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/967/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/967",
    "id": 60841205,
    "number": 967,
    "title": "Host test minor shell plugin update and bugfix",
    "user": {
      "login": "PrzemekWirkus",
      "id": 6360720,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6360720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PrzemekWirkus",
      "html_url": "https://github.com/PrzemekWirkus",
      "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
      "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
      "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
      "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
      "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
      "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-12T15:53:11Z",
    "updated_at": "2015-03-13T15:30:42Z",
    "closed_at": "2015-03-13T15:29:47Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/967",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/967",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/967.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/967.patch"
    },
    "body": "# Description:\n1. Host test shell plugin bugfix:\n   Test suite should report IOERR_COPY when shell copy command fails (fixed).\n2. Host test shell plugin update\n   How you can specify with option -c value 'shell' and copy plugin will detect\n   for you your OS and choose between 'cp' (for 'posix') and 'copy' (for\n   Windows).\n## Usage\n\nUse switch `-c` with parameter `shell` to auto-detect your OS and preferred command line copy method:\n- `cp` for POSIX.\n- `copy` for Windows.\n  Example:\n\n```\n$ singletest.py ... -c shell\n```\n# Testing\n\nNote that if host test copy plugin detects command line error, test suite doesn't get error result:\n\n```\ncp: cannot create regular file `E:sd.bin': No such file or directory\nPlugin error: HostTestPluginCopyMethod_Shell::CopyMethod: [ret=1] Command: ['cp', 'C:\\\\Work\\\\mbed\\\\build\\\\test\\\\NUCLEO_L053R8\\\\uARM\\\\MBED_A12\\\\sd.bin', 'E:sd.bin']\n```\n## Fix applied\n\n```\n$ singletest.py --auto -n MBED_A12 -p SD -c cp -v\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected NUCLEO_L053R8, port: COM35, mounted: E:\nBuilding library CMSIS (NUCLEO_L053R8, uARM)\n.\n.\nExecuting 'python host_test.py -d E: -f \"C:\\Work\\mbed-przemek\\build\\test\\NUCLEO_L053R8\\uARM\\MBED_A12\\sd.bin\" -p COM35 -t 15 -C 1.5 -c cp -m NUCLEO_L053R8'\nTest::Output::Start\nMBED: Instrumentation: \"COM35\" and disk: \"E:\"\nHOST: Copy image onto target...\ncp: cannot create regular file `E:sd.bin': No such file or directory\nPlugin error: HostTestPluginCopyMethod_Shell::CopyMethod: [ret=1] Command: ['cp', 'C:\\\\Work\\\\mbed-przemek\\\\build\\\\test\\\\NUCLEO_L053R8\\\\uARM\\\\MBED_A12\\\\sd.bin', 'E:sd.bin']\n\n{{ioerr_copy}}\n{{end}}\nTest::Output::Finish\nTargetTest::NUCLEO_L053R8::uARM::MBED_A12::SD File System [IOERR_COPY] in 1.86 of 15 sec\nTest summary:\n+------------+---------------+-----------+----------+------------------+--------------------+---------------+-------+\n| Result     | Target        | Toolchain | Test ID  | Test Description | Elapsed Time (sec) | Timeout (sec) | Loops |\n+------------+---------------+-----------+----------+------------------+--------------------+---------------+-------+\n| IOERR_COPY | NUCLEO_L053R8 | uARM      | MBED_A12 | SD File System   |        1.86        |       15      |  0/1  |\n+------------+---------------+-----------+----------+------------------+--------------------+---------------+-------+\nResult: 1 IOERR_COPY\n\nCompleted in 2.55 sec\n```\n## Before fix, test continues even copy command failed:\n\n```\n$ singletest.py --auto -n MBED_A12 -p SD -v -c cp\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected NUCLEO_L053R8, port: COM35, mounted: E:\nBuilding library CMSIS (NUCLEO_L053R8, uARM)\n.\n.\nExecuting 'python host_test.py -d E: -f \"C:\\Work\\mbed\\build\\test\\NUCLEO_L053R8\\uARM\\MBED_A12\\sd.bin\" -p COM35 -t 15 -C 1.5 -c cp -m NUCLEO_L053R8'\nTest::Output::Start\nMBED: Instrumentation: \"COM35\" and disk: \"E:\"\nHOST: Copy image onto target...\ncp: cannot create regular file `E:sd.bin': No such file or directory\nPlugin error: HostTestPluginCopyMethod_Shell::CopyMethod: [ret=1] Command: ['cp', 'C:\\\\Work\\\\mbed\\\\build\\\\test\\\\NUCLEO_L053R8\\\\uARM\\\\MBED_A12\\\\sd.bin', 'E:sd.bin']\nHOST: Initialize serial port...\nHOST: Reset target...\nHOST: Property 'timeout' = '15'\nHOST: Property 'host_test_name' = 'default_auto'\nHOST: Property 'description' = 'SD File System'\nHOST: Property 'test_id' = 'MBED_A12'\nHOST: Start test...\nSD: Writing ... No disk, or could not put SD card in to SPI idle state\nFail to initialize card\n[FAIL]\nSD: Reading data ... No disk, or could not put SD card in to SPI idle state\nFail to initialize card\n[FAIL]\n{{failure}}\n{{end}}\nTest::Output::Finish\nTargetTest::NUCLEO_L053R8::uARM::MBED_A12::SD File System [FAIL] in 1.35 of 15 sec\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/966",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/966/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/966/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/966/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/966",
    "id": 60795548,
    "number": 966,
    "title": "Experimental parallel test execution on MUTs (option --parallel), v2",
    "user": {
      "login": "PrzemekWirkus",
      "id": 6360720,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6360720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PrzemekWirkus",
      "html_url": "https://github.com/PrzemekWirkus",
      "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
      "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
      "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
      "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
      "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
      "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-12T10:05:21Z",
    "updated_at": "2015-03-12T10:35:07Z",
    "closed_at": "2015-03-12T10:35:07Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/966",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/966",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/966.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/966.patch"
    },
    "body": "# Description\n\nAdded new experimental feature: thread model for function `SingleTest::execute()` where for each target we have separate thread.\n\nCurrently we are only building in parallel mbed SDK and libraries with dependencies.\nEach unique MUT (mbed under test) is flashed separately one by one, but with this new feature we are able to flash multiple boards at the same time, run test case on hardware and get results in parallel.\n\nTest execution time is reduced by `n` where `n` is number of MUTs (MUT: mbed under test).\n## Rationale & limitations\n\nWe can experiment with usage of `--auto` and CI systems. Assuming that we are performing testing on `n` unique mbed platforms we can gain almost `n` folt test execution acceleration by flashing, executing and grabbing test results from each board at the same time.\n\nNote: this extension works also with `--auto` feature added by non-public (yet) `mbed-ls` auto-detection module.\n\nNote: Building still will take some time so we are not accelerating building process which already is accelerated by multi-core compilation feature (`-j` switch). You can combine `-j` and `--parallel` to really messw ith your CPUs silicone ;-)\n\nNote: We want to explore new testing possibilities with existing test suite before we enable them for mbed 3.0 test suite.\n# Usage\n\nTo test in parallel with old sytle of configuration:\n\n```\n$ singletest.py singletest.py -i test_spec.json -M muts_all.json --parallel\n```\n\nTo test only detected by `mbed-ls` boards.\n\n```\n$ singletest.py --auto --tc ARM,GCC_ARM --parallel\n```\n## Limitations\n\nFor now if we connect two boards of the same type, for example two Freedom K46F boards to our system test suite (`singletest.py`) will assume that we are testing only for one of the targets. Mbed-ls feeds `singletest.py` with information about all targets but as above only one board of the same type will be tested.\n**This limitation will be removed in future versions of test suite***.\n\nUsing `--parallel` means that:\n- separate thread will be spawned to build mbed SDK and dependencied (libraries)\n  for each unique target with all declared toolchains.\n  E.g:\n\n```\n        Thread(n==1):   LPC1768:    ARM, uARM, GCC_ARM\n        Thread(n==2):   K64F:       ARM, GCC_ARM\n        Thread(n==3):   NUCLEO_X:   uARM\n        Thread(n==4):   NUCLEO_Y:   uARM\n        Thread(n==5):   NUCLEO_Z:   uARM\n```\n\n```\nExample:\nn == 5 if 5 types of MUTs connected to host computer:\n    E.g. LPC1768, K64F, NUCLEO_X, NUCLEO_Y, NUCLEO_Z.\n\nThread model for n == 5\n```\n\n```\n    Thread(1): for toolchain in LPC1768[toolchains]\n               -> build mbed SDK\n                -> build libs\n                 -> build project\n                  -> run MUT testrunner\n                    return test results for LPC1768[toolchain]\n    .\n    .\n    .\n    Thread(4): for toolchain in NUCLEO_Z[toolchains]\n               -> build mbed SDK\n                -> build libs\n                 -> build project\n                  -> run MUT testrunner\n                    return test results for NUCLEO_Z[toolchain]\n```\n\nDone:\n1. Added option --parallel.\n2. Decoupled execute function so it can be run in parallel with other execute functions.\n3. Thread join via Queue, not Thread::Join() to avoid deadlocks or waits for particular thread to finish.\n4. All builds are in parallel, but because each target and library for each toolchain have different directory we do not worry about building in parallel and compiler collisions.\n\nMissing:\n1. No sync for 'print' (TODO).\n2. No sync on test result structures - not needed because we only append to them (?).\n# Testing\n### Test MUTs configuration\n\nConfiguration, 4 boards; three Nucleo flavors and one Freedom K64F:\n\n```\n$ mbedls\n+--------------+------------+------------+-------------------------+\n|platform_name |mount_point |serial_port |target_id                |\n+--------------+------------+------------+-------------------------+\n|K64F          |E:          |COM61       |02400203D94B0E7724B7F3CF |\n|NUCLEO_F072RB |H:          |COM84       |073002006230631A5D55F517 |\n|NUCLEO_F302R8 |G:          |COM34       |07050200623B61125D5EF72A |\n|NUCLEO_F401RE |F:          |COM52       |07200200073E650A385BF317 |\n+--------------+------------+------------+-------------------------+\n```\n\nBuilding stuff first so when I execute parallel tests I do not build stuff (I want to see parallel testing velocity without build time constrains).\nNote: `singletes.py` will still check if mbed SDK and dependencies should be rebuilt but this will be also done when non-parallel test execution is invoked.\n\n```\n$ singletest.py --auto -O\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected K64F, port: COM61, mounted: E:\nMBEDLS: Detected NUCLEO_F401RE, port: COM52, mounted: F:\nMBEDLS: Detected NUCLEO_F302R8, port: COM34, mounted: G:\nMBEDLS: Detected NUCLEO_F072RB, port: COM84, mounted: H:\nBuilding library CMSIS (K64F, ARM)\nBuilding library MBED (K64F, ARM)\nBuilding project DETECT (K64F, ARM)\n.\n.\n.\nBuilding project ECHO (NUCLEO_F072RB, uARM)\nBuilding project BUS_OUT (NUCLEO_F072RB, uARM)\nCompleted in 7.39 sec\n```\n\n```\n$ singletest.py --auto --config\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected K64F, port: COM61, mounted: E:\nMBEDLS: Detected NUCLEO_F401RE, port: COM52, mounted: F:\nMBEDLS: Detected NUCLEO_F302R8, port: COM34, mounted: G:\nMBEDLS: Detected NUCLEO_F072RB, port: COM84, mounted: H:\nMUTs configuration in auto-detected:\n+-------+-------------+---------------+------+-------+\n| index | peripherals | mcu           | disk | port  |\n+-------+-------------+---------------+------+-------+\n| 1     |             | K64F          | E:   | COM61 |\n| 2     |             | NUCLEO_F401RE | F:   | COM52 |\n| 3     |             | NUCLEO_F302R8 | G:   | COM34 |\n| 4     |             | NUCLEO_F072RB | H:   | COM84 |\n+-------+-------------+---------------+------+-------+\n\nTest specification in auto-detected:\n+---------------+-----+------+\n| mcu           | ARM | uARM |\n+---------------+-----+------+\n| K64F          | Yes | -    |\n| NUCLEO_F401RE | -   | Yes  |\n| NUCLEO_F302R8 | -   | Yes  |\n| NUCLEO_F072RB | -   | Yes  |\n+---------------+-----+------+\n```\n### Parallel test execution\n\n```\n$ singletest.py --auto --parallel\n.\n.\nResult: 2 FAIL / 70 OK\n\nCompleted in 305.16 sec\n```\n### Non-parallel test execution\n\n```\n$ singletest.py --auto\n.\n.\nResult: 2 FAIL / 70 OK\n\nCompleted in 695.88 sec\n```\n### Measurement: Parallel vs non-parallel\n\n| Test scenario | Board count | Time (sec) |\n| --- | :-- | --: |\n| Parallel | 4 boards | 305.16 sec |\n| Non-parallel | 4 boards | 695.88 sec |\n| Non-parallel | 1 board (K64F) | 304.17 sec |\n| Non-parallel | 1 board (NUCLEO) | 123.44 sec |\n#### Execution in parallel (threaded model with --parallel) scheme:\n\nNote: K64F execution is far longer that any Nucleo board, so total time of parallel execution equals to longest test execution streak. In this case it is about 305.16 sec (where 304.17 sec is K64F test execution length):\n\n```\n# +---------------+>\n# | NUCLEO_F401RE |> 123.44 sec \n# +---------------+>\n\n# +---------------+>\n# | NUCLEO_F401RE |> 123.44 sec\n# +---------------+>\n\n# +---------------+>\n# | NUCLEO_F401RE |> 123.44 sec\n# +---------------+>\n\n# +------------------------------+>\n# |             K64F             |> 304.17 sec\n# +------------------------------+>\n\n# ------------- time axis (sec) -------------->\n```\n#### Non-parallel execution scheme\n\nNon-parallel execution just takes approximately sum of times for each platform to be executed.\n- Measured execution time: 695.88 sec.\n- Sum of test execution times per tested board (3 \\* 123.44 sec + 304.17 sec) = 674.49 sec. \n  - which gives around 21.3 sec for test suite non-parallel code.\n\n```\n# +---------------+>\n# | NUCLEO_F401RE |> 123.44 sec \n# +---------------+>\n\n#                  +---------------+>\n#                  | NUCLEO_F401RE |> 123.44 sec\n#                  +---------------+>\n\n#                                  +---------------+>\n#                                  | NUCLEO_F401RE |> 123.44 sec\n#                                  +---------------+>\n\n#                                                  +-- ~ ------ ~ --+>\n#                                                  |   ~  K64F  ~   |> 304.17 sec\n#                                                  +-- ~ ------ ~ --+>\n\n# -------------------------- time axis (sec) -------------------------->\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/965",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/965/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/965/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/965/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/965",
    "id": 60790857,
    "number": 965,
    "title": "[NUCLEO_L053R8/DISCO_L053C8] hal files refactoring",
    "user": {
      "login": "bcostm",
      "id": 5803932,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5803932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bcostm",
      "html_url": "https://github.com/bcostm",
      "followers_url": "https://api.github.com/users/bcostm/followers",
      "following_url": "https://api.github.com/users/bcostm/following{/other_user}",
      "gists_url": "https://api.github.com/users/bcostm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bcostm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bcostm/subscriptions",
      "organizations_url": "https://api.github.com/users/bcostm/orgs",
      "repos_url": "https://api.github.com/users/bcostm/repos",
      "events_url": "https://api.github.com/users/bcostm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bcostm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-12T09:24:04Z",
    "updated_at": "2015-03-16T09:36:06Z",
    "closed_at": "2015-03-16T09:36:06Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/965",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/965",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/965.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/965.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/964",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/964/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/964/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/964/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/964",
    "id": 60729290,
    "number": 964,
    "title": "Update serial_api.c",
    "user": {
      "login": "0x4E656F00",
      "id": 11430676,
      "avatar_url": "https://avatars2.githubusercontent.com/u/11430676?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x4E656F00",
      "html_url": "https://github.com/0x4E656F00",
      "followers_url": "https://api.github.com/users/0x4E656F00/followers",
      "following_url": "https://api.github.com/users/0x4E656F00/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x4E656F00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x4E656F00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x4E656F00/subscriptions",
      "organizations_url": "https://api.github.com/users/0x4E656F00/orgs",
      "repos_url": "https://api.github.com/users/0x4E656F00/repos",
      "events_url": "https://api.github.com/users/0x4E656F00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x4E656F00/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-03-11T21:03:49Z",
    "updated_at": "2015-03-12T12:49:30Z",
    "closed_at": "2015-03-12T12:49:30Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/964",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/964",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/964.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/964.patch"
    },
    "body": "Fix number of stop bits in serial_format()\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/963",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/963/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/963/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/963/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/963",
    "id": 60674915,
    "number": 963,
    "title": "Experimental parallel test execution on MUTs (option --parallel)",
    "user": {
      "login": "PrzemekWirkus",
      "id": 6360720,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6360720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PrzemekWirkus",
      "html_url": "https://github.com/PrzemekWirkus",
      "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
      "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
      "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
      "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
      "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
      "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 144902129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20work",
        "name": "needs: work",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-11T15:19:09Z",
    "updated_at": "2015-03-12T15:28:35Z",
    "closed_at": "2015-03-12T10:06:43Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/963",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/963",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/963.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/963.patch"
    },
    "body": "# Description\n\nAdded new experimental feature: thread model for function `SingleTest::execute()` where for each target we have separate thread.\n\nCurrently we are only building in parallel mbed SDK and libraries with dependencies.\nEach unique MUT (mbed under test) is flashed separately one by one, but with this new feature we are able to flash multiple boards at the same time, run test case on hardware and get results in parallel.\n\nTest execution time is reduced by `n` where `n` is number of MUTs (MUT: mbed under test).\n## Rationale & limitations\n\nWe can experiment with usage of `--auto` and CI systems. Assuming that we are performing testing on `n` unique mbed platforms we can gain almost `n` folt test execution acceleration by flashing, executing and grabbing test results from each board at the same time.\n\nNote: this extension works also with `--auto` feature added by non-public (yet) `mbed-ls` auto-detection module.\n\nNote: Building still will take some time so we are not accelerating building process which already is accelerated by multi-core compilation feature (`-j` switch). You can combine `-j` and `--parallel` to really messw ith your CPUs silicone ;-)\n\nNote: We want to explore new testing possibilities with existing test suite before we enable them for mbed 3.0 test suite.\n# Usage\n\nTo test in parallel with old sytle of configuration:\n\n```\n$ singletest.py singletest.py -i test_spec.json -M muts_all.json --parallel\n```\n\nTo test only detected by `mbed-ls` boards.\n\n```\n$ singletest.py --auto --tc ARM,GCC_ARM --parallel\n```\n## Limitations\n\nFor now if we connect two boards of the same type, for example two Freedom K46F boards to our system test suite (`singletest.py`) will assume that we are testing only for one of the targets. Mbed-ls feeds `singletest.py` with information about all targets but as above only one board of the same type will be tested.\n**This limitation will be removed in future versions of test suite***.\n\nUsing `--parallel` means that:\n- separate thread will be spawned to build mbed SDK and dependencied (libraries)\n  for each unique target with all declared toolchains.\n  E.g:\n\n```\n        Thread(n==1):   LPC1768:    ARM, uARM, GCC_ARM\n        Thread(n==2):   K64F:       ARM, GCC_ARM\n        Thread(n==3):   NUCLEO_X:   uARM\n        Thread(n==4):   NUCLEO_Y:   uARM\n        Thread(n==5):   NUCLEO_Z:   uARM\n```\n\n```\nExample:\nn == 5 if 5 types of MUTs connected to host computer:\n    E.g. LPC1768, K64F, NUCLEO_X, NUCLEO_Y, NUCLEO_Z.\n\nThread model for n == 5\n```\n\n```\n    Thread(1): for toolchain in LPC1768[toolchains]\n               -> build mbed SDK\n                -> build libs\n                 -> build project\n                  -> run MUT testrunner\n                    return test results for LPC1768[toolchain]\n    .\n    .\n    .\n    Thread(4): for toolchain in NUCLEO_Z[toolchains]\n               -> build mbed SDK\n                -> build libs\n                 -> build project\n                  -> run MUT testrunner\n                    return test results for NUCLEO_Z[toolchain]\n```\n\nDone:\n1. Added option --parallel.\n2. Decoupled execute function so it can be run in parallel with other execute functions.\n3. Thread join via Queue, not Thread::Join() to avoid deadlocks or waits for particular thread to finish.\n4. All builds are in parallel, but because each target and library for each toolchain have different directory we do not worry about building in parallel and compiler collisions.\n\nMissing:\n1. No sync for 'print' (TODO).\n2. No sync on test result structures - not needed because we only append to them (?).\n# Testing\n### Test MUTs configuration\n\nConfiguration, 4 boards; three Nucleo flavors and one Freedom K64F:\n\n```\n$ mbedls\n+--------------+------------+------------+-------------------------+\n|platform_name |mount_point |serial_port |target_id                |\n+--------------+------------+------------+-------------------------+\n|K64F          |E:          |COM61       |02400203D94B0E7724B7F3CF |\n|NUCLEO_F072RB |H:          |COM84       |073002006230631A5D55F517 |\n|NUCLEO_F302R8 |G:          |COM34       |07050200623B61125D5EF72A |\n|NUCLEO_F401RE |F:          |COM52       |07200200073E650A385BF317 |\n+--------------+------------+------------+-------------------------+\n```\n\nBuilding stuff first so when I execute parallel tests I do not build stuff (I want to see parallel testing velocity without build time constrains).\nNote: `singletes.py` will still check if mbed SDK and dependencies should be rebuilt but this will be also done when non-parallel test execution is invoked.\n\n```\n$ singletest.py --auto -O\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected K64F, port: COM61, mounted: E:\nMBEDLS: Detected NUCLEO_F401RE, port: COM52, mounted: F:\nMBEDLS: Detected NUCLEO_F302R8, port: COM34, mounted: G:\nMBEDLS: Detected NUCLEO_F072RB, port: COM84, mounted: H:\nBuilding library CMSIS (K64F, ARM)\nBuilding library MBED (K64F, ARM)\nBuilding project DETECT (K64F, ARM)\n.\n.\n.\nBuilding project ECHO (NUCLEO_F072RB, uARM)\nBuilding project BUS_OUT (NUCLEO_F072RB, uARM)\nCompleted in 7.39 sec\n```\n\n```\n$ singletest.py --auto --config\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected K64F, port: COM61, mounted: E:\nMBEDLS: Detected NUCLEO_F401RE, port: COM52, mounted: F:\nMBEDLS: Detected NUCLEO_F302R8, port: COM34, mounted: G:\nMBEDLS: Detected NUCLEO_F072RB, port: COM84, mounted: H:\nMUTs configuration in auto-detected:\n+-------+-------------+---------------+------+-------+\n| index | peripherals | mcu           | disk | port  |\n+-------+-------------+---------------+------+-------+\n| 1     |             | K64F          | E:   | COM61 |\n| 2     |             | NUCLEO_F401RE | F:   | COM52 |\n| 3     |             | NUCLEO_F302R8 | G:   | COM34 |\n| 4     |             | NUCLEO_F072RB | H:   | COM84 |\n+-------+-------------+---------------+------+-------+\n\nTest specification in auto-detected:\n+---------------+-----+------+\n| mcu           | ARM | uARM |\n+---------------+-----+------+\n| K64F          | Yes | -    |\n| NUCLEO_F401RE | -   | Yes  |\n| NUCLEO_F302R8 | -   | Yes  |\n| NUCLEO_F072RB | -   | Yes  |\n+---------------+-----+------+\n```\n### Parallel test execution\n\n```\n$ singletest.py --auto --parallel\n.\n.\nResult: 2 FAIL / 70 OK\n\nCompleted in 305.16 sec\n```\n### Non-parallel test execution\n\n```\n$ singletest.py --auto\n.\n.\nResult: 2 FAIL / 70 OK\n\nCompleted in 695.88 sec\n```\n### Measurement: Parallel vs non-parallel\n\n| Test scenario | Board count | Time (sec) |\n| --- | :-- | --: |\n| Parallel | 4 boards | 305.16 sec |\n| Non-parallel | 4 boards | 695.88 sec |\n| Non-parallel | 1 board (K64F) | 304.17 sec |\n| Non-parallel | 1 board (NUCLEO) | 123.44 sec |\n#### Execution in parallel (threaded model with --parallel) scheme:\n\nNote: K64F execution is far longer that any Nucleo board, so total time of parallel execution equals to longest test execution streak. In this case it is about 305.16 sec (where 304.17 sec is K64F test execution length):\n\n```\n# +---------------+>\n# | NUCLEO_F401RE |> 123.44 sec \n# +---------------+>\n\n# +---------------+>\n# | NUCLEO_F401RE |> 123.44 sec\n# +---------------+>\n\n# +---------------+>\n# | NUCLEO_F401RE |> 123.44 sec\n# +---------------+>\n\n# +------------------------------+>\n# |             K64F             |> 304.17 sec\n# +------------------------------+>\n\n# ------------- time axis (sec) -------------->\n```\n#### Non-parallel execution scheme\n\nNon-parallel execution just takes approximately sum of times for each platform to be executed.\n- Measured execution time: 695.88 sec.\n- Sum of test execution times per tested board (3 \\* 123.44 sec + 304.17 sec) = 674.49 sec. \n  - which gives around 21.3 sec for test suite non-parallel code.\n\n```\n# +---------------+>\n# | NUCLEO_F401RE |> 123.44 sec \n# +---------------+>\n\n#                  +---------------+>\n#                  | NUCLEO_F401RE |> 123.44 sec\n#                  +---------------+>\n\n#                                  +---------------+>\n#                                  | NUCLEO_F401RE |> 123.44 sec\n#                                  +---------------+>\n\n#                                                  +-- ~ ------ ~ --+>\n#                                                  |   ~  K64F  ~   |> 304.17 sec\n#                                                  +-- ~ ------ ~ --+>\n\n# -------------------------- time axis (sec) -------------------------->\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/962",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/962/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/962/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/962/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/962",
    "id": 60506184,
    "number": 962,
    "title": "Docs",
    "user": {
      "login": "PrzemekWirkus",
      "id": 6360720,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6360720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PrzemekWirkus",
      "html_url": "https://github.com/PrzemekWirkus",
      "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
      "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
      "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
      "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
      "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
      "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-03-10T14:19:32Z",
    "updated_at": "2015-03-12T08:59:44Z",
    "closed_at": "2015-03-12T08:59:40Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/962",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/962",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/962.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/962.patch"
    },
    "body": "# Description\n- Added [Contributing Guidelines](https://github.com/blog/1184-contributing-guidelines) CONTRIBUTING.md file.\n- Added `mbed/docs` directory with markdown files describing how to build mbed SDK off-line, how to run mbed SDK automated test environment and how to contribute (information for commiters).\n## Rationale\n- We want to store important documentation with mbedmicro repository.\n- All contributors can take part in mbed documentation improvement process.\n- We would like to add updated porting instructions (PORTING.md) to docs directory.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/961",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/961/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/961/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/961/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/961",
    "id": 60497100,
    "number": 961,
    "title": "[NUCLEO_L053R8/DISCO_L053C8] Update STM32Cube driver",
    "user": {
      "login": "bcostm",
      "id": 5803932,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5803932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bcostm",
      "html_url": "https://github.com/bcostm",
      "followers_url": "https://api.github.com/users/bcostm/followers",
      "following_url": "https://api.github.com/users/bcostm/following{/other_user}",
      "gists_url": "https://api.github.com/users/bcostm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bcostm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bcostm/subscriptions",
      "organizations_url": "https://api.github.com/users/bcostm/orgs",
      "repos_url": "https://api.github.com/users/bcostm/repos",
      "events_url": "https://api.github.com/users/bcostm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bcostm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-10T13:14:13Z",
    "updated_at": "2015-03-11T18:15:13Z",
    "closed_at": "2015-03-11T18:15:13Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/961",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/961",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/961.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/961.patch"
    },
    "body": "This request is a preparation for the addition of a new NUCLEO_L0 target soon.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/960",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/960/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/960/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/960/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/960",
    "id": 60462973,
    "number": 960,
    "title": "Export - GettingStarget page",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-10T07:56:09Z",
    "updated_at": "2015-05-22T09:51:11Z",
    "closed_at": "2015-05-22T09:51:11Z",
    "author_association": "MEMBER",
    "body": "The link should be updated, refers to mbed.org. Located in the export/**init**.py \n\n```\n    zip_path = None\n    if report['success']:\n        # add readme file to every offline export.\n        open(os.path.join(tempdir, 'GettingStarted.htm'),'w').write('<meta http-equiv=\"refresh\" content=\"0; url=http://mbed.org/handbook/Getting-Started-mbed-Exporters#%s\"/>'% (ide))\n        # copy .hgignore file to exported direcotry as well.\n        copy(os.path.join(exporter.TEMPLATE_DIR,'.hgignore'),tempdir)\n        zip_path = zip_working_directory_and_clean_up(tempdir, destination, project_name, clean)\n\n```\n\nReported on mbed, by David Godfrey\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/959",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/959/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/959/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/959/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/959",
    "id": 60224788,
    "number": 959,
    "title": "Added support for Nucleo F303RE",
    "user": {
      "login": "dominus97",
      "id": 3278370,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3278370?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dominus97",
      "html_url": "https://github.com/dominus97",
      "followers_url": "https://api.github.com/users/dominus97/followers",
      "following_url": "https://api.github.com/users/dominus97/following{/other_user}",
      "gists_url": "https://api.github.com/users/dominus97/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dominus97/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dominus97/subscriptions",
      "organizations_url": "https://api.github.com/users/dominus97/orgs",
      "repos_url": "https://api.github.com/users/dominus97/repos",
      "events_url": "https://api.github.com/users/dominus97/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dominus97/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-07T21:15:07Z",
    "updated_at": "2015-03-10T08:18:45Z",
    "closed_at": "2015-03-10T08:18:45Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/959",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/959",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/959.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/959.patch"
    },
    "body": "I am not sure if it's the right SP, but the basic blink code works.\nWhat does the SP stand for? Stack pointer?\n\nAlso, if you could tell me where to look for the correct address, I would.\nI looked in the reference manual and the programming manual that STM provides, with no luck.\n\nCheers\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/958",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/958/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/958/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/958/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/958",
    "id": 60224644,
    "number": 958,
    "title": "[HAL] K20DXX PWM fix",
    "user": {
      "login": "Sissors",
      "id": 5982704,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5982704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sissors",
      "html_url": "https://github.com/Sissors",
      "followers_url": "https://api.github.com/users/Sissors/followers",
      "following_url": "https://api.github.com/users/Sissors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sissors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sissors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sissors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sissors/orgs",
      "repos_url": "https://api.github.com/users/Sissors/repos",
      "events_url": "https://api.github.com/users/Sissors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sissors/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-07T21:11:47Z",
    "updated_at": "2015-03-12T09:18:08Z",
    "closed_at": "2015-03-12T09:18:08Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/958",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/958",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/958.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/958.patch"
    },
    "body": "The old code for the K20 PWM had an issue where calling for example\npwm.period and pwm.write after each other resulted in the pwm.write\nfunction setting the pulsewidth with the value of the old pwm period.\nThis makes sure it waits until the latest pwm period is written before\nit will do so.\n\nIt was in legacy PWM mode, which should be the same as what the KLxx for example use, but this was not the same apparantly. The KSDK MCUs solve this issue using: \"Did you try turning it off and on again\" (which gives glitches on the ouput). This does not give glitches, only downside is that the code waits until the last update happened when doing multiple changes in a row. Alternative would be to store the written value in a variable in the code too, but then I consider this option better.\n\nBut really if prisoners had to use this peripheral it would be considered cruel and unusual punishment.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/957",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/957/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/957/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/957/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/957",
    "id": 60218270,
    "number": 957,
    "title": "Teensy3.1 updates + USBDevice Teensy3.1 Target addition.",
    "user": {
      "login": "star297",
      "id": 6283197,
      "avatar_url": "https://avatars2.githubusercontent.com/u/6283197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/star297",
      "html_url": "https://github.com/star297",
      "followers_url": "https://api.github.com/users/star297/followers",
      "following_url": "https://api.github.com/users/star297/following{/other_user}",
      "gists_url": "https://api.github.com/users/star297/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/star297/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/star297/subscriptions",
      "organizations_url": "https://api.github.com/users/star297/orgs",
      "repos_url": "https://api.github.com/users/star297/repos",
      "events_url": "https://api.github.com/users/star297/events{/privacy}",
      "received_events_url": "https://api.github.com/users/star297/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-03-07T18:31:46Z",
    "updated_at": "2015-03-12T09:26:37Z",
    "closed_at": "2015-03-12T09:26:37Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/957",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/957",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/957.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/957.patch"
    },
    "body": "Teensy3.1:\nUpdated pin names and defines to match platform images.\nAdded 32KHz RTC crystal MCU loading capacitors.\nAdded USB 48MHz clock set up and corrected 16MHz crystal MCU loading capacitor defines.\nAdded deepsleep wake up code (ugly, but works)\n\nUSBDevice:\nAdded Target Teensy3.1 to USBDevice defines, gives a good pc terminal function.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/956",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/956/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/956/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/956/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/956",
    "id": 60128748,
    "number": 956,
    "title": "nRF51822/nRF51-DK booloader compile support and related platforms",
    "user": {
      "login": "screamerbg",
      "id": 5940648,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5940648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/screamerbg",
      "html_url": "https://github.com/screamerbg",
      "followers_url": "https://api.github.com/users/screamerbg/followers",
      "following_url": "https://api.github.com/users/screamerbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/screamerbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/screamerbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/screamerbg/subscriptions",
      "organizations_url": "https://api.github.com/users/screamerbg/orgs",
      "repos_url": "https://api.github.com/users/screamerbg/repos",
      "events_url": "https://api.github.com/users/screamerbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/screamerbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-06T17:00:29Z",
    "updated_at": "2015-03-09T10:56:01Z",
    "closed_at": "2015-03-09T10:56:01Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/956",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/956",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/956.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/956.patch"
    },
    "body": "Added bootloader hex file for all nRF51822 based platforms. Added NRF51822_BOOT and NRF51_DK_BOOT platforms so bootloader is included in the compiled program. This is required for FOTA.\n\nAdd AnalogIn potentiometer test for A0, A1 as present on the mbed application shield and automate MMA7660 test.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/955",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/955/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/955/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/955/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/955",
    "id": 60128242,
    "number": 955,
    "title": "ST Nucleo 411RE wait() issue in offline export",
    "user": {
      "login": "BlackstoneEngineering",
      "id": 5093331,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5093331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BlackstoneEngineering",
      "html_url": "https://github.com/BlackstoneEngineering",
      "followers_url": "https://api.github.com/users/BlackstoneEngineering/followers",
      "following_url": "https://api.github.com/users/BlackstoneEngineering/following{/other_user}",
      "gists_url": "https://api.github.com/users/BlackstoneEngineering/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BlackstoneEngineering/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BlackstoneEngineering/subscriptions",
      "organizations_url": "https://api.github.com/users/BlackstoneEngineering/orgs",
      "repos_url": "https://api.github.com/users/BlackstoneEngineering/repos",
      "events_url": "https://api.github.com/users/BlackstoneEngineering/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BlackstoneEngineering/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2015-03-06T16:56:38Z",
    "updated_at": "2017-05-18T11:43:14Z",
    "closed_at": "2017-04-10T09:18:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "# Problem\n\nthe wait() function does not execute properly on the ST Nucleo F411RE board when exported to keil, the wait_ms() function behaves as expected. I believe the function is improperly defined in the port.\n\nfor example\n\n``` C\n#include \"mbed.h\"\n\nDigitalOut myled(LED1);\nDigitalOut toggle(D7);\n\nint main()\n{\n    while(1) {\n        myled = 0; // LED is OFF\n        toggle = 0;\n        wait(1);\n        myled = 1; // LED is ON\n        toggle = 1;\n        wait(1); \n    }\n}\n```\n### Online Compiler OK\n\nThe above code will behave as expected when compiled online, the led will blink and the toggle will toggle, with 1s intervals.\n![capture](https://cloud.githubusercontent.com/assets/5093331/6529466/95f873e2-c3ee-11e4-818b-7a2bec59c472.JPG)\n### Offline Compiler problem (keil)\n\n but when exported to keil the wait function is not behaving properly, the timings are not executing properly with ~2us intervals, which leads me to believe the wait function is entering and immediately exiting. \n![capture2](https://cloud.githubusercontent.com/assets/5093331/6529551/1f208dc6-c3ef-11e4-9bd7-9ef94cfad94e.JPG)\n### hotfix\n\nby using wait_us() in keil we can get the expected behavior.\n# Acceptance Criteria\n\nthe wait() function behaves as expected\n\n@screamerbg\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/954",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/954/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/954/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/954/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/954",
    "id": 60111241,
    "number": 954,
    "title": "Rename target K64F to FRDM_K64F",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147112891,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20review",
        "name": "needs: review",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2015-03-06T14:52:29Z",
    "updated_at": "2015-06-09T11:50:25Z",
    "closed_at": "2015-06-09T11:50:25Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/954",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/954",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/954.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/954.patch"
    },
    "body": "All exporters updated, targets.py fixed for targets based on K64F. K64F wont be valid target anymore.\n\nReference #939\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/953",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/953/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/953/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/953/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/953",
    "id": 60077211,
    "number": 953,
    "title": "[NUCLEO_F103RB] Migration to STM32Cube driver",
    "user": {
      "login": "bcostm",
      "id": 5803932,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5803932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bcostm",
      "html_url": "https://github.com/bcostm",
      "followers_url": "https://api.github.com/users/bcostm/followers",
      "following_url": "https://api.github.com/users/bcostm/following{/other_user}",
      "gists_url": "https://api.github.com/users/bcostm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bcostm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bcostm/subscriptions",
      "organizations_url": "https://api.github.com/users/bcostm/orgs",
      "repos_url": "https://api.github.com/users/bcostm/repos",
      "events_url": "https://api.github.com/users/bcostm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bcostm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-03-06T09:16:27Z",
    "updated_at": "2015-03-17T10:39:54Z",
    "closed_at": "2015-03-09T11:48:52Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/953",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/953",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/953.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/953.patch"
    },
    "body": "From now on, all Nucleo platforms use the STM32Cube driver.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/952",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/952/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/952/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/952/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/952",
    "id": 60072782,
    "number": 952,
    "title": "Remove trailing whitespace in RTX",
    "user": {
      "login": "vh21",
      "id": 1305985,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1305985?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vh21",
      "html_url": "https://github.com/vh21",
      "followers_url": "https://api.github.com/users/vh21/followers",
      "following_url": "https://api.github.com/users/vh21/following{/other_user}",
      "gists_url": "https://api.github.com/users/vh21/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vh21/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vh21/subscriptions",
      "organizations_url": "https://api.github.com/users/vh21/orgs",
      "repos_url": "https://api.github.com/users/vh21/repos",
      "events_url": "https://api.github.com/users/vh21/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vh21/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-03-06T08:25:21Z",
    "updated_at": "2015-03-07T13:25:20Z",
    "closed_at": "2015-03-07T13:25:20Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/952",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/952",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/952.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/952.patch"
    },
    "body": "There are some trailing whitespace in new created RTX sources. It makes some difficulty to review the differences.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/951",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/951/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/951/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/951/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/951",
    "id": 59965553,
    "number": 951,
    "title": "IAR folder structure in project when exporting.",
    "user": {
      "login": "GustavWi",
      "id": 9265014,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9265014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GustavWi",
      "html_url": "https://github.com/GustavWi",
      "followers_url": "https://api.github.com/users/GustavWi/followers",
      "following_url": "https://api.github.com/users/GustavWi/following{/other_user}",
      "gists_url": "https://api.github.com/users/GustavWi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GustavWi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GustavWi/subscriptions",
      "organizations_url": "https://api.github.com/users/GustavWi/orgs",
      "repos_url": "https://api.github.com/users/GustavWi/repos",
      "events_url": "https://api.github.com/users/GustavWi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GustavWi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-05T15:16:37Z",
    "updated_at": "2015-03-06T07:11:29Z",
    "closed_at": "2015-03-06T07:11:29Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/951",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/951",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/951.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/951.patch"
    },
    "body": "Generating folder structure when exporting to IAR.\n\n![iar export](https://cloud.githubusercontent.com/assets/9265014/6507188/92eeffd4-c350-11e4-80ea-0461d39138e9.png)\nExported an RTOS project with mbed as sources.\n\nI have only tested this with the mbed sources. I can't with project.py specify that I want the rtos or ethernet libraries in source format. So I have not tested if it works with these libraries as well.\n\nHowever, in the online IDE when I export a project I get the sources for these libraries. I will check on Monday in the beta if it works correctly with these libraries as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/950",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/950/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/950/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/950/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/950",
    "id": 59947396,
    "number": 950,
    "title": "Export - makefile templates - Wextra",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-05T12:51:29Z",
    "updated_at": "2015-07-20T07:31:49Z",
    "closed_at": "2015-07-20T07:31:49Z",
    "author_association": "MEMBER",
    "body": "I would like to enable flag -Wextra to CC_FLAGS. The library is build with this flag, as defined in gcc.py script.\n\nBut templates for gcc_arm does not contain this option (I checked few). I might look at this, and start fixing warnings.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/949",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/949/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/949/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/949/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/949",
    "id": 59793254,
    "number": 949,
    "title": "IAR support LPC824",
    "user": {
      "login": "GustavWi",
      "id": 9265014,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9265014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GustavWi",
      "html_url": "https://github.com/GustavWi",
      "followers_url": "https://api.github.com/users/GustavWi/followers",
      "following_url": "https://api.github.com/users/GustavWi/following{/other_user}",
      "gists_url": "https://api.github.com/users/GustavWi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GustavWi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GustavWi/subscriptions",
      "organizations_url": "https://api.github.com/users/GustavWi/orgs",
      "repos_url": "https://api.github.com/users/GustavWi/repos",
      "events_url": "https://api.github.com/users/GustavWi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GustavWi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-04T12:50:07Z",
    "updated_at": "2015-03-05T13:05:06Z",
    "closed_at": "2015-03-05T13:05:06Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/949",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/949",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/949.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/949.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/948",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/948/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/948/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/948/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/948",
    "id": 59789209,
    "number": 948,
    "title": "IAR support for ethernet library",
    "user": {
      "login": "GustavWi",
      "id": 9265014,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9265014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GustavWi",
      "html_url": "https://github.com/GustavWi",
      "followers_url": "https://api.github.com/users/GustavWi/followers",
      "following_url": "https://api.github.com/users/GustavWi/following{/other_user}",
      "gists_url": "https://api.github.com/users/GustavWi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GustavWi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GustavWi/subscriptions",
      "organizations_url": "https://api.github.com/users/GustavWi/orgs",
      "repos_url": "https://api.github.com/users/GustavWi/repos",
      "events_url": "https://api.github.com/users/GustavWi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GustavWi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-04T12:08:43Z",
    "updated_at": "2015-03-06T07:48:13Z",
    "closed_at": "2015-03-06T07:48:13Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/948",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/948",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/948.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/948.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/947",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/947/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/947/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/947/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/947",
    "id": 59779745,
    "number": 947,
    "title": "Singletest option -p to force peripherals",
    "user": {
      "login": "PrzemekWirkus",
      "id": 6360720,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6360720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PrzemekWirkus",
      "html_url": "https://github.com/PrzemekWirkus",
      "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
      "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
      "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
      "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
      "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
      "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-04T10:42:03Z",
    "updated_at": "2015-03-11T15:29:47Z",
    "closed_at": "2015-03-06T08:06:23Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/947",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/947",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/947.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/947.patch"
    },
    "body": "# Description\n\n`mbed/workspace_tools/singletest.py` script can work in `--auto` mode with `mbed-ls` module (not yet released officially).\nAuto-detection function doesn't allow users to define peripherals from command line. Now option `-p` can give you this functionality. You can set up for `singletest.py` global peripheral set which will be added to each auto-detected MUT (Mbed Under Test).  This will allow users with farms (test beds) with common peripheral configuration for each device to run also peripheral tests.\n- This option can be useful when you connect many devices with the same peripheral profile and you want to execute peripheral tests. Previously you could only execute common tests. Now you can pass to `sengletest.py` simple peripheral description you would usually pass via option `-M` and `muts_all.json` file.\n- You can mix new option `-p` with other options like `-n`, `-O`, `-j` etc.\n### Examples of -p option use\n\n```\n$ singletest.py --auto -P -p digital_loop,TMP102\n```\n\n```\n$ singletest.py --auto -j 4 -O -P -p SD\n```\n## Separation between peripheral test mode and common test mode\n\nOur test suite creates logical separation between tests for peripherals (see option `-P`) and common tests (see option `-C`) which are tests without any external peripheral dependency like connected via SPI SD card).\nBut as we said earlier we can mix new option `-p` with existing test suite options.\n\nWhen user tries to mix option `-p` and use option `-n` (Specify by name test cases to be executed) to define test case names in peripheral test case namespace and common test case names, test suite will add non-peripheral test case names and just execute them.\nIt shows option `-p` is not filtering non-peripheral test cases.\nOption `-P` didn't change its meaning. Please use option `-P` to filter out non-peripheral test cases \n\nSee example below where we add use of peripheral `SD` with new option `-p` (add `SD` dependent test case names to global test case namespace) and at the same time we want to run two test cases by name: \n- `PERF_1` which is dedicated `SD` peripheral test and \n- `MBED_11` which is common test (no peripheral required)\n\nSee below how we've added `SD` test case names to test namespace so option `-n` can catch them and execute.\n\n```\n$ singletest.py --auto -p SD -n MBED_11,PERF_1\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected LPC1768, port: COM77, mounted: H:\nBuilding library CMSIS (LPC1768, ARM)\nBuilding library MBED (LPC1768, ARM)\nBuilding project TICKER (LPC1768, ARM)\nTargetTest::LPC1768::ARM::MBED_11::Ticker Int [OK] in 12.26 of 15 sec\nBuilding library FAT (LPC1768, ARM)\nBuilding project SD_PERF_STDIO (LPC1768, ARM)\nTargetTest::LPC1768::ARM::PERF_1::SD Stdio R/W Speed [OK] in 7.63 of 15 sec\nTest summary:\n+--------+---------+-----------+---------+--------------------+--------------------+---------------+-------+\n| Result | Target  | Toolchain | Test ID | Test Description   | Elapsed Time (sec) | Timeout (sec) | Loops |\n+--------+---------+-----------+---------+--------------------+--------------------+---------------+-------+\n| OK     | LPC1768 | ARM       | MBED_11 | Ticker Int         |       12.26        |       15      |  1/1  |\n| OK     | LPC1768 | ARM       | PERF_1  | SD Stdio R/W Speed |        7.63        |       15      |  1/1  |\n+--------+---------+-----------+---------+--------------------+--------------------+---------------+-------+\nResult: 2 OK\n\nCompleted in 26.94 sec\n```\n\nSee below how we've filtered out all non-peripheral test case names so option `-n` can now only catch peripheral test case names.\n\n```\n$ singletest.py --auto -p SD -n MBED_11,PERF_1 -P\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected LPC1768, port: COM77, mounted: H:\nBuilding library CMSIS (LPC1768, ARM)\nBuilding library MBED (LPC1768, ARM)\nBuilding library FAT (LPC1768, ARM)\nBuilding project SD_PERF_STDIO (LPC1768, ARM)\nTargetTest::LPC1768::ARM::PERF_1::SD Stdio R/W Speed [OK] in 7.63 of 15 sec\nTest summary:\n+--------+---------+-----------+---------+--------------------+--------------------+---------------+-------+\n| Result | Target  | Toolchain | Test ID | Test Description   | Elapsed Time (sec) | Timeout (sec) | Loops |\n+--------+---------+-----------+---------+--------------------+--------------------+---------------+-------+\n| OK     | LPC1768 | ARM       | PERF_1  | SD Stdio R/W Speed |        7.63        |       15      |  1/1  |\n+--------+---------+-----------+---------+--------------------+--------------------+---------------+-------+\nResult: 1 OK\n\nCompleted in 11.60 sec\n```\n\nOption `-C` will cancel out all peripheral tests in `-n` even you specify peripherals using `-p`:\n\n```\n$ singletest.py --auto -p SD -n MBED_11,PERF_1 -C\n.\n.\n.\nTest summary:\n+--------+---------+-----------+---------+------------------+--------------------+---------------+-------+\n| Result | Target  | Toolchain | Test ID | Test Description | Elapsed Time (sec) | Timeout (sec) | Loops |\n+--------+---------+-----------+---------+------------------+--------------------+---------------+-------+\n| OK     | LPC1768 | ARM       | MBED_11 | Ticker Int       |       12.22        |       15      |  1/1  |\n+--------+---------+-----------+---------+------------------+--------------------+---------------+-------+\nResult: 1 OK\n\nCompleted in 15.42 sec\n```\n## Peripheral usage use case\n\nYou can connect few boards all equipped with additional SD card peripheral and test for each of this boards `SD` peripheral related tests. Note that all devices should have common peripheral (SD card connected) and you can't exclude some devices from \"I'm having this peripheral(s)\" peripheral list.\n### Example configuration (one LPC1768 device)\n\n```\n$ singletest.py --auto --config\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected LPC1768, port: COM77, mounted: H:\nMUTs configuration in auto-detected:\n+-------+-------------+---------+------+-------+\n| index | peripherals | mcu     | disk | port  |\n+-------+-------------+---------+------+-------+\n| 1     |             | LPC1768 | H:   | COM77 |\n+-------+-------------+---------+------+-------+\n\nTest specification in auto-detected:\n+---------+-----+\n| mcu     | ARM |\n+---------+-----+\n| LPC1768 | Yes |\n+---------+-----+\n```\n\nNote: Our simple configuration with one LPC1768 connected to host PC.\n### Building all default tests (no peripheral tests included)\n\n```\n$ singletest.py --auto -j 8 -O\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected LPC1768, port: COM77, mounted: H:\nBuilding library CMSIS (LPC1768, ARM)\nBuilding library MBED (LPC1768, ARM)\nBuilding project DETECT (LPC1768, ARM)\nBuilding project DEV_NULL (LPC1768, ARM)\nBuilding project HELLO (LPC1768, ARM)\nBuilding project TICKER (LPC1768, ARM)\nBuilding project CPP (LPC1768, ARM)\nBuilding project RTC (LPC1768, ARM)\nBuilding project STDIO (LPC1768, ARM)\nBuilding project SEMIHOST (LPC1768, ARM)\nBuilding project TICKER_2 (LPC1768, ARM)\nBuilding project TIMEOUT (LPC1768, ARM)\nBuilding project TIME_US (LPC1768, ARM)\nBuilding project DIV (LPC1768, ARM)\nBuilding project TICKER_3 (LPC1768, ARM)\nBuilding project BASIC (LPC1768, ARM)\nBuilding project VTOR_RELOC (LPC1768, ARM)\nBuilding project FILE (LPC1768, ARM)\nBuilding project CALL_BEFORE_MAIN (LPC1768, ARM)\nBuilding project ECHO (LPC1768, ARM)\nBuilding project BUS_OUT (LPC1768, ARM)\nBuilding library RTX (LPC1768, ARM)\nBuilding library RTOS (LPC1768, ARM)\nBuilding project BASIC (LPC1768, ARM)\nBuilding library RTX (LPC1768, ARM)\nBuilding library RTOS (LPC1768, ARM)\nBuilding project MUTEX (LPC1768, ARM)\nBuilding library RTX (LPC1768, ARM)\nBuilding library RTOS (LPC1768, ARM)\nBuilding project SEMAPHORE (LPC1768, ARM)\nBuilding library RTX (LPC1768, ARM)\nBuilding library RTOS (LPC1768, ARM)\nBuilding project SIGNALS (LPC1768, ARM)\nBuilding library RTX (LPC1768, ARM)\nBuilding library RTOS (LPC1768, ARM)\nBuilding project QUEUE (LPC1768, ARM)\nBuilding library RTX (LPC1768, ARM)\nBuilding library RTOS (LPC1768, ARM)\nBuilding project MAIL (LPC1768, ARM)\nBuilding library RTX (LPC1768, ARM)\nBuilding library RTOS (LPC1768, ARM)\nBuilding project TIMER (LPC1768, ARM)\nBuilding library RTX (LPC1768, ARM)\nBuilding library RTOS (LPC1768, ARM)\nBuilding project ISR (LPC1768, ARM)\nCompleted in 1.39 sec\n```\n\nNote: We have built only basic tests (just like for option `-C`) \n### Using option -p to force peripheral on all auto-detected devices\n\n```\n$ singletest.py --auto -j 8 -O -P -p SD\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected LPC1768, port: COM77, mounted: H:\nBuilding library CMSIS (LPC1768, ARM)\nBuilding library MBED (LPC1768, ARM)\nBuilding library FAT (LPC1768, ARM)\nBuilding project SD (LPC1768, ARM)\nBuilding library FAT (LPC1768, ARM)\nBuilding project SD_PERF_STDIO (LPC1768, ARM)\nBuilding library FAT (LPC1768, ARM)\nBuilding project SD_PERF_FHANDLE (LPC1768, ARM)\nBuilding library FAT (LPC1768, ARM)\nBuilding project SD_PERF_FATFS (LPC1768, ARM)\nBuilding library RTX (LPC1768, ARM)\nBuilding library RTOS (LPC1768, ARM)\nBuilding library FAT (LPC1768, ARM)\nBuilding project FILE (LPC1768, ARM)\nCompleted in 0.51 sec\n```\n\nNote: `singletest.py` built all tests related to SD card (option `-p`) and only allowed peripheral tests to be included (already existing option `-P``). Option``-O`` used to only build, no test execution on hardware.\n### Building tests for few types of peripherals\n\n```\n$ singletest.py --auto -j 8 -O -P -p digital_loop,TMP102\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected LPC1768, port: COM77, mounted: H:\nBuilding library CMSIS (LPC1768, ARM)\nBuilding library MBED (LPC1768, ARM)\nBuilding project I2C_TMP102 (LPC1768, ARM)\nBuilding project DIGITALIN_DIGITALOUT (LPC1768, ARM)\nBuilding project DIGITALINOUT (LPC1768, ARM)\nBuilding project INTERRUPTIN (LPC1768, ARM)\nCompleted in 0.27 sec\n```\n\nNote: We've only built tests related to `digital_loop` and `TMP102` peripherals.\n\nLet's run some tests related to this configuration:\n\n```\n$ singletest.py --auto -P -p digital_loop,TMP102\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected LPC1768, port: COM77, mounted: H:\nBuilding library CMSIS (LPC1768, ARM)\nBuilding library MBED (LPC1768, ARM)\nBuilding project I2C_TMP102 (LPC1768, ARM)\nTargetTest::LPC1768::ARM::MBED_A4::I2C TMP102 [OK] in 2.28 of 10 sec\nBuilding project DIGITALIN_DIGITALOUT (LPC1768, ARM)\nTargetTest::LPC1768::ARM::MBED_A5::DigitalIn DigitalOut [OK] in 2.26 of 10 sec\nBuilding project DIGITALINOUT (LPC1768, ARM)\nTargetTest::LPC1768::ARM::MBED_A6::DigitalInOut [OK] in 2.32 of 10 sec\nBuilding project INTERRUPTIN (LPC1768, ARM)\nTargetTest::LPC1768::ARM::MBED_A7::InterruptIn [OK] in 9.42 of 15 sec\nTest summary:\n+--------+---------+-----------+---------+----------------------+--------------------+---------------+-------+\n| Result | Target  | Toolchain | Test ID | Test Description     | Elapsed Time (sec) | Timeout (sec) | Loops |\n+--------+---------+-----------+---------+----------------------+--------------------+---------------+-------+\n| OK     | LPC1768 | ARM       | MBED_A4 | I2C TMP102           |        2.28        |       10      |  1/1  |\n| OK     | LPC1768 | ARM       | MBED_A5 | DigitalIn DigitalOut |        2.26        |       10      |  1/1  |\n| OK     | LPC1768 | ARM       | MBED_A6 | DigitalInOut         |        2.32        |       10      |  1/1  |\n| OK     | LPC1768 | ARM       | MBED_A7 | InterruptIn          |        9.42        |       15      |  1/1  |\n+--------+---------+-----------+---------+----------------------+--------------------+---------------+-------+\nResult: 4 OK\n\nCompleted in 28.41 sec\n```\n\nNote: We've only executed tests related to `digital_loop` and `TMP102` peripherals.\n### Option -P for auto-detection doesn't work (if no -p defined)\n\n```\n$ singletest.py --auto -P\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected LPC1768, port: COM77, mounted: H:\nBuilding library CMSIS (LPC1768, ARM)\nBuilding library MBED (LPC1768, ARM)\nTest summary:\n+--------+--------+-----------+---------+------------------+--------------------+---------------+-------+\n| Result | Target | Toolchain | Test ID | Test Description | Elapsed Time (sec) | Timeout (sec) | Loops |\n+--------+--------+-----------+---------+------------------+--------------------+---------------+-------+\n+--------+--------+-----------+---------+------------------+--------------------+---------------+-------+\nResult:\n\nCompleted in 0.17 sec\n```\n\nNote: By default there are no peripherals attached to MUT because there is no extra peripheral information.\n### Auto-detection mode --auto silently assumes we are using -C switch to only use default tests (no peripheral association)\n\n```\n$ singletest.py --auto -C\nTest summary:\n+---------+---------+-----------+-------------+---------------------------------------+--------------------+---------------+-------+\n| Result  | Target  | Toolchain | Test ID     | Test Description                      | Elapsed Time (sec) | Timeout (sec) | Loops |\n+---------+---------+-----------+-------------+---------------------------------------+--------------------+---------------+-------+\n| OK      | LPC1768 | ARM       | DTCT_1      | Simple detect test                    |        1.33        |       10      |  1/1  |\n| OK      | LPC1768 | ARM       | EXAMPLE_1   | /dev/null                             |        4.44        |       20      |  1/1  |\n.\n.\n.\n| OK      | LPC1768 | ARM       | RTOS_7      | Timer                                 |       12.35        |       15      |  1/1  |\n| OK      | LPC1768 | ARM       | RTOS_8      | ISR (Queue)                           |        7.43        |       20      |  1/1  |\n+---------+---------+-----------+-------------+---------------------------------------+--------------------+---------------+-------+\nResult: 25 OK / 2 TIMEOUT\n\nCompleted in 320.48 sec\n```\n\nNote: Option `-C` used with `--auto` mode doesn't do anything (assumed silently if no other things specified).\n# Example\n\nLet's connect two devices with connected peripherals (some peripherals will be shared between this devices).\nI've connected:\n- LPC1768 with \"TMP102\", \"digital_loop\", \"port_loop\", \"analog_loop\", \"SD\" peripherals.\n- KL25Z with: \"SD\", \"24LC256\", \"KL25Z\" peripherals.\n  Note we share few the same peripherals across those two boards.\n\nLet's first detect them (no peripherals can be detected with `--auto` option) but I know hardware configuration I'm using:\n\n```\n$ singletest.py --auto --config\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected KL25Z, port: COM89, mounted: E:\nMBEDLS: Detected LPC1768, port: COM77, mounted: H:\nMUTs configuration in auto-detected:\n+-------+-------------+---------+------+-------+\n| index | peripherals | mcu     | disk | port  |\n+-------+-------------+---------+------+-------+\n| 1     |             | KL25Z   | E:   | COM89 |\n| 2     |             | LPC1768 | H:   | COM77 |\n+-------+-------------+---------+------+-------+\n\nTest specification in auto-detected:\n+---------+-----+\n| mcu     | ARM |\n+---------+-----+\n| KL25Z   | Yes |\n| LPC1768 | Yes |\n+---------+-----+\n```\n\nNow we can just use our experience and mix few options to just execute two tests across all connected platforms:\n\n```\n$ singletest.py --auto -p SD -n MBED_11,PERF_1\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected KL25Z, port: COM89, mounted: E:\nMBEDLS: Detected LPC1768, port: COM77, mounted: H:\nBuilding library CMSIS (KL25Z, ARM)\nBuilding library MBED (KL25Z, ARM)\nBuilding project TICKER (KL25Z, ARM)\nTargetTest::KL25Z::ARM::MBED_11::Ticker Int [OK] in 11.37 of 15 sec\nBuilding library FAT (KL25Z, ARM)\nBuilding project SD_PERF_STDIO (KL25Z, ARM)\nTargetTest::KL25Z::ARM::PERF_1::SD Stdio R/W Speed [OK] in 5.43 of 15 sec\nBuilding library CMSIS (LPC1768, ARM)\nBuilding library MBED (LPC1768, ARM)\nBuilding project TICKER (LPC1768, ARM)\nTargetTest::LPC1768::ARM::MBED_11::Ticker Int [OK] in 12.24 of 15 sec\nBuilding library FAT (LPC1768, ARM)\nBuilding project SD_PERF_STDIO (LPC1768, ARM)\nTargetTest::LPC1768::ARM::PERF_1::SD Stdio R/W Speed [OK] in 7.67 of 15 sec\nTest summary:\n+--------+---------+-----------+---------+--------------------+--------------------+---------------+-------+\n| Result | Target  | Toolchain | Test ID | Test Description   | Elapsed Time (sec) | Timeout (sec) | Loops |\n+--------+---------+-----------+---------+--------------------+--------------------+---------------+-------+\n| OK     | KL25Z   | ARM       | MBED_11 | Ticker Int         |       11.37        |       15      |  1/1  |\n| OK     | KL25Z   | ARM       | PERF_1  | SD Stdio R/W Speed |        5.43        |       15      |  1/1  |\n| OK     | LPC1768 | ARM       | MBED_11 | Ticker Int         |       12.24        |       15      |  1/1  |\n| OK     | LPC1768 | ARM       | PERF_1  | SD Stdio R/W Speed |        7.67        |       15      |  1/1  |\n+--------+---------+-----------+---------+--------------------+--------------------+---------------+-------+\nResult: 4 OK\n\nCompleted in 55.57 sec\n```\n\nAnd execute one test from common test domain (`MBED_11`, one from peripheral connected to and available on both platforms (`PERF_1`), and one only for KL25Z platform (`KL25Z_4`).\n\n```\n$ singletest.py --auto -p SD -n MBED_11,PERF_1,KL25Z_5\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected KL25Z, port: COM89, mounted: E:\nMBEDLS: Detected LPC1768, port: COM77, mounted: H:\nBuilding library CMSIS (KL25Z, ARM)\nBuilding library MBED (KL25Z, ARM)\nBuilding project I2C_MMA8451Q (KL25Z, ARM)\nTargetTest::KL25Z::ARM::KL25Z_5::MMA8451Q accelerometer [OK] in 12.55 of 15 sec\nBuilding project TICKER (KL25Z, ARM)\nTargetTest::KL25Z::ARM::MBED_11::Ticker Int [OK] in 11.37 of 15 sec\nBuilding library FAT (KL25Z, ARM)\nBuilding project SD_PERF_STDIO (KL25Z, ARM)\nTargetTest::KL25Z::ARM::PERF_1::SD Stdio R/W Speed [OK] in 5.42 of 15 sec\nBuilding library CMSIS (LPC1768, ARM)\nBuilding library MBED (LPC1768, ARM)\nBuilding project TICKER (LPC1768, ARM)\nTargetTest::LPC1768::ARM::MBED_11::Ticker Int [OK] in 12.23 of 15 sec\nBuilding library FAT (LPC1768, ARM)\nBuilding project SD_PERF_STDIO (LPC1768, ARM)\nTargetTest::LPC1768::ARM::PERF_1::SD Stdio R/W Speed [OK] in 7.65 of 15 sec\nTest summary:\n+--------+---------+-----------+---------+------------------------+--------------------+---------------+-------+\n| Result | Target  | Toolchain | Test ID | Test Description       | Elapsed Time (sec) | Timeout (sec) | Loops |\n+--------+---------+-----------+---------+------------------------+--------------------+---------------+-------+\n| OK     | KL25Z   | ARM       | KL25Z_5 | MMA8451Q accelerometer |       12.55        |       15      |  1/1  |\n| OK     | KL25Z   | ARM       | MBED_11 | Ticker Int             |       11.37        |       15      |  1/1  |\n| OK     | KL25Z   | ARM       | PERF_1  | SD Stdio R/W Speed     |        5.42        |       15      |  1/1  |\n| OK     | LPC1768 | ARM       | MBED_11 | Ticker Int             |       12.23        |       15      |  1/1  |\n| OK     | LPC1768 | ARM       | PERF_1  | SD Stdio R/W Speed     |        7.65        |       15      |  1/1  |\n+--------+---------+-----------+---------+------------------------+--------------------+---------------+-------+\nResult: 5 OK\n\nCompleted in 73.61 sec\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/946",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/946/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/946/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/946/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/946",
    "id": 59777651,
    "number": 946,
    "title": "Update system_MKL05Z4.c",
    "user": {
      "login": "star297",
      "id": 6283197,
      "avatar_url": "https://avatars2.githubusercontent.com/u/6283197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/star297",
      "html_url": "https://github.com/star297",
      "followers_url": "https://api.github.com/users/star297/followers",
      "following_url": "https://api.github.com/users/star297/following{/other_user}",
      "gists_url": "https://api.github.com/users/star297/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/star297/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/star297/subscriptions",
      "organizations_url": "https://api.github.com/users/star297/orgs",
      "repos_url": "https://api.github.com/users/star297/repos",
      "events_url": "https://api.github.com/users/star297/events{/privacy}",
      "received_events_url": "https://api.github.com/users/star297/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-04T10:26:01Z",
    "updated_at": "2015-03-05T09:35:06Z",
    "closed_at": "2015-03-05T09:35:02Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/946",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/946",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/946.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/946.patch"
    },
    "body": "Added MCU internal oscillator 12pF loading capacitors, found not to be fitted to the FRDM board.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/945",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/945/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/945/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/945/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/945",
    "id": 59604348,
    "number": 945,
    "title": "Fix #940 - k64f a4/5 pinnames swap",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-03T07:16:38Z",
    "updated_at": "2015-06-09T11:49:03Z",
    "closed_at": "2015-03-03T07:53:09Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/945",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/945",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/945.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/945.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/944",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/944/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/944/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/944/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/944",
    "id": 59584292,
    "number": 944,
    "title": "[net] add target Seeed Arch Max (stm32f407)",
    "user": {
      "login": "xiongyihui",
      "id": 948283,
      "avatar_url": "https://avatars0.githubusercontent.com/u/948283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xiongyihui",
      "html_url": "https://github.com/xiongyihui",
      "followers_url": "https://api.github.com/users/xiongyihui/followers",
      "following_url": "https://api.github.com/users/xiongyihui/following{/other_user}",
      "gists_url": "https://api.github.com/users/xiongyihui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xiongyihui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xiongyihui/subscriptions",
      "organizations_url": "https://api.github.com/users/xiongyihui/orgs",
      "repos_url": "https://api.github.com/users/xiongyihui/repos",
      "events_url": "https://api.github.com/users/xiongyihui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xiongyihui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2015-03-03T02:06:22Z",
    "updated_at": "2015-03-12T11:27:34Z",
    "closed_at": "2015-03-10T08:20:03Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/944",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/944",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/944.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/944.patch"
    },
    "body": "net support for Seeed Arch Max (stm32f407 + dp83848, RMII interface)\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/943",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/943/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/943/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/943/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/943",
    "id": 59516607,
    "number": 943,
    "title": "KL05Z add OSC loading capacitors",
    "user": {
      "login": "star297",
      "id": 6283197,
      "avatar_url": "https://avatars2.githubusercontent.com/u/6283197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/star297",
      "html_url": "https://github.com/star297",
      "followers_url": "https://api.github.com/users/star297/followers",
      "following_url": "https://api.github.com/users/star297/following{/other_user}",
      "gists_url": "https://api.github.com/users/star297/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/star297/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/star297/subscriptions",
      "organizations_url": "https://api.github.com/users/star297/orgs",
      "repos_url": "https://api.github.com/users/star297/repos",
      "events_url": "https://api.github.com/users/star297/events{/privacy}",
      "received_events_url": "https://api.github.com/users/star297/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-02T17:52:52Z",
    "updated_at": "2015-03-04T11:17:35Z",
    "closed_at": "2015-03-04T11:17:35Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/943",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/943",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/943.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/943.patch"
    },
    "body": "External loading capacitors not fitted to FRDM board.\nAdded 12pF MCU oscillator loading capacitors.\nTested in normal and deep sleep/wake up modes.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/942",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/942/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/942/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/942/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/942",
    "id": 59485762,
    "number": 942,
    "title": "LPC824 Serial receive not registering  chars sent.",
    "user": {
      "login": "GustavWi",
      "id": 9265014,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9265014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GustavWi",
      "html_url": "https://github.com/GustavWi",
      "followers_url": "https://api.github.com/users/GustavWi/followers",
      "following_url": "https://api.github.com/users/GustavWi/following{/other_user}",
      "gists_url": "https://api.github.com/users/GustavWi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GustavWi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GustavWi/subscriptions",
      "organizations_url": "https://api.github.com/users/GustavWi/orgs",
      "repos_url": "https://api.github.com/users/GustavWi/repos",
      "events_url": "https://api.github.com/users/GustavWi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GustavWi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "toyowata",
      "id": 4926755,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4926755?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toyowata",
      "html_url": "https://github.com/toyowata",
      "followers_url": "https://api.github.com/users/toyowata/followers",
      "following_url": "https://api.github.com/users/toyowata/following{/other_user}",
      "gists_url": "https://api.github.com/users/toyowata/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toyowata/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toyowata/subscriptions",
      "organizations_url": "https://api.github.com/users/toyowata/orgs",
      "repos_url": "https://api.github.com/users/toyowata/repos",
      "events_url": "https://api.github.com/users/toyowata/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toyowata/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "toyowata",
        "id": 4926755,
        "avatar_url": "https://avatars3.githubusercontent.com/u/4926755?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toyowata",
        "html_url": "https://github.com/toyowata",
        "followers_url": "https://api.github.com/users/toyowata/followers",
        "following_url": "https://api.github.com/users/toyowata/following{/other_user}",
        "gists_url": "https://api.github.com/users/toyowata/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/toyowata/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/toyowata/subscriptions",
        "organizations_url": "https://api.github.com/users/toyowata/orgs",
        "repos_url": "https://api.github.com/users/toyowata/repos",
        "events_url": "https://api.github.com/users/toyowata/events{/privacy}",
        "received_events_url": "https://api.github.com/users/toyowata/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2015-03-02T14:13:01Z",
    "updated_at": "2015-04-07T06:19:34Z",
    "closed_at": "2015-04-07T06:19:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi I ran the example program serial echo (A9) on LPCXpresso824 -MAX. I tried it with GCC_ARM, uARM and IAR. The program is simply stuck in `while (!serial_readable(obj));`.\n\n```\nint serial_getc(serial_t *obj)\n{\n    while (!serial_readable(obj));\n    return obj->uart->RXDAT;\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/941",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/941/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/941/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/941/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/941",
    "id": 59458036,
    "number": 941,
    "title": "IAR support arch_ble, delta_defcm, hrm1017, nrf51_dk, nrf51_dongle, seed...",
    "user": {
      "login": "GustavWi",
      "id": 9265014,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9265014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GustavWi",
      "html_url": "https://github.com/GustavWi",
      "followers_url": "https://api.github.com/users/GustavWi/followers",
      "following_url": "https://api.github.com/users/GustavWi/following{/other_user}",
      "gists_url": "https://api.github.com/users/GustavWi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GustavWi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GustavWi/subscriptions",
      "organizations_url": "https://api.github.com/users/GustavWi/orgs",
      "repos_url": "https://api.github.com/users/GustavWi/repos",
      "events_url": "https://api.github.com/users/GustavWi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GustavWi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-02T09:40:09Z",
    "updated_at": "2015-03-04T09:48:42Z",
    "closed_at": "2015-03-04T09:48:42Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/941",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/941",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/941.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/941.patch"
    },
    "body": "..._tiny_ble.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/940",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/940/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/940/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/940/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/940",
    "id": 59457572,
    "number": 940,
    "title": "Bug in PinNames for TARGET_K64F",
    "user": {
      "login": "betzw",
      "id": 9551313,
      "avatar_url": "https://avatars3.githubusercontent.com/u/9551313?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/betzw",
      "html_url": "https://github.com/betzw",
      "followers_url": "https://api.github.com/users/betzw/followers",
      "following_url": "https://api.github.com/users/betzw/following{/other_user}",
      "gists_url": "https://api.github.com/users/betzw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/betzw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/betzw/subscriptions",
      "organizations_url": "https://api.github.com/users/betzw/orgs",
      "repos_url": "https://api.github.com/users/betzw/repos",
      "events_url": "https://api.github.com/users/betzw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/betzw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-02T09:35:42Z",
    "updated_at": "2015-03-03T07:53:09Z",
    "closed_at": "2015-03-03T07:53:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "There seems to be a mistake in file \"mbed/libraries/mbed/targets/hal/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_MCU_K64F/TARGET_FRDM/PinNames.h\" lines 237 and 238. In my opinion these should be:\n\n```\nA4 = PTC11,\nA5 = PTC10,\n```\n\nand **not** the other way round as it is right now (i.e. `A4 = PTC10` and  `A5 = PTC11`)\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/939",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/939/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/939/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/939/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/939",
    "id": 59204244,
    "number": 939,
    "title": "Target names - rename targets to be more descriptive",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-27T08:20:49Z",
    "updated_at": "2017-10-27T19:05:17Z",
    "closed_at": "2017-10-27T19:05:17Z",
    "author_association": "MEMBER",
    "body": "The NRF51822 target is inherited in the other platforms which are based on the same MCU. This is not true for other targets, for example K64F. A code snippet from targets.py:\n\n```\nclass K64F(Target):\n    def __init__(self):\n        Target.__init__(self)\n        self.core = \"Cortex-M4F\"\n        self.extra_labels = ['Freescale', 'KPSDK_MCUS', 'KPSDK_CODE', 'MCU_K64F', 'FRDM']\n        self.macros = [\"CPU_MK64FN1M0VMD12\", \"FSL_RTOS_MBED\"]\n        self.supported_toolchains = [\"ARM\", \"GCC_ARM\", \"IAR\"]\n        self.supported_form_factors = [\"ARDUINO\"]\n        self.is_disk_virtual = True\n        self.default_toolchain = \"ARM\"\n        self.detect_code = \"0240\"\n\nclass MTS_GAMBIT(Target):\n    def __init__(self):\n        Target.__init__(self)\n        self.core = \"Cortex-M4F\"\n        self.extra_labels = ['Freescale', 'KPSDK_MCUS', 'KPSDK_CODE', 'MCU_K64F']\n        self.supported_toolchains = [\"ARM\", \"GCC_ARM\"]\n        self.macros = [\"CPU_MK64FN1M0VMD12\", \"FSL_RTOS_MBED\", \"TARGET_K64F\"]\n        self.is_disk_virtual = True\n        self.default_toolchain = \"ARM\"\n\n```\n\nHow can we improve this targets naming? For the code above, rename K64F to FRDM-K64F or create a new base K64F class and FRDM-K64F and MTS_GAMBIT used is a base class ?\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/938",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/938/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/938/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/938/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/938",
    "id": 59100881,
    "number": 938,
    "title": "Added sleep and deepsleep for LPC11U68. Needs testing on board",
    "user": {
      "login": "bridadan",
      "id": 3123977,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3123977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridadan",
      "html_url": "https://github.com/bridadan",
      "followers_url": "https://api.github.com/users/bridadan/followers",
      "following_url": "https://api.github.com/users/bridadan/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridadan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridadan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridadan/subscriptions",
      "organizations_url": "https://api.github.com/users/bridadan/orgs",
      "repos_url": "https://api.github.com/users/bridadan/repos",
      "events_url": "https://api.github.com/users/bridadan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridadan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-26T16:46:59Z",
    "updated_at": "2015-04-09T06:58:29Z",
    "closed_at": "2015-04-09T06:58:29Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/938",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/938",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/938.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/938.patch"
    },
    "body": "The LPC11U68 target didn't have sleep defined for it, so I added it in this branch. I don't have the actual board, so this needs to be tested on the hardware.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/937",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/937/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/937/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/937/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/937",
    "id": 59091257,
    "number": 937,
    "title": "IAR support: Fixed stack and heap sizes for MTS DRAGONFLY and MTS MDOT F...",
    "user": {
      "login": "GustavWi",
      "id": 9265014,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9265014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GustavWi",
      "html_url": "https://github.com/GustavWi",
      "followers_url": "https://api.github.com/users/GustavWi/followers",
      "following_url": "https://api.github.com/users/GustavWi/following{/other_user}",
      "gists_url": "https://api.github.com/users/GustavWi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GustavWi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GustavWi/subscriptions",
      "organizations_url": "https://api.github.com/users/GustavWi/orgs",
      "repos_url": "https://api.github.com/users/GustavWi/repos",
      "events_url": "https://api.github.com/users/GustavWi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GustavWi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-26T15:47:07Z",
    "updated_at": "2015-02-28T07:06:03Z",
    "closed_at": "2015-02-28T07:06:03Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/937",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/937",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/937.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/937.patch"
    },
    "body": "...411RE\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/936",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/936/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/936/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/936/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/936",
    "id": 59083638,
    "number": 936,
    "title": "Issue #934: Handled condition when head is NULL.",
    "user": {
      "login": "jeremybrodt",
      "id": 9094656,
      "avatar_url": "https://avatars2.githubusercontent.com/u/9094656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeremybrodt",
      "html_url": "https://github.com/jeremybrodt",
      "followers_url": "https://api.github.com/users/jeremybrodt/followers",
      "following_url": "https://api.github.com/users/jeremybrodt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeremybrodt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeremybrodt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeremybrodt/subscriptions",
      "organizations_url": "https://api.github.com/users/jeremybrodt/orgs",
      "repos_url": "https://api.github.com/users/jeremybrodt/repos",
      "events_url": "https://api.github.com/users/jeremybrodt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeremybrodt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-26T14:54:28Z",
    "updated_at": "2015-03-04T15:07:44Z",
    "closed_at": "2015-03-03T07:09:58Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/936",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/936",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/936.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/936.patch"
    },
    "body": "Handled condition when head is NULL. Do you think it is acceptable to return 0 in this condition?\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/935",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/935/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/935/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/935/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/935",
    "id": 59068236,
    "number": 935,
    "title": "HAL - creating new SPI/SPIslave invokes format() and freq() twice",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-26T12:55:42Z",
    "updated_at": "2017-09-21T03:40:42Z",
    "closed_at": "2017-09-21T03:40:42Z",
    "author_association": "MEMBER",
    "body": "Format and frequency is set 2x when new SPI object is created.\n\nFrom SPI ctor:\n\n```\n    spi_init(&_spi, mosi, miso, sclk, NC);\n    spi_format(&_spi, _bits, _mode, 0);\n    spi_frequency(&_spi, _hz);\n```\n\nAnd in the spi_init() for most targets:\n\n```\n    // set default format and frequency\n    if (ssel == NC) {\n        spi_format(obj, 8, 0, 0);  // 8 bits, mode 0, master\n    } else {\n        spi_format(obj, 8, 0, 1);  // 8 bits, mode 0, slave\n    }\n    spi_frequency(obj, 1000000);\n```\n\nThis is a result of a PR #930 which was closed as ssel argument for SPI/SPISlave is not properly used. The main problem is to use ssel parameter in the HAL as slave/master selector.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/934",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/934/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/934/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/934/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/934",
    "id": 59058383,
    "number": 934,
    "title": "handle a case when head is NULL in us ticker get_next_timestamp()",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-26T11:25:48Z",
    "updated_at": "2015-03-03T07:10:25Z",
    "closed_at": "2015-03-03T07:10:25Z",
    "author_association": "MEMBER",
    "body": "This is current implementation\n\n```\ntimestamp_t us_ticker_get_next_timestamp(void) {\n    return head->timestamp;\n}\n```\n\nIt should handle a case when head is NULL - no events.\n\ncc @jeremybrodt, as it was added in #931 \n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/933",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/933/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/933/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/933/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/933",
    "id": 59033105,
    "number": 933,
    "title": "[RZ/A1H]Modify to support GCC and Fix some bugs of driver.",
    "user": {
      "login": "masaohamanaka",
      "id": 8746484,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8746484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/masaohamanaka",
      "html_url": "https://github.com/masaohamanaka",
      "followers_url": "https://api.github.com/users/masaohamanaka/followers",
      "following_url": "https://api.github.com/users/masaohamanaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/masaohamanaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/masaohamanaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/masaohamanaka/subscriptions",
      "organizations_url": "https://api.github.com/users/masaohamanaka/orgs",
      "repos_url": "https://api.github.com/users/masaohamanaka/repos",
      "events_url": "https://api.github.com/users/masaohamanaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/masaohamanaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-26T07:48:20Z",
    "updated_at": "2015-02-27T09:55:20Z",
    "closed_at": "2015-02-27T09:55:20Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/933",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/933",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/933.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/933.patch"
    },
    "body": "Hi,\n\nWe modify codes to support GCC.\nAnd fix somde bugs as below.\n- Serial\n  Serial driver would read 1Byte garbage data(0xFE) at first after reset and start.\n- Ticker\n  Ticker driver has the potential to loop infinitely.\n  Because, running \"us_ticker_irq_handler()\" from \"us_ticker_set_interrupt()\" before \"obj->next = p;\" of \"us_ticker_insert_event()\" is executed.\n\nRegards,\nHamanaka\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/932",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/932/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/932/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/932/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/932",
    "id": 58974137,
    "number": 932,
    "title": "Replace Nordic's appTimer with a driver for RTC1",
    "user": {
      "login": "rgrover",
      "id": 112704,
      "avatar_url": "https://avatars1.githubusercontent.com/u/112704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgrover",
      "html_url": "https://github.com/rgrover",
      "followers_url": "https://api.github.com/users/rgrover/followers",
      "following_url": "https://api.github.com/users/rgrover/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgrover/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgrover/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgrover/subscriptions",
      "organizations_url": "https://api.github.com/users/rgrover/orgs",
      "repos_url": "https://api.github.com/users/rgrover/repos",
      "events_url": "https://api.github.com/users/rgrover/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgrover/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-25T21:38:03Z",
    "updated_at": "2016-07-29T23:05:18Z",
    "closed_at": "2015-03-20T09:19:30Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/932",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/932",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/932.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/932.patch"
    },
    "body": "This requires careful review and testing. I've done a fair bit, but much more is needed.\nThis has been very tricky code owing mostly to:\n- trickiness involved in manipulating lists from re-entrant functions in interrupt context.\n- RTC counter being 24bit instead of 32bit.\n- us_ticker API receiving time in microseconds, whereas RTC counting in units of 1/32Khz.\n\nPlease review and test. I have a suspicion extensive testing may reveal more hardware related quirks which haven't been taken care of.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/931",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/931/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/931/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/931/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/931",
    "id": 58799121,
    "number": 931,
    "title": "Added function to get the timestamp of the next us_ticker event.",
    "user": {
      "login": "jeremybrodt",
      "id": 9094656,
      "avatar_url": "https://avatars2.githubusercontent.com/u/9094656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeremybrodt",
      "html_url": "https://github.com/jeremybrodt",
      "followers_url": "https://api.github.com/users/jeremybrodt/followers",
      "following_url": "https://api.github.com/users/jeremybrodt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeremybrodt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeremybrodt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeremybrodt/subscriptions",
      "organizations_url": "https://api.github.com/users/jeremybrodt/orgs",
      "repos_url": "https://api.github.com/users/jeremybrodt/repos",
      "events_url": "https://api.github.com/users/jeremybrodt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeremybrodt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2015-02-24T20:29:59Z",
    "updated_at": "2015-02-26T14:40:44Z",
    "closed_at": "2015-02-26T09:24:26Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/931",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/931",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/931.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/931.patch"
    },
    "body": "This function will allow us to have a tickless wakeup from deepstop using a low-speed RTC timer.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/930",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/930/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/930/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/930/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/930",
    "id": 58795968,
    "number": 930,
    "title": "Pass ssel PinName to spi_init() for hardware assisted SSEL control.",
    "user": {
      "login": "jeremybrodt",
      "id": 9094656,
      "avatar_url": "https://avatars2.githubusercontent.com/u/9094656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeremybrodt",
      "html_url": "https://github.com/jeremybrodt",
      "followers_url": "https://api.github.com/users/jeremybrodt/followers",
      "following_url": "https://api.github.com/users/jeremybrodt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeremybrodt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeremybrodt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeremybrodt/subscriptions",
      "organizations_url": "https://api.github.com/users/jeremybrodt/orgs",
      "repos_url": "https://api.github.com/users/jeremybrodt/repos",
      "events_url": "https://api.github.com/users/jeremybrodt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeremybrodt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2015-02-24T20:04:55Z",
    "updated_at": "2015-04-07T19:00:38Z",
    "closed_at": "2015-02-26T08:24:25Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/930",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/930",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/930.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/930.patch"
    },
    "body": "Some SPI master implementations control the slave select in hardware. Passing the pin name on to the C HAL for configuration.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/929",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/929/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/929/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/929/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/929",
    "id": 58751522,
    "number": 929,
    "title": "test suite: mbed assert detection",
    "user": {
      "login": "PrzemekWirkus",
      "id": 6360720,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6360720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PrzemekWirkus",
      "html_url": "https://github.com/PrzemekWirkus",
      "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
      "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
      "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
      "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
      "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
      "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-24T15:09:37Z",
    "updated_at": "2015-03-11T15:29:38Z",
    "closed_at": "2015-02-26T08:53:35Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/929",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/929",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/929.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/929.patch"
    },
    "body": "# Description\n\nCurrently when `MBED_ASSERT()` macro is used in test case source code or mbed SDK code as part of test case we do not detect assertion and test cases fail because of timeout (test case result: TIMEOUT).\nWe want to detect assertion and end test case as soon as possible.\n\nThis small update changes how host test supervising script looks for prints. Now we also check for mbed assertion printout and if found we exit with `MBED_ASSERT` test case test result.\n# Testing\n\nWe are looking for mbed assert string. Example mbed assert string structure:\n\n```\nmbed assertation failed: _pin[index], file: C:\\Work\\mbed-przemek\\libraries\\mbed\\common\\BusOut.cpp, line 82\n```\n## Example 1. mbed assert detection missing from host test supervising script:\n\n```\n$ singletest.py --auto -j 8 -n UT_BUSIO -V\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected KL46Z, port: COM40, mounted: I:\nBuilding library CMSIS (KL46Z, ARM)\nBuilding library MBED (KL46Z, ARM)\nBuilding library CPPUTEST (KL46Z, ARM)\nBuilding project BUS (KL46Z, ARM)\nExecuting 'python host_test.py -d I: -f \"C:\\Work\\mbed-przemek\\build\\test\\KL46Z\\ARM\\UT_BUSIO\\bus.bin\" -p COM40 -t 10 -C 4 -m KL46Z'\nTest::Output::Start\nMBED: Instrumentation: \"COM40\" and disk: \"I:\"\nHOST: Copy image onto target...\nHOST: Initialize serial port...\nHOST: Reset target...\nHOST: Property 'timeout' = '20'\nHOST: Property 'host_test_name' = 'default_auto'\nHOST: Property 'description' = 'Unit test'\nHOST: Property 'test_id' = 'UT'\nHOST: Start test...\nTEST(BusOut_digitalout_write, led_1_nc_2_nc_nc_3)\nC:\\Work\\mbed-przemek\\libraries\\tests\\utest\\bus\\busout_ut.cpp:83: error: Failure in TEST(BusOut_digitalout_write, led_1_nc_2_nc_nc_3)\n        CHECK(bus_data[0].read()) failed\n\n - 17 ms\nTEST(BusOut_digitalout_write, led_1_2_3_nc_nc) - 0 ms\nTEST(BusOut_digitalout_write, led_1_2_3) - 0 ms\nTEST(BusOut_digitalout_write, led_nc)mbed assertation failed: _pin[index], file: C:\\Work\\mbed-przemek\\libraries\\mbed\\common\\BusOut.cpp, line 82\nTest::Output::Finish\nTargetTest::KL46Z::ARM::UT_BUSIO::BusIn BusOut [MBED_ASSERT] in 1.41 of 20 sec\nTest summary:\n+-------------+--------+-----------+----------+------------------+--------------------+---------------+-------+\n| Result      | Target | Toolchain | Test ID  | Test Description | Elapsed Time (sec) | Timeout (sec) | Loops |\n+-------------+--------+-----------+----------+------------------+--------------------+---------------+-------+\n| TIMEOUT     | KL46Z  | ARM       | UT_BUSIO | BusIn BusOut     |        20.0        |       20      |  0/1  |\n+-------------+--------+-----------+----------+------------------+--------------------+---------------+-------+\nResult: 1 TIMEOUT\n\nCompleted in 22.3 sec\n```\n## Example 2. mbed assert detection added to host test supervising script:\n\n```\n$ singletest.py --auto -j 8 -n UT_BUSIO -V\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected KL46Z, port: COM40, mounted: I:\nBuilding library CMSIS (KL46Z, ARM)\nBuilding library MBED (KL46Z, ARM)\nBuilding library CPPUTEST (KL46Z, ARM)\nBuilding project BUS (KL46Z, ARM)\nExecuting 'python host_test.py -d I: -f \"C:\\Work\\mbed-przemek\\build\\test\\KL46Z\\ARM\\UT_BUSIO\\bus.bin\" -p COM40 -t 10 -C 4 -m KL46Z'\nTest::Output::Start\nMBED: Instrumentation: \"COM40\" and disk: \"I:\"\nHOST: Copy image onto target...\nHOST: Initialize serial port...\nHOST: Reset target...\nHOST: Property 'timeout' = '20'\nHOST: Property 'host_test_name' = 'default_auto'\nHOST: Property 'description' = 'Unit test'\nHOST: Property 'test_id' = 'UT'\nHOST: Start test...\nTEST(BusOut_digitalout_write, led_1_nc_2_nc_nc_3)\nC:\\Work\\mbed-przemek\\libraries\\tests\\utest\\bus\\busout_ut.cpp:83: error: Failure in TEST(BusOut_digitalout_write, led_1_nc_2_nc_nc_3)\n        CHECK(bus_data[0].read()) failed\n\n - 17 ms\nTEST(BusOut_digitalout_write, led_1_2_3_nc_nc) - 0 ms\nTEST(BusOut_digitalout_write, led_1_2_3) - 0 ms\nTEST(BusOut_digitalout_write, led_nc)mbed assertation failed: _pin[index], file: C:\\Work\\mbed-przemek\\libraries\\mbed\\common\\BusOut.cpp, line 82\nTest::Output::Finish\nTargetTest::KL46Z::ARM::UT_BUSIO::BusIn BusOut [MBED_ASSERT] in 1.41 of 20 sec\nTest summary:\n+-------------+--------+-----------+----------+------------------+--------------------+---------------+-------+\n| Result      | Target | Toolchain | Test ID  | Test Description | Elapsed Time (sec) | Timeout (sec) | Loops |\n+-------------+--------+-----------+----------+------------------+--------------------+---------------+-------+\n| MBED_ASSERT | KL46Z  | ARM       | UT_BUSIO | BusIn BusOut     |        1.41        |       20      |  0/1  |\n+-------------+--------+-----------+----------+------------------+--------------------+---------------+-------+\nResult: 1 MBED_ASSERT\n\nCompleted in 8.36 sec\n```\n## Test suite regression for one board (expected one assert for UT_BUSOUT unit test)\n\n```\n$ singletest.py --auto -V\nTest summary:\n+-------------+--------+-----------+-------------+---------------------------------------+--------------------+---------------+-------+\n| Result      | Target | Toolchain | Test ID     | Test Description                      | Elapsed Time (sec) | Timeout (sec) | Loops |\n+-------------+--------+-----------+-------------+---------------------------------------+--------------------+---------------+-------+\n| OK          | KL46Z  | ARM       | DTCT_1      | Simple detect test                    |        0.52        |       10      |  1/1  |\n| OK          | KL46Z  | ARM       | EXAMPLE_1   | /dev/null                             |        3.49        |       20      |  1/1  |\n| OK          | KL46Z  | ARM       | KL25Z_5     | MMA8451Q accelerometer                |       12.52        |       15      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_10     | Hello World                           |        0.47        |       5       |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_11     | Ticker Int                            |       11.43        |       15      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_12     | C++                                   |        1.41        |       10      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_16     | RTC                                   |        4.66        |       20      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_2      | stdio                                 |        0.78        |       20      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_23     | Ticker Int us                         |       11.44        |       15      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_24     | Timeout Int us                        |        11.6        |       15      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_25     | Time us                               |       11.48        |       15      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_26     | Integer constant division             |        1.39        |       20      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_34     | Ticker Two callbacks                  |        11.4        |       15      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_A1     | Basic                                 |        1.39        |       20      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_A21    | Call function before main (mbed_main) |        1.45        |       20      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_A9     | Serial Echo at 115200                 |        5.84        |       20      |  1/1  |\n| OK          | KL46Z  | ARM       | MBED_BUSOUT | BusOut                                |        2.31        |       15      |  1/1  |\n| OK          | KL46Z  | ARM       | RTOS_1      | Basic thread                          |        11.4        |       15      |  1/1  |\n| OK          | KL46Z  | ARM       | RTOS_2      | Mutex resource lock                   |       11.54        |       20      |  1/1  |\n| OK          | KL46Z  | ARM       | RTOS_3      | Semaphore resource lock               |        8.47        |       20      |  1/1  |\n| OK          | KL46Z  | ARM       | RTOS_4      | Signals messaging                     |        6.45        |       20      |  1/1  |\n| OK          | KL46Z  | ARM       | RTOS_5      | Queue messaging                       |        2.44        |       20      |  1/1  |\n| OK          | KL46Z  | ARM       | RTOS_6      | Mail messaging                        |        2.43        |       20      |  1/1  |\n| OK          | KL46Z  | ARM       | RTOS_7      | Timer                                 |       11.43        |       15      |  1/1  |\n| OK          | KL46Z  | ARM       | RTOS_8      | ISR (Queue)                           |        6.45        |       20      |  1/1  |\n| MBED_ASSERT | KL46Z  | ARM       | UT_BUSIO    | BusIn BusOut                          |        1.44        |       20      |  0/1  |\n+-------------+--------+-----------+-------------+---------------------------------------+--------------------+---------------+-------+\nResult: 1 MBED_ASSERT / 25 OK\n\nCompleted in 301.12 sec\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/928",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/928/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/928/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/928/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/928",
    "id": 58702162,
    "number": 928,
    "title": "Added NZ32ST1L Target",
    "user": {
      "login": "modtronix-com",
      "id": 1164133,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1164133?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/modtronix-com",
      "html_url": "https://github.com/modtronix-com",
      "followers_url": "https://api.github.com/users/modtronix-com/followers",
      "following_url": "https://api.github.com/users/modtronix-com/following{/other_user}",
      "gists_url": "https://api.github.com/users/modtronix-com/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/modtronix-com/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/modtronix-com/subscriptions",
      "organizations_url": "https://api.github.com/users/modtronix-com/orgs",
      "repos_url": "https://api.github.com/users/modtronix-com/repos",
      "events_url": "https://api.github.com/users/modtronix-com/events{/privacy}",
      "received_events_url": "https://api.github.com/users/modtronix-com/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2015-02-24T07:15:52Z",
    "updated_at": "2015-05-21T09:39:02Z",
    "closed_at": "2015-05-21T08:59:51Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/928",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/928",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/928.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/928.patch"
    },
    "body": "Added NZ32ST1L Target from modtronix.com, it uses the STM32L151RC cpu.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/927",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/927/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/927/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/927/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/927",
    "id": 58511785,
    "number": 927,
    "title": "Warnings in Ethernet Interface library",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-22T18:07:53Z",
    "updated_at": "2017-10-27T19:05:26Z",
    "closed_at": "2017-10-27T19:05:26Z",
    "author_association": "MEMBER",
    "body": "There were few issues reported to mbed-src, warnings which should be fixed.\n\nReported by David Godfrey : \nhttp://developer.mbed.org/users/mbed_official/code/EthernetInterface/issues/5\nhttps://developer.mbed.org/users/mbed_official/code/EthernetInterface/issues/3\nhttps://developer.mbed.org/users/mbed_official/code/EthernetInterface/issues/4\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/926",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/926/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/926/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/926/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/926",
    "id": 58500940,
    "number": 926,
    "title": "[API] Added option to modify RTC source",
    "user": {
      "login": "Sissors",
      "id": 5982704,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5982704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sissors",
      "html_url": "https://github.com/Sissors",
      "followers_url": "https://api.github.com/users/Sissors/followers",
      "following_url": "https://api.github.com/users/Sissors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sissors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sissors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sissors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sissors/orgs",
      "repos_url": "https://api.github.com/users/Sissors/repos",
      "events_url": "https://api.github.com/users/Sissors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sissors/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-22T12:21:31Z",
    "updated_at": "2015-03-22T14:09:50Z",
    "closed_at": "2015-03-09T11:16:52Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/926",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/926",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/926.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/926.patch"
    },
    "body": "Initially from Karls question here:\nhttp://developer.mbed.org/questions/6337/setTime-and-time-exported-with-__weak-fo/#answer6545?compage=1#c15936.\nCurrently the C time functions only work with internal RTC. Sometimes\nyou either want to use an external one, or your target does not even\nhave an internal RTC. I added function attach_rtc(...) where the default\nfunctions can be overridden at runtime.\n\nVerified it to work properly with LPC1768/LPC11u24, both with and without DS1307 RTC connected and used as source for time. I don't think the init and isenabled functions are really important to have, but you can just set them as NULL (did so myself when testing).\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/925",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/925/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/925/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/925/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/925",
    "id": 58444496,
    "number": 925,
    "title": "Update nRF51822.sct",
    "user": {
      "login": "sg-",
      "id": 496002,
      "avatar_url": "https://avatars1.githubusercontent.com/u/496002?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sg-",
      "html_url": "https://github.com/sg-",
      "followers_url": "https://api.github.com/users/sg-/followers",
      "following_url": "https://api.github.com/users/sg-/following{/other_user}",
      "gists_url": "https://api.github.com/users/sg-/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sg-/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sg-/subscriptions",
      "organizations_url": "https://api.github.com/users/sg-/orgs",
      "repos_url": "https://api.github.com/users/sg-/repos",
      "events_url": "https://api.github.com/users/sg-/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sg-/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-21T05:41:27Z",
    "updated_at": "2015-02-25T20:50:03Z",
    "closed_at": "2015-02-21T14:56:23Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/925",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/925",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/925.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/925.patch"
    },
    "body": "FIx copy paste error in RAM size when softdevice isn't used\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/924",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/924/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/924/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/924/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/924",
    "id": 58363833,
    "number": 924,
    "title": "Issue #910. Added debug file with predefined hardware debug settings. Wh...",
    "user": {
      "login": "GustavWi",
      "id": 9265014,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9265014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GustavWi",
      "html_url": "https://github.com/GustavWi",
      "followers_url": "https://api.github.com/users/GustavWi/followers",
      "following_url": "https://api.github.com/users/GustavWi/following{/other_user}",
      "gists_url": "https://api.github.com/users/GustavWi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GustavWi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GustavWi/subscriptions",
      "organizations_url": "https://api.github.com/users/GustavWi/orgs",
      "repos_url": "https://api.github.com/users/GustavWi/repos",
      "events_url": "https://api.github.com/users/GustavWi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GustavWi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-20T14:59:47Z",
    "updated_at": "2015-02-24T11:18:55Z",
    "closed_at": "2015-02-24T11:18:55Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/924",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/924",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/924.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/924.patch"
    },
    "body": "...en user exports to IAR the project has all the necessary settings so the user can immediately flash the program\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/923",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/923/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/923/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/923/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/923",
    "id": 58347180,
    "number": 923,
    "title": "enable the additional uart 7&8 of the STM32F439 in the mbed sdk/api ",
    "user": {
      "login": "mazgch",
      "id": 5808299,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5808299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mazgch",
      "html_url": "https://github.com/mazgch",
      "followers_url": "https://api.github.com/users/mazgch/followers",
      "following_url": "https://api.github.com/users/mazgch/following{/other_user}",
      "gists_url": "https://api.github.com/users/mazgch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mazgch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mazgch/subscriptions",
      "organizations_url": "https://api.github.com/users/mazgch/orgs",
      "repos_url": "https://api.github.com/users/mazgch/repos",
      "events_url": "https://api.github.com/users/mazgch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mazgch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-20T12:41:11Z",
    "updated_at": "2015-02-20T17:54:15Z",
    "closed_at": "2015-02-20T17:54:15Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/923",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/923",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/923.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/923.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/922",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/922/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/922/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/922/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/922",
    "id": 58323088,
    "number": 922,
    "title": "[RZ/A1H]Increase private thread num.",
    "user": {
      "login": "masaohamanaka",
      "id": 8746484,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8746484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/masaohamanaka",
      "html_url": "https://github.com/masaohamanaka",
      "followers_url": "https://api.github.com/users/masaohamanaka/followers",
      "following_url": "https://api.github.com/users/masaohamanaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/masaohamanaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/masaohamanaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/masaohamanaka/subscriptions",
      "organizations_url": "https://api.github.com/users/masaohamanaka/orgs",
      "repos_url": "https://api.github.com/users/masaohamanaka/repos",
      "events_url": "https://api.github.com/users/masaohamanaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/masaohamanaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-20T08:38:34Z",
    "updated_at": "2015-02-23T18:20:38Z",
    "closed_at": "2015-02-23T18:20:38Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/922",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/922",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/922.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/922.patch"
    },
    "body": "Hi,\n\nWe modify OS setting of private thread num.\nIncrease private thread num.\n\nRegards,\nHamanaka\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/921",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/921/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/921/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/921/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/921",
    "id": 58294263,
    "number": 921,
    "title": "Output extension handling and echo test improvement",
    "user": {
      "login": "screamerbg",
      "id": 5940648,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5940648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/screamerbg",
      "html_url": "https://github.com/screamerbg",
      "followers_url": "https://api.github.com/users/screamerbg/followers",
      "following_url": "https://api.github.com/users/screamerbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/screamerbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/screamerbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/screamerbg/subscriptions",
      "organizations_url": "https://api.github.com/users/screamerbg/orgs",
      "repos_url": "https://api.github.com/users/screamerbg/repos",
      "events_url": "https://api.github.com/users/screamerbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/screamerbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-20T00:38:07Z",
    "updated_at": "2015-02-24T11:05:37Z",
    "closed_at": "2015-02-24T11:05:37Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/921",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/921",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/921.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/921.patch"
    },
    "body": "Changes\n- Better output extension handling in link_program()\n- Minor improvement to the echo test\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/920",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/920/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/920/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/920/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/920",
    "id": 58266050,
    "number": 920,
    "title": "USART2 issue on STM32F411RE Nucleo",
    "user": {
      "login": "joetijerina",
      "id": 11080735,
      "avatar_url": "https://avatars3.githubusercontent.com/u/11080735?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joetijerina",
      "html_url": "https://github.com/joetijerina",
      "followers_url": "https://api.github.com/users/joetijerina/followers",
      "following_url": "https://api.github.com/users/joetijerina/following{/other_user}",
      "gists_url": "https://api.github.com/users/joetijerina/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joetijerina/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joetijerina/subscriptions",
      "organizations_url": "https://api.github.com/users/joetijerina/orgs",
      "repos_url": "https://api.github.com/users/joetijerina/repos",
      "events_url": "https://api.github.com/users/joetijerina/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joetijerina/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-19T20:36:23Z",
    "updated_at": "2017-05-03T02:33:25Z",
    "closed_at": "2017-05-03T02:33:25Z",
    "author_association": "NONE",
    "body": "There seems to be a problem with USART2 on the STM32F411 Nucleo board.\n\nWhen streaming a file through the device (with a PC on both\nsides) to exercise the serial ports (simple passthrough application using the MBED Serial class)\n\n```\n// USART2\nSerial usb(USBTX, USBRX);\n// USART1\nSerial ext(D8, D2);\nusb.baud(<some baud>);\next.baud(<some baud>);\nwhile (true) {\nif (usb.readable())\n    ext.putc(usb.getc());\nif (ext.readable())\n    usb.putc(ext.getc());\n}\n```\n\nTest was against revision 06e2b3c8802cb4f78e9958ba9923755bd458e8b7\nof the master branch of https://github.com/mbedmicro/mbed, building with both the GCC ARM Embedded and IAR toolchains.  Also tested against code built against revision 93 of the MBED library in the online compiler.  The issue usually manifests itself when streaming data into USART1 or USART6 and out USART2.  The file being streamed through is ASCII text and is ~100kB in size.\n\nAt low baud rates (less than 57600), all the data seems to make it through.  At higher baud rates, however, only the first 1 - 5 kB of data is seen on the other side and have to reset the Nucleo board before you can get more data through.  \n\nCan you look into this issue and let me know if you also notice the same problem and provide a solution? If a bug is found in the driver stack, please update the mbed library and notify me.\n\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/919",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/919/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/919/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/919/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/919",
    "id": 57879479,
    "number": 919,
    "title": "mbed: support no color messages",
    "user": {
      "login": "jrjang",
      "id": 1472070,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1472070?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrjang",
      "html_url": "https://github.com/jrjang",
      "followers_url": "https://api.github.com/users/jrjang/followers",
      "following_url": "https://api.github.com/users/jrjang/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrjang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrjang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrjang/subscriptions",
      "organizations_url": "https://api.github.com/users/jrjang/orgs",
      "repos_url": "https://api.github.com/users/jrjang/repos",
      "events_url": "https://api.github.com/users/jrjang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrjang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-02-17T03:30:55Z",
    "updated_at": "2015-02-17T17:45:45Z",
    "closed_at": "2015-02-17T17:45:45Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/919",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/919",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/919.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/919.patch"
    },
    "body": "colorama module is not installed in python by default.\n\nChange-Id: I99f9bace71447198a4c2103d8423d367d66a3fe6\nSigned-off-by: Jun-Ru Chang jrjang@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/918",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/918/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/918/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/918/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/918",
    "id": 57795022,
    "number": 918,
    "title": "[Export][GCC_ARM][Makefile][tmpl] Fixed parallel build errro and others.",
    "user": {
      "login": "dinau",
      "id": 442455,
      "avatar_url": "https://avatars0.githubusercontent.com/u/442455?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dinau",
      "html_url": "https://github.com/dinau",
      "followers_url": "https://api.github.com/users/dinau/followers",
      "following_url": "https://api.github.com/users/dinau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dinau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dinau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dinau/subscriptions",
      "organizations_url": "https://api.github.com/users/dinau/orgs",
      "repos_url": "https://api.github.com/users/dinau/repos",
      "events_url": "https://api.github.com/users/dinau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dinau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-16T11:48:41Z",
    "updated_at": "2015-02-17T14:36:34Z",
    "closed_at": "2015-02-17T14:36:33Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/918",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/918",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/918.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/918.patch"
    },
    "body": "- Additional maintenance.\n  Refer to commit  #708 .\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/917",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/917/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/917/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/917/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/917",
    "id": 57785831,
    "number": 917,
    "title": "Fix for #908, exit req std namespace",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-16T10:12:36Z",
    "updated_at": "2015-02-16T10:30:15Z",
    "closed_at": "2015-02-16T10:25:33Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/917",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/917",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/917.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/917.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/916",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/916/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/916/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/916/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/916",
    "id": 57648041,
    "number": 916,
    "title": "OS dependent copy call in exporter scripts",
    "user": {
      "login": "BlackstoneEngineering",
      "id": 5093331,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5093331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BlackstoneEngineering",
      "html_url": "https://github.com/BlackstoneEngineering",
      "followers_url": "https://api.github.com/users/BlackstoneEngineering/followers",
      "following_url": "https://api.github.com/users/BlackstoneEngineering/following{/other_user}",
      "gists_url": "https://api.github.com/users/BlackstoneEngineering/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BlackstoneEngineering/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BlackstoneEngineering/subscriptions",
      "organizations_url": "https://api.github.com/users/BlackstoneEngineering/orgs",
      "repos_url": "https://api.github.com/users/BlackstoneEngineering/repos",
      "events_url": "https://api.github.com/users/BlackstoneEngineering/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BlackstoneEngineering/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-13T20:12:30Z",
    "updated_at": "2016-07-29T23:05:50Z",
    "closed_at": "2015-02-19T16:57:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "in the workspace_tools/export/**init**.py file, the export function does this\n\n``` python\n if ide is None:\n        # Simply copy everything, no project files to be generated\n        for d in ['src', 'lib']:\n            os.system(\"cp -r %s/* %s\" % (join(project_path, d), tempdir))\n        report = {'success': True}\n```\n\nthat os.system call uses cp -r, which is not OS independent. This should get fixed or its going to bite us.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/915",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/915/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/915/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/915/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/915",
    "id": 57647734,
    "number": 915,
    "title": "Update to Offline Exporters",
    "user": {
      "login": "BlackstoneEngineering",
      "id": 5093331,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5093331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BlackstoneEngineering",
      "html_url": "https://github.com/BlackstoneEngineering",
      "followers_url": "https://api.github.com/users/BlackstoneEngineering/followers",
      "following_url": "https://api.github.com/users/BlackstoneEngineering/following{/other_user}",
      "gists_url": "https://api.github.com/users/BlackstoneEngineering/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BlackstoneEngineering/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BlackstoneEngineering/subscriptions",
      "organizations_url": "https://api.github.com/users/BlackstoneEngineering/orgs",
      "repos_url": "https://api.github.com/users/BlackstoneEngineering/repos",
      "events_url": "https://api.github.com/users/BlackstoneEngineering/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BlackstoneEngineering/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-13T20:09:54Z",
    "updated_at": "2015-02-15T11:06:07Z",
    "closed_at": "2015-02-15T11:06:07Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/915",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/915",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/915.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/915.patch"
    },
    "body": "Changed the URL for getting started with offline exporters, as per @screamerbg 's request.\nAdded .hgignore file to make bringing files back online easier. \n\n@sg- over here\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/914",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/914/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/914/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/914/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/914",
    "id": 57612080,
    "number": 914,
    "title": "LPC11U68 build support extended to ARM toolchain, uvision export template added",
    "user": {
      "login": "NitinBhaskar",
      "id": 7971634,
      "avatar_url": "https://avatars1.githubusercontent.com/u/7971634?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NitinBhaskar",
      "html_url": "https://github.com/NitinBhaskar",
      "followers_url": "https://api.github.com/users/NitinBhaskar/followers",
      "following_url": "https://api.github.com/users/NitinBhaskar/following{/other_user}",
      "gists_url": "https://api.github.com/users/NitinBhaskar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NitinBhaskar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NitinBhaskar/subscriptions",
      "organizations_url": "https://api.github.com/users/NitinBhaskar/orgs",
      "repos_url": "https://api.github.com/users/NitinBhaskar/repos",
      "events_url": "https://api.github.com/users/NitinBhaskar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NitinBhaskar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-13T15:30:25Z",
    "updated_at": "2015-02-16T08:33:41Z",
    "closed_at": "2015-02-16T08:33:41Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/914",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/914",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/914.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/914.patch"
    },
    "body": "LPC11U68 build support extended to ARM toolchain, uvision export template added\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/913",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/913/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/913/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/913/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/913",
    "id": 57608702,
    "number": 913,
    "title": "Nucleo F401RE Target: Ticker BUG - Device freezes after 72 minutes",
    "user": {
      "login": "drbugfinder",
      "id": 5452794,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5452794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drbugfinder",
      "html_url": "https://github.com/drbugfinder",
      "followers_url": "https://api.github.com/users/drbugfinder/followers",
      "following_url": "https://api.github.com/users/drbugfinder/following{/other_user}",
      "gists_url": "https://api.github.com/users/drbugfinder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drbugfinder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drbugfinder/subscriptions",
      "organizations_url": "https://api.github.com/users/drbugfinder/orgs",
      "repos_url": "https://api.github.com/users/drbugfinder/repos",
      "events_url": "https://api.github.com/users/drbugfinder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drbugfinder/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-13T15:03:52Z",
    "updated_at": "2015-02-13T15:22:53Z",
    "closed_at": "2015-02-13T15:20:49Z",
    "author_association": "NONE",
    "body": "Used online IDE/compiler (so I assume that this will be the latest mbed version). It is definitely the problem described and commented by me in the following link:\n\nhttp://developer.mbed.org/questions/5291/Timeouts-stop-working-at-desired-rate-af/\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/912",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/912/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/912/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/912/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/912",
    "id": 57600720,
    "number": 912,
    "title": "Fix export_test.py extra_symbols issue.",
    "user": {
      "login": "Timmmm",
      "id": 376842,
      "avatar_url": "https://avatars3.githubusercontent.com/u/376842?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Timmmm",
      "html_url": "https://github.com/Timmmm",
      "followers_url": "https://api.github.com/users/Timmmm/followers",
      "following_url": "https://api.github.com/users/Timmmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/Timmmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Timmmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Timmmm/subscriptions",
      "organizations_url": "https://api.github.com/users/Timmmm/orgs",
      "repos_url": "https://api.github.com/users/Timmmm/repos",
      "events_url": "https://api.github.com/users/Timmmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Timmmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-13T13:51:47Z",
    "updated_at": "2015-02-19T10:02:34Z",
    "closed_at": "2015-02-19T10:02:30Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/912",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/912",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/912.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/912.patch"
    },
    "body": "Apparently the export() function takes an extra_symbols parameter that wasn't being passed, causing runtime errors. This fixes it.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/911",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/911/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/911/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/911/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/911",
    "id": 57572761,
    "number": 911,
    "title": "ST Nucleo F334R8 - PwmOut not working",
    "user": {
      "login": "samcol02",
      "id": 10989870,
      "avatar_url": "https://avatars1.githubusercontent.com/u/10989870?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samcol02",
      "html_url": "https://github.com/samcol02",
      "followers_url": "https://api.github.com/users/samcol02/followers",
      "following_url": "https://api.github.com/users/samcol02/following{/other_user}",
      "gists_url": "https://api.github.com/users/samcol02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samcol02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samcol02/subscriptions",
      "organizations_url": "https://api.github.com/users/samcol02/orgs",
      "repos_url": "https://api.github.com/users/samcol02/repos",
      "events_url": "https://api.github.com/users/samcol02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samcol02/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-02-13T08:39:23Z",
    "updated_at": "2017-01-11T09:13:59Z",
    "closed_at": "2017-01-11T09:13:59Z",
    "author_association": "NONE",
    "body": "On ST Nucleo F334R8, the PwmOut class does not drive any of the PWM pins correctly. After setup, the value is always high, regardless of period or pulsewidth.\n\nThe example code I was using at the time is linked below:\nhttps://developer.mbed.org/users/gask0032/code/Nucleo_pwm/\n\nThe mbed library (revision 93:e188a91d3eaa) and firmware (V2.J23.M6) were all up to date.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/910",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/910/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/910/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/910/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/910",
    "id": 57458282,
    "number": 910,
    "title": "IAR templates for Kinetis - Simulator as debugger",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-12T13:13:09Z",
    "updated_at": "2015-02-24T11:18:55Z",
    "closed_at": "2015-02-24T11:18:55Z",
    "author_association": "MEMBER",
    "body": "As I was testing the PR, I used KL25Z to export blinky project. The exported project has predefined Simulator. Once I set it to CMSIS-DAP, the default flash algo are used which are not correct. Received flash write errors and application did not run. I recall flash algo should be overwrittten to Freescale provided in the Freescale folder.\n\n@GustavWi Shall we change the templates to work out of the box?\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/909",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/909/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/909/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/909/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/909",
    "id": 57435507,
    "number": 909,
    "title": "Fix #902",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-12T09:22:52Z",
    "updated_at": "2015-02-12T10:48:14Z",
    "closed_at": "2015-02-12T10:45:33Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/909",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/909",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/909.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/909.patch"
    },
    "body": "This reverts NRF51822 RTOS support, so building should fail. As it does not have Systick.\n\nI added also the target to travis.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/908",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/908/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/908/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/908/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/908",
    "id": 57430473,
    "number": 908,
    "title": "Move exit override to retarget.cpp",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-12T08:24:24Z",
    "updated_at": "2015-02-12T21:41:27Z",
    "closed_at": "2015-02-12T13:10:17Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/908",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/908",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/908.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/908.patch"
    },
    "body": "I moved the exit handler from exit.c to retarget.cpp where the rest of\nthe standard C library retargetting routines are found.  The exported\nmakefiles already explicitly link in retarget.o but not exit.o\nWhen building with the GNU toolchain, it is safest to link in the\nobject file directly for retargetting routines so that GNU linker has\nto use these versions of the routines.\n\nTesting:\nI have only tested this change with GCC_ARM. It should really be\ntested with more toolchains before getting merged.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/907",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/907/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/907/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/907/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/907",
    "id": 57393348,
    "number": 907,
    "title": "Update gcc_arm_nrf51_dk.tmpl",
    "user": {
      "login": "ffranchina",
      "id": 8852116,
      "avatar_url": "https://avatars1.githubusercontent.com/u/8852116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ffranchina",
      "html_url": "https://github.com/ffranchina",
      "followers_url": "https://api.github.com/users/ffranchina/followers",
      "following_url": "https://api.github.com/users/ffranchina/following{/other_user}",
      "gists_url": "https://api.github.com/users/ffranchina/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ffranchina/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ffranchina/subscriptions",
      "organizations_url": "https://api.github.com/users/ffranchina/orgs",
      "repos_url": "https://api.github.com/users/ffranchina/repos",
      "events_url": "https://api.github.com/users/ffranchina/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ffranchina/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-11T23:20:08Z",
    "updated_at": "2015-02-12T12:41:22Z",
    "closed_at": "2015-02-12T12:41:22Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/907",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/907",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/907.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/907.patch"
    },
    "body": "Changed the SoftDevice path according to the directory structure\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/906",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/906/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/906/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/906/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/906",
    "id": 57358521,
    "number": 906,
    "title": "Create pwmout_api.c",
    "user": {
      "login": "Willem23",
      "id": 10687540,
      "avatar_url": "https://avatars0.githubusercontent.com/u/10687540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Willem23",
      "html_url": "https://github.com/Willem23",
      "followers_url": "https://api.github.com/users/Willem23/followers",
      "following_url": "https://api.github.com/users/Willem23/following{/other_user}",
      "gists_url": "https://api.github.com/users/Willem23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Willem23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Willem23/subscriptions",
      "organizations_url": "https://api.github.com/users/Willem23/orgs",
      "repos_url": "https://api.github.com/users/Willem23/repos",
      "events_url": "https://api.github.com/users/Willem23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Willem23/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-11T18:47:19Z",
    "updated_at": "2015-03-21T13:52:32Z",
    "closed_at": "2015-02-24T13:36:01Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/906",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/906",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/906.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/906.patch"
    },
    "body": "Added PWM support for the LPC812 using the SCT. Code was ported from LPC824 libs.\nFirst needed to modify us_ticker() to free up the SCT and use the MRT instead.\nPWM can support a maximum of 4 channels using any portpin. All channels will use the same period.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/905",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/905/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/905/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/905/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/905",
    "id": 57357250,
    "number": 905,
    "title": "Update us_ticker.c",
    "user": {
      "login": "Willem23",
      "id": 10687540,
      "avatar_url": "https://avatars0.githubusercontent.com/u/10687540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Willem23",
      "html_url": "https://github.com/Willem23",
      "followers_url": "https://api.github.com/users/Willem23/followers",
      "following_url": "https://api.github.com/users/Willem23/following{/other_user}",
      "gists_url": "https://api.github.com/users/Willem23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Willem23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Willem23/subscriptions",
      "organizations_url": "https://api.github.com/users/Willem23/orgs",
      "repos_url": "https://api.github.com/users/Willem23/repos",
      "events_url": "https://api.github.com/users/Willem23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Willem23/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2015-02-11T18:37:33Z",
    "updated_at": "2015-02-24T13:36:38Z",
    "closed_at": "2015-02-24T13:36:38Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/905",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/905",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/905.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/905.patch"
    },
    "body": "Using MRT instead of SCT, needed to free up SCT for PWM\nCode ported from LPC824 libs\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/904",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/904/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/904/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/904/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/904",
    "id": 57327859,
    "number": 904,
    "title": "Fixed issue #903 IAR linker nrf51 rtos",
    "user": {
      "login": "GustavWi",
      "id": 9265014,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9265014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GustavWi",
      "html_url": "https://github.com/GustavWi",
      "followers_url": "https://api.github.com/users/GustavWi/followers",
      "following_url": "https://api.github.com/users/GustavWi/following{/other_user}",
      "gists_url": "https://api.github.com/users/GustavWi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GustavWi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GustavWi/subscriptions",
      "organizations_url": "https://api.github.com/users/GustavWi/orgs",
      "repos_url": "https://api.github.com/users/GustavWi/repos",
      "events_url": "https://api.github.com/users/GustavWi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GustavWi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-11T15:10:37Z",
    "updated_at": "2015-02-11T15:31:32Z",
    "closed_at": "2015-02-11T15:31:32Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/904",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/904",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/904.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/904.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/903",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/903/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/903/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/903/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/903",
    "id": 57319043,
    "number": 903,
    "title": "Export - IAR + nrf51 with rtos",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-11T14:01:43Z",
    "updated_at": "2015-02-11T15:32:25Z",
    "closed_at": "2015-02-11T15:32:25Z",
    "author_association": "MEMBER",
    "body": "It exports the project, but failes to link.\n\nUsed command line command: \n\nproject.py -m NRF51822 -i IAR -p 78 -b\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/902",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/902/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/902/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/902/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/902",
    "id": 57318725,
    "number": 902,
    "title": "nrf51xx RTOS issue",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-11T13:58:58Z",
    "updated_at": "2015-03-27T18:20:00Z",
    "closed_at": "2015-02-12T10:45:35Z",
    "author_association": "MEMBER",
    "body": "It was added a while ago, #337. There has been several reports that is not functional, in the online IDE or exported to GCC. Some links to reports about this issue on mbed.org are here https://developer.mbed.org/questions/6235/Which-RTOS-did-you-successfully-run-on-n/?c=15726\n\nLooks to me that the problem is with scheduling. Simple application like main() with Thread::wait() wont do anything.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/901",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/901/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/901/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/901/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/901",
    "id": 57286338,
    "number": 901,
    "title": "CppUTest framework - too big to use",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-11T07:54:45Z",
    "updated_at": "2016-10-28T15:44:24Z",
    "closed_at": "2016-10-28T15:44:24Z",
    "author_association": "MEMBER",
    "body": "Regarding tests, we should look at the size of CppUtest, as I consider it too big for our use. Either to cut the size down with modifications + configuration, or use another more size friendly test unit framework.\n\nTests I was executing had over 50k of text size. An example, one test case, using SPI (sending 4 transfers), this is the size output from uVision with opt set to 0:\nProgram Size: Code=56724 RO-data=9424 RW-data=1008 ZI-data=2468\n\n@PrzemekWirkus\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/900",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/900/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/900/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/900/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/900",
    "id": 57259100,
    "number": 900,
    "title": "Host test autodetection",
    "user": {
      "login": "PrzemekWirkus",
      "id": 6360720,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6360720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PrzemekWirkus",
      "html_url": "https://github.com/PrzemekWirkus",
      "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
      "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
      "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
      "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
      "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
      "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-11T00:16:11Z",
    "updated_at": "2015-03-11T15:30:54Z",
    "closed_at": "2015-02-16T09:37:56Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/900",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/900",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/900.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/900.patch"
    },
    "body": "# Description\n\nIn order to achieve leaner test suite functionality and in the future decouple functionality such as:\n- mbed-enabled board auto-detection - mbed-ls project, former mbed-lmtools.\n- Host tests in worskace_tools/host_tests - set of test supervising scripts.\n- Test suite CLI (command line interface)\n- Building mechanism such as build.py, make.py and singletest.py will be replaced in future with separate project build tool.\n## mbed-ls - cool mbed-enabled platform auto-detection on your host!\n\nmbed-ls is Python module used to detect and list mbed-enabled devices connected to host computer. package will support Windows 7, Ubuntu and MacOS. It will be delivered as redistributable Python module (package) and command line tool.\nCurrently mbed-ls module is under development but already decoupled mbed-ls functionality is delivered to mbed SDK's test suite.\n\nYou will be able for example to use this tool from command line!\n\n```\n$ mbedls\n+---------------------+-------------------+-------------------+--------------------------------+\n|platform_name        |mount_point        |serial_port        |target_id                       |\n+---------------------+-------------------+-------------------+--------------------------------+\n|KL25Z                |I:                 |COM89              |02000203240881BBD9F47C43        |\n|NUCLEO_F302R8        |E:                 |COM34              |07050200623B61125D5EF72A        |\n+---------------------+-------------------+-------------------+--------------------------------+\n```\n\nNew command line switch `--auto` and `--tc` are added to `workspace_tools/singletest.py` script and replace (not completely, you will be still able to use configuration files just because they are more powerful than mbed-ls) existing file based test configuration.\n\nCurrently you will execute your automated tests like this:\n\n```\n$ singletest.py -i test_spec.json -M muts_all.json\n```\n\nWith mbed-ls tools you will be able to auto-detect all connected to your host devices and just decide which toolchains you want to include.\nBelow command is replacement for `-i` and `-M` combo. Tests will be built using default compiler for each detected mbed-enabled platform.\nNote: Now mbed-ls tools will detect devices for you, pair serial ports and disks (mount points) and based on TargetID determine mbed-enabled target generic name.\n\n```\n$ singletest.py --auto\n```\n\nor just for example specify that you want to build tests using default toolchains (per platform) and GCC_ARM for all platforms.\n\n```\n$ singletest.py --auto --tc default,GCC_ARM\n```\n\nNew `--auto` command is compatible with existing command line switches so you can for example:\n- Check your auto-detected configuration:\n\n```\n$ singletest.py --auto --config\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected NUCLEO_F302R8, port: COM34, mounted: E:\nMBEDLS: Detected KL25Z, port: COM89, mounted: I:\nMUTs configuration in auto-detected:\n+-------+-------------+---------------+------+-------+\n| index | peripherals | mcu           | disk | port  |\n+-------+-------------+---------------+------+-------+\n| 1     |             | NUCLEO_F302R8 | E:   | COM34 |\n| 2     |             | KL25Z         | I:   | COM89 |\n+-------+-------------+---------------+------+-------+\n\nTest specification in auto-detected:\n+---------------+-----+------+\n| mcu           | ARM | uARM |\n+---------------+-----+------+\n| KL25Z         | Yes | -    |\n| NUCLEO_F302R8 | -   | Yes  |\n+---------------+-----+------+\n```\n- Check supported toolchains for each platform (with optional filter `-f`):\n\n```\n$ singletest.py -S -f F302\n+---------------+-----------+---------+-----------+--------+--------+-----------+------------+---------------+\n| Platform      |    ARM    |   uARM  |  GCC_ARM  | GCC_CS | GCC_CR |    IAR    | GCC_CW_EWL | GCC_CW_NEWLIB |\n+---------------+-----------+---------+-----------+--------+--------+-----------+------------+---------------+\n| NUCLEO_F302R8 | Supported | Default | Supported |   -    |   -    | Supported |     -      |       -       |\n+---------------+-----------+---------+-----------+--------+--------+-----------+------------+---------------+\n*Default - default on-line compiler\n*Supported - supported off-line compiler\n\nTotal platforms: 1\nTotal permutations: 4\n```\n- Test suite will check for you if you configured settings and your toolchain path(s):\n\n```\n$ singletest.py --auto --config --tc all\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected NUCLEO_F302R8, port: COM34, mounted: E:\nMBEDLS: Detected KL25Z, port: COM89, mounted: I:\nMUTs configuration in auto-detected:\n+-------+-------------+---------------+------+-------+\n| index | peripherals | mcu           | disk | port  |\n+-------+-------------+---------------+------+-------+\n| 1     |             | NUCLEO_F302R8 | E:   | COM34 |\n| 2     |             | KL25Z         | I:   | COM89 |\n+-------+-------------+---------------+------+-------+\n\nTest specification in auto-detected:\n+---------------+-----+---------+------------+---------------+-----+------+\n| mcu           | ARM | GCC_ARM | GCC_CW_EWL | GCC_CW_NEWLIB | IAR | uARM |\n+---------------+-----+---------+------------+---------------+-----+------+\n| KL25Z         | Yes | Yes     | Yes#       | Yes#          | Yes | -    |\n| NUCLEO_F302R8 | Yes | Yes     | -#         | -#            | Yes | Yes  |\n+---------------+-----+---------+------------+---------------+-----+------+\nToolchain conflicts:\n        # Toolchain GCC_CW_EWL path not found: C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/lib\n        # Toolchain GCC_CW_NEWLIB path not found: C:/Freescale/CW MCU v10.3/Cross_Tools/arm-none-eabi-gcc-4_6_2/bin\n```\n- Use test verbose mode `-V` to see test printouts in real time, choose test(s) you want to execute with `-n` option and define your favorite toolchain(s) with `--tc`:\n\n```\n$ singletest.py --auto --tc GCC_ARM -V -n DTCT_1\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected NUCLEO_F302R8, port: COM34, mounted: E:\nBuilding library CMSIS (NUCLEO_F302R8, GCC_ARM)\nBuilding library MBED (NUCLEO_F302R8, GCC_ARM)\nBuilding project DETECT (NUCLEO_F302R8, GCC_ARM)\nExecuting 'python host_test.py -d E: -f \"C:\\Work\\mbed-przemek\\build\\test\\NUCLEO_F302R8\\GCC_ARM\\DTCT_1\\detect.bin\" -p COM34 -t 10 -C 1.5 -m NUCLEO_F302R8'\nTest::Output::Start\nMBED: Instrumentation: \"COM34\" and disk: \"E:\"\nHOST: Copy image onto target...\nHOST: Initialize serial port...\nHOST: Reset target...\nHOST: Property 'timeout' = '10'\nHOST: Property 'host_test_name' = 'detect_auto'\nHOST: Property 'description' = 'Simple detect test'\nHOST: Property 'test_id' = 'DTCT_1'\nHOST: Start test...\n{{start}}\nHOST: Detecting target name...\nMBED: Target 'NUCLEO_F302R8'\nHOST: MUT Target name 'NUCLEO_F302R8', expected 'NUCLEO_F302R8'... [OK]\nMBED: Test ID 'DTCT_1'\nMBED: UUID '04dab79c-a6c8-4bf0-8b1e-3771b4540bb8'\n\n{{success}}\n{{end}}\nTest::Output::Finish\nTargetTest::NUCLEO_F302R8::GCC_ARM::DTCT_1::Simple detect test [OK] in 1.07 of 10 sec\nTest summary:\n+--------+---------------+-----------+---------+--------------------+--------------------+---------------+-------+\n| Result | Target        | Toolchain | Test ID | Test Description   | Elapsed Time (sec) | Timeout (sec) | Loops |\n+--------+---------------+-----------+---------+--------------------+--------------------+---------------+-------+\n| OK     | NUCLEO_F302R8 | GCC_ARM   | DTCT_1  | Simple detect test |        1.07        |       10      |  1/1  |\n+--------+---------------+-----------+---------+--------------------+--------------------+---------------+-------+\nResult: 1 OK\n\nCompleted in 4.33 sec\n```\n## Host test script auto-detection\n\nStructure for host tests and C/C++ test source code changed. In the future tests will be deployed together with corresponding modules. For now mbed SDK tests have to improve. We want to remove dependency on `workspace_tools/tests.py` test meta-data and move test / test runner handshake inside test source code.\n- Example target test, look how new macros `TEST_*` are used to notify host test system about prefered host test handler. Now test will decide which host test should handle it, not extra meta-data.\n\n``` C++\n#include \"mbed.h\"\n#include \"test_env.h\"\n\nint main() {\n    TEST_TIMEOUT(10);\n    TEST_HOSTTEST(detect_auto);\n    TEST_DESCRIPTION(Simple detect test);\n    TEST_START(\"DTCT_1\");\n\n    // Test case body start\n    notify_start();\n    printf(\"MBED: Target '%s'\\r\\n\", TEST_SUITE_TARGET_NAME);\n    printf(\"MBED: Test ID '%s'\\r\\n\", TEST_SUITE_TEST_ID);\n    printf(\"MBED: UUID '%s'\\r\\n\", TEST_SUITE_UUID);\n    // Test case body end\n\n    TEST_RESULT(true);\n}\n```\n\nNote, things like:\n- Test case timeout (real time of execution) is defined in macro `TEST_TIMEOUT()`.\n- Test case description is encapsulated with macro `TEST_DESCRIPTION()`.\n- Preferred host test handler is defined in macro `TEST_HOSTTEST()`.\n- Test case result can be send to test suite environment using `TEST_RESULT()` macro - if applicable. Host test can decide about test case result in many cases.\n## mbed SDK is now in color!\n\nColorama is new package dependency added so CLI is now colorful (Hard to say if this is good or bad).\nBelow sample of new color format:\n![autodetection_1](https://cloud.githubusercontent.com/assets/6360720/6139087/8f4f846c-b17f-11e4-9664-602f71664db5.png)\n## Multiple boards of the same type\n\nFew boards of the same type can be auto-detected but tests are performed for one device of each type.\n\n```\n$ mbedls\n+---------------------+-------------------+-------------------+--------------------------------+\n|platform_name        |mount_point        |serial_port        |target_id                       |\n+---------------------+-------------------+-------------------+--------------------------------+\n|NUCLEO_L152RE        |E:                 |COM9               |07100200860579FAB960EFD7        |\n|NUCLEO_L152RE        |F:                 |COM91              |07100200824A7DB5BD2FEB98        |\n+---------------------+-------------------+-------------------+--------------------------------+\n```\n\nTest execution in above configuration:\n\n```\n$ singletest.py --auto --tc default,GCC_ARM -n MBED_A1,MBED_34\nMBEDLS: Detecting connected mbed-enabled devices...\nMBEDLS: Detected NUCLEO_L152RE, port: COM9, mounted: E:\nMBEDLS: Detected NUCLEO_L152RE, port: COM91, mounted: F:\nBuilding library CMSIS (NUCLEO_L152RE, uARM)\nBuilding library MBED (NUCLEO_L152RE, uARM)\nBuilding project TICKER_3 (NUCLEO_L152RE, uARM)\nTargetTest::NUCLEO_L152RE::uARM::MBED_34::Ticker Two callbacks [OK] in 12.28 of 15 sec\nBuilding project BASIC (NUCLEO_L152RE, uARM)\nTargetTest::NUCLEO_L152RE::uARM::MBED_A1::Basic [OK] in 2.35 of 20 sec\nBuilding library CMSIS (NUCLEO_L152RE, GCC_ARM)\nBuilding library MBED (NUCLEO_L152RE, GCC_ARM)\nBuilding project TICKER_3 (NUCLEO_L152RE, GCC_ARM)\nTargetTest::NUCLEO_L152RE::GCC_ARM::MBED_34::Ticker Two callbacks [OK] in 12.98 of 15 sec\nBuilding project BASIC (NUCLEO_L152RE, GCC_ARM)\nTargetTest::NUCLEO_L152RE::GCC_ARM::MBED_A1::Basic [OK] in 2.35 of 20 sec\nTest summary:\n+--------+---------------+-----------+---------+----------------------+--------------------+---------------+-------+\n| Result | Target        | Toolchain | Test ID | Test Description     | Elapsed Time (sec) | Timeout (sec) | Loops |\n+--------+---------------+-----------+---------+----------------------+--------------------+---------------+-------+\n| OK     | NUCLEO_L152RE | uARM      | MBED_34 | Ticker Two callbacks |       12.28        |       15      |  1/1  |\n| OK     | NUCLEO_L152RE | uARM      | MBED_A1 | Basic                |        2.35        |       20      |  1/1  |\n| OK     | NUCLEO_L152RE | GCC_ARM   | MBED_34 | Ticker Two callbacks |       12.98        |       15      |  1/1  |\n| OK     | NUCLEO_L152RE | GCC_ARM   | MBED_A1 | Basic                |        2.35        |       20      |  1/1  |\n+--------+---------------+-----------+---------+----------------------+--------------------+---------------+-------+\nResult: 4 OK\n\nCompleted in 41.66 sec\n```\n# Testing\n\nSolution tested with 8 of mbed-enabled boards. Both test auto-detection for `test_env` and unit tests using `CppUTest` works well.\nThis solution will be tested with greater number of boards soon, so pelase wait for notification in this pool request.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/899",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/899/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/899/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/899/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/899",
    "id": 57236411,
    "number": 899,
    "title": "Nucleo F411RE USART2 stops sending under certain conditions",
    "user": {
      "login": "mfiore02",
      "id": 2388412,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2388412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mfiore02",
      "html_url": "https://github.com/mfiore02",
      "followers_url": "https://api.github.com/users/mfiore02/followers",
      "following_url": "https://api.github.com/users/mfiore02/following{/other_user}",
      "gists_url": "https://api.github.com/users/mfiore02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mfiore02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mfiore02/subscriptions",
      "organizations_url": "https://api.github.com/users/mfiore02/orgs",
      "repos_url": "https://api.github.com/users/mfiore02/repos",
      "events_url": "https://api.github.com/users/mfiore02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mfiore02/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 15,
    "created_at": "2015-02-10T21:05:14Z",
    "updated_at": "2017-09-04T11:34:25Z",
    "closed_at": "2017-09-04T11:34:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've encountered a problem with USART2 on the STM32F411RE processor.  I have a simple serial passthrough program that allows bi-directional data flow through the processor\n\n``` C++\n    // USART2\n    Serial usb(USBTX, USBRX);\n    // USART1\n    Serial ext(D8, D2);\n    while (true) {\n    if (usb.readable())\n        ext.putc(usb.getc());\n    if (ext.readable())\n        usb.putc(ext.getc());\n    }\n```\n\nI've been building against revision 06e2b3c8802cb4f78e9958ba9923755bd458e8b7 of the master branch.  I've done my testing with GCC ARM Embedded, but I've duplicated some tests with IAR to make sure the issue wasn't related to the GCC ARM Embedded toolchain.\n\nI've been reproducing this issue by streaming a ~100kB text file through the device.  I have a python script that sends the file into a serial port on my PC and another script that reads the other serial port into a file on my PC.  Both serial ports are (obviously) connected to USARTs on the Nucleo.  I then compare the original and received file.\n\nWhat I see is the following:\n-  When the data is sent **in USART1** and **out USART2**:\n  - At bauds <= 38400, all data makes it through to the other side.\n  - At bauds > 38400 (up to 230400), only the first ~2-5kB of data make it to the other side.\n- When the data is sent **in USART2** and **out USART1 or USART6**:\n  - All the data makes it through at any baud rate.\n\nI have established that the entire processor isn't locking up by setting up a Ticker object with a callback that blinks LED1 on the Nucleo.  Even after my serial data stops, the LED keeps blinking indefinitely.\n\nI'm always hesitant to point fingers at hardware too early, but I'm not sure what else to think at the moment.  Anybody have any suggestions?  I'm happy to share complete binaries/code/scripts I'm using in the testing process if anybody wants to take a look for themselves.\n\n-Mike\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/898",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/898/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/898/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/898/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/898",
    "id": 57158122,
    "number": 898,
    "title": "Regarding Ticker event queue processing",
    "user": {
      "login": "masaohamanaka",
      "id": 8746484,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8746484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/masaohamanaka",
      "html_url": "https://github.com/masaohamanaka",
      "followers_url": "https://api.github.com/users/masaohamanaka/followers",
      "following_url": "https://api.github.com/users/masaohamanaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/masaohamanaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/masaohamanaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/masaohamanaka/subscriptions",
      "organizations_url": "https://api.github.com/users/masaohamanaka/orgs",
      "repos_url": "https://api.github.com/users/masaohamanaka/repos",
      "events_url": "https://api.github.com/users/masaohamanaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/masaohamanaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-02-10T10:47:08Z",
    "updated_at": "2017-10-27T19:05:35Z",
    "closed_at": "2017-10-27T19:05:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think with the following code does not work as expected, if two Tickers are running.\n\nus_ticker_api.c\nus_ticker_insert_event()\n\n```\n/* disable interrupts for the duration of the function */\nticker_event_t *prev = NULL, *p = head;\nwhile (p != NULL) {\n    /* check if we come before p */\n    if ((int)(timestamp - p->timestamp) < 0) {\n        break;\n    }\n    /* go to the next element */\n    prev = p;\n    p = p->next;\n}\n```\n\nIf the current time value was 0xFFFFFF00.\n\nFor example, Ticker1 calls us_ticker_insert_event() with \"timestamp = 0x00000020\", head-> timestamp will be 0x00000020.\nAfter this, if Ticker2 (short period) calls us_ticker_insert_event() with \"timestamp = 0xFFFFFFE0\",\nThe correct order is that interrupt occurs in 1, 2 as below.\n1. 0xFFFFFFE0 (for Ticerk 2) <-not ignored\n\n---time wrap arround---------\n2. 0x00000020 (for Ticerk 1)\n\nBut, since the code above only compare the simple head-> timestamp and timestamp, comparison result will be as below.\n\n0xFFFFFFE0(for Ticerk 2) - 0x00000020(for Ticerk 1) > 0\n\nAs a result, the interrupt is generated in the following order .\n\n-. 0xFFFFFFE0 (for Ticerk 2) <- ignored\n\n---time wrap arround---------\n1. 0x00000020 (for Ticerk 1)\n.......\n2. 0xFFFFFFE0 (for Ticerk 2) \n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/897",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/897/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/897/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/897/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/897",
    "id": 57009823,
    "number": 897,
    "title": "[ HAL ][ SSCI824 ] enabling onboard Oscillator",
    "user": {
      "login": "K4zuki",
      "id": 9379328,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9379328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/K4zuki",
      "html_url": "https://github.com/K4zuki",
      "followers_url": "https://api.github.com/users/K4zuki/followers",
      "following_url": "https://api.github.com/users/K4zuki/following{/other_user}",
      "gists_url": "https://api.github.com/users/K4zuki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/K4zuki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/K4zuki/subscriptions",
      "organizations_url": "https://api.github.com/users/K4zuki/orgs",
      "repos_url": "https://api.github.com/users/K4zuki/repos",
      "events_url": "https://api.github.com/users/K4zuki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/K4zuki/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2015-02-09T10:01:07Z",
    "updated_at": "2015-02-12T12:48:28Z",
    "closed_at": "2015-02-12T12:48:21Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/897",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/897",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/897.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/897.patch"
    },
    "body": "## Description\n### This pull request enables SSCI824 target's onboard oscillator\n1. The Switch Science mbed LPC824 has onboard crystal oscillator but disabled at CMSIS source\n   - Enabled by changing _SYSPLLCLKSEL_Val_ macro\n2. Also those clock pins (P0_8 and _9) can be seen as available pins at PinNames.h\n   - Disabled by removing those lines\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/896",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/896/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/896/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/896/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/896",
    "id": 57002932,
    "number": 896,
    "title": "I2c - slave should have own write/read functions",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-09T08:46:39Z",
    "updated_at": "2017-10-27T19:05:51Z",
    "closed_at": "2017-10-27T19:05:51Z",
    "author_association": "MEMBER",
    "body": "As proposed in #881, including here the proposed changes:\n\n```\nint I2CSlave::read(void) {\n// The dedicated I2C Slave byte read and byte write functions need to be called\n// from 'common' mbed I2CSlave API for devices that have separate Master and \n// Slave engines such as the lpc812 and lpc1549.\n//    return i2c_slave_byte_read(&_i2c, 0);\n    return i2c_byte_read(&_i2c, 0);\n}\n\nint I2CSlave::write(const char *data, int length) {\n    return i2c_slave_write(&_i2c, data, length) != length;\n}\n\nint I2CSlave::write(int data) {\n// The dedicated I2C Slave byte read and byte write functions need to be called\n// from 'common' mbed I2CSlave API for devices that have separate Master and \n// Slave engines such as the lpc812 and lpc1549.\n//\n//   return i2c_slave_byte_write(&_i2c, data);    \n    return i2c_byte_write(&_i2c, data);\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/895",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/895/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/895/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/895/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/895",
    "id": 57001340,
    "number": 895,
    "title": "Targets - K22 - fix issue #758 - vectors number + allocation",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-09T08:24:57Z",
    "updated_at": "2015-02-09T09:11:14Z",
    "closed_at": "2015-02-09T08:36:39Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/895",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/895",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/895.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/895.patch"
    },
    "body": "cc @Sissors\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/894",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/894/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/894/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/894/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/894",
    "id": 56947756,
    "number": 894,
    "title": "Fixed target issues for TARGET_LPC4088_DM",
    "user": {
      "login": "lindvalla",
      "id": 5314082,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5314082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lindvalla",
      "html_url": "https://github.com/lindvalla",
      "followers_url": "https://api.github.com/users/lindvalla/followers",
      "following_url": "https://api.github.com/users/lindvalla/following{/other_user}",
      "gists_url": "https://api.github.com/users/lindvalla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lindvalla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lindvalla/subscriptions",
      "organizations_url": "https://api.github.com/users/lindvalla/orgs",
      "repos_url": "https://api.github.com/users/lindvalla/repos",
      "events_url": "https://api.github.com/users/lindvalla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lindvalla/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-08T11:06:22Z",
    "updated_at": "2015-02-09T09:10:09Z",
    "closed_at": "2015-02-09T09:10:08Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/894",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/894",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/894.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/894.patch"
    },
    "body": "- Removed target alias from the EXPORT_MAP in targets.py as it didn't work\n- Added copies of the LPC4088 target exporters\n- Fixed flag issue in the gcc toolchain\n- Changed defines in eth USBDevice, rpt and rtos to handle TARGET_LPC4088_DM\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/893",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/893/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/893/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/893/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/893",
    "id": 56930563,
    "number": 893,
    "title": "Use CLKIN_CRYSTAL as input source for PLL1",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 144902129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20work",
        "name": "needs: work",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-02-07T23:25:02Z",
    "updated_at": "2015-03-06T23:21:46Z",
    "closed_at": "2015-03-06T23:21:46Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/893",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/893",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/893.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/893.patch"
    },
    "body": "Previously the input source was set to CLKIN_MAINPLL which according to\nthe documentation is the output from PLL1 itself.  Before I made this\nchange I would often encounter HardFaults in SystemSetupClock() when\nrunning unoptimized binaries (-O0).\n\nI would like to have @micromint review and sign-off before this change\nis merged.  It's possible this code was written this way for a reason\nand it fixing my hangs is just a fluke.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/892",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/892/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/892/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/892/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/892",
    "id": 56893077,
    "number": 892,
    "title": "replace target name 'ble_smurfs' with 'seeed_tiny_ble'",
    "user": {
      "login": "xiongyihui",
      "id": 948283,
      "avatar_url": "https://avatars0.githubusercontent.com/u/948283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xiongyihui",
      "html_url": "https://github.com/xiongyihui",
      "followers_url": "https://api.github.com/users/xiongyihui/followers",
      "following_url": "https://api.github.com/users/xiongyihui/following{/other_user}",
      "gists_url": "https://api.github.com/users/xiongyihui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xiongyihui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xiongyihui/subscriptions",
      "organizations_url": "https://api.github.com/users/xiongyihui/orgs",
      "repos_url": "https://api.github.com/users/xiongyihui/repos",
      "events_url": "https://api.github.com/users/xiongyihui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xiongyihui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-07T02:16:03Z",
    "updated_at": "2015-02-09T08:59:02Z",
    "closed_at": "2015-02-09T08:59:02Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/892",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/892",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/892.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/892.patch"
    },
    "body": "change name.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/891",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/891/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/891/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/891/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/891",
    "id": 56851047,
    "number": 891,
    "title": "Added support for LPC11U34_421 and AppNearMe's MicroNFCBoard",
    "user": {
      "login": "donatieng",
      "id": 4488374,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4488374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/donatieng",
      "html_url": "https://github.com/donatieng",
      "followers_url": "https://api.github.com/users/donatieng/followers",
      "following_url": "https://api.github.com/users/donatieng/following{/other_user}",
      "gists_url": "https://api.github.com/users/donatieng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/donatieng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/donatieng/subscriptions",
      "organizations_url": "https://api.github.com/users/donatieng/orgs",
      "repos_url": "https://api.github.com/users/donatieng/repos",
      "events_url": "https://api.github.com/users/donatieng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/donatieng/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-02-06T18:48:26Z",
    "updated_at": "2015-02-12T14:30:08Z",
    "closed_at": "2015-02-12T14:30:08Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/891",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/891",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/891.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/891.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/890",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/890/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/890/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/890/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/890",
    "id": 56837446,
    "number": 890,
    "title": "Public method return values",
    "user": {
      "login": "neilt6",
      "id": 2797902,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2797902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neilt6",
      "html_url": "https://github.com/neilt6",
      "followers_url": "https://api.github.com/users/neilt6/followers",
      "following_url": "https://api.github.com/users/neilt6/following{/other_user}",
      "gists_url": "https://api.github.com/users/neilt6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neilt6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neilt6/subscriptions",
      "organizations_url": "https://api.github.com/users/neilt6/orgs",
      "repos_url": "https://api.github.com/users/neilt6/repos",
      "events_url": "https://api.github.com/users/neilt6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neilt6/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-06T16:57:16Z",
    "updated_at": "2017-10-27T19:06:18Z",
    "closed_at": "2017-10-27T19:06:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just curious, but is there any particular reason that a lot of the public class methods indicate success/failure using an `int` instead of a `bool`?\n\nA few examples:\n\n``` c++\n//Returns 0 on success (ACK), non-0 on failure (NACK)\nint I2C::read(int address, char *data, int length, bool repeated = false);\n\n//Returns 0 on success (ACK), non-0 on failure (NACK)\nint I2C::write(int address, const char *data, int length, bool repeated = false);\n\n//Returns 1 if data is available, 0 otherwise\nint SPISlave::receive(void);\n\n//Returns 1 if data is available, 0 otherwise\nint SerialBase::readable();\n\n//Returns 1 if data can be written, 0 otherwise\nint SerialBase::writeable();\n```\n\nI realize this convention is similar to a lot of _C Standard Library_ functions, but I for one find it inconsistent and counter-intuitive. For example, while writing to a serial port may look like this:\n\n``` c++\n//Send an 'A' if possible\nif (serial.writeable()) {\n    serial.putc('A');\n}\n```\n\nChecking for success/failure when writing to an I2C device looks like this:\n\n``` c++\n//Try to send 8B of data to I2C device 0xFF\nif (i2c.write(0xFF, data, 8)) {\n    //Failure!\n} else {\n    //Success!\n}\n```\n\n...or even worse, like this:\n\n``` c++\n//Try to send 8B of data to I2C device 0xFF\nif (!i2c.write(0xFF, data, 8)) {\n    //Success!\n} else {\n    //Failure!\n}\n```\n\nTo me, neither of these statements read intuitively. I first came to mbed from the C# world, and in C# you can't evaluate integers as true or false in an if statement. So I spent a lot of time digging through _mbed-src_, and researching C++ language rules to try to figure out what the integer return values meant. Then, to make matters worse, you have this:\n\n``` c++\n//Returns 1 on success (ACK), 0 on failure (NACK)\nint I2C::write(int data);\n```\n\nThis function indicates success/failure using the opposite return values! To be fair, this one is meant to be used with `I2C::Acknowledge`, but then why not make the return value an `enum` instead of an `int`? The following would have been a much more intuitive API:\n\n``` c++\n//Returns 'true' on success (ACK), 'false' on failure (NACK)\nbool I2C::read(int address, char *data, int length, bool repeated = false);\n\n//Returns 'true' on success (ACK), 'false' on failure (NACK)\nbool I2C::write(int address, const char *data, int length, bool repeated = false);\n\n//Returns an Acknowledge enum to indicate ACK or NACK\nI2C::Acknowledge I2C::write(int data);\n\n//Returns 'true' if data is available, 'false' otherwise\nbool SPISlave::receive(void);\n\n//Returns 'true' if data is available, 'false' otherwise\nbool SerialBase::readable();\n\n//Returns 'true' if data can be written, 'false' otherwise\nbool SerialBase::writeable();\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/889",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/889/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/889/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/889/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/889",
    "id": 56821495,
    "number": 889,
    "title": "mbed rtos issue with nucleo F401re",
    "user": {
      "login": "araad",
      "id": 10124546,
      "avatar_url": "https://avatars0.githubusercontent.com/u/10124546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/araad",
      "html_url": "https://github.com/araad",
      "followers_url": "https://api.github.com/users/araad/followers",
      "following_url": "https://api.github.com/users/araad/following{/other_user}",
      "gists_url": "https://api.github.com/users/araad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/araad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/araad/subscriptions",
      "organizations_url": "https://api.github.com/users/araad/orgs",
      "repos_url": "https://api.github.com/users/araad/repos",
      "events_url": "https://api.github.com/users/araad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/araad/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-06T14:58:21Z",
    "updated_at": "2015-02-27T22:35:12Z",
    "closed_at": "2015-02-27T22:35:12Z",
    "author_association": "NONE",
    "body": "I've just started playing around with an ST Nucleo F401REe with the mbed libraries. I've exported the mbed and mbed-rtos libraries to my desktop. I'm using Visual Studio with VisualGDB using the arm-eabi 4.9.2 toolchain.\n\nEverything compiles fine and I'm able to build and upload the simple thread example found on the RTOS handbook page.\n\nThe problem that I'm having is when I'm running the example, the call to Thread::wait() in the main thread reaches the Infinite Loop subroutine in startup_stm32f401xe.s\n\nI'm guessing this is not supposed to happen since the comments before Infinite Loop states that I've encountered an unexpected interrupt.\n\nIf i remove the call to Thread::wait() from the main thread, the second thread is never being called.\n\nI have the latest librairies, that include the fix mentioned in #775 which seems to be somewhat related to my problem.\n\nWith the help of this page: http://www.keil.com/pack/doc/cmsis_rtx/_timer_tick.html\nI've noticed that OS_SYSTICK is not defined anywhere, so I've added it myself in order to use the Cortex-M SysTick timer in case it was expecting an alternative timer. I've checked that OS_CLOCK and SystemCoreClock are the same but still doesnt work.\n\nAny suggestions on what's going on?\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/887",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/887/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/887/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/887/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/887",
    "id": 56766769,
    "number": 887,
    "title": "second DELTA DFCM-NNN40 pull request to fix HRM1017 error and modify 32MHz crystal setting",
    "user": {
      "login": "Marcomissyou",
      "id": 7322924,
      "avatar_url": "https://avatars0.githubusercontent.com/u/7322924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marcomissyou",
      "html_url": "https://github.com/Marcomissyou",
      "followers_url": "https://api.github.com/users/Marcomissyou/followers",
      "following_url": "https://api.github.com/users/Marcomissyou/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marcomissyou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marcomissyou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marcomissyou/subscriptions",
      "organizations_url": "https://api.github.com/users/Marcomissyou/orgs",
      "repos_url": "https://api.github.com/users/Marcomissyou/repos",
      "events_url": "https://api.github.com/users/Marcomissyou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marcomissyou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-02-06T03:47:33Z",
    "updated_at": "2015-02-12T12:57:48Z",
    "closed_at": "2015-02-12T12:57:45Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/887",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/887",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/887.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/887.patch"
    },
    "body": "Very sorry for that.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/886",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/886/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/886/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/886/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/886",
    "id": 56719253,
    "number": 886,
    "title": "[NRF51822][BLE Nano] I2C Issue",
    "user": {
      "login": "freber",
      "id": 1684291,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1684291?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/freber",
      "html_url": "https://github.com/freber",
      "followers_url": "https://api.github.com/users/freber/followers",
      "following_url": "https://api.github.com/users/freber/following{/other_user}",
      "gists_url": "https://api.github.com/users/freber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/freber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/freber/subscriptions",
      "organizations_url": "https://api.github.com/users/freber/orgs",
      "repos_url": "https://api.github.com/users/freber/repos",
      "events_url": "https://api.github.com/users/freber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/freber/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 515539934,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20red%20bear",
        "name": "devices: red bear",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2015-02-05T19:46:08Z",
    "updated_at": "2017-10-27T19:06:41Z",
    "closed_at": "2017-10-27T19:06:41Z",
    "author_association": "NONE",
    "body": "I'm struggling to get I2C to work with the nRF51822 (BLE Nano).\nI've tried to setup the I2C pins also on the standard pinout (http://static1.squarespace.com/static/5039e08be4b00cf0e8cf88cd/t/543f6b58e4b0847bb28660f8/1413442404211/?format=1500w) but without any success. It feels like I'm missing something simple here but can't figure it out.\n\nI'm on @adamgreen's  repo (gcc4mbed) and is currently running rev 92.\n\nBelow is my isolated test case:\n\n```\n#include \"mbed.h\"\n\n#define TMP007_I2CADDR 0x40\n#define TMP007_DEVID 0x1F\n\nI2C i2c(P0_29, P0_28); // SDA, SCL\n// I2C i2c(P0_10, P0_8); // SDA, SCL\n\nSerial pc(USBTX, USBRX); // tx, rx\n\n\nint main(void) {\n\n  char temp_write[3] = {0};\n  char temp_read[2] = {0};\n\n    pc.printf(\"start!\\n\");\n\n  // Set up what register to read from\n  temp_write[0] = TMP007_DEVID;\n  i2c.start();\n  i2c.write(TMP007_I2CADDR, temp_write, 1, false);\n  i2c.stop();\n\n  // Read actual data\n  i2c.start();\n  i2c.read(TMP007_I2CADDR, temp_read, 2, 0);\n  i2c.stop();\n\n  pc.printf(\"Returned: 0x%X%X\\n\", temp_read[0], temp_read[1]);\n  pc.printf(\"Should return: 0x%X\\n\", TMP007_DEVID);\n\n}\n\n```\n\nOutput:\n\n```\nstart!\nReturned: 0x00\nShould return: 0x1F\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/885",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/885/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/885/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/885/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/885",
    "id": 56703637,
    "number": 885,
    "title": "Update system_nrf51822.c",
    "user": {
      "login": "takafuminaka",
      "id": 9991579,
      "avatar_url": "https://avatars3.githubusercontent.com/u/9991579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takafuminaka",
      "html_url": "https://github.com/takafuminaka",
      "followers_url": "https://api.github.com/users/takafuminaka/followers",
      "following_url": "https://api.github.com/users/takafuminaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/takafuminaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takafuminaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takafuminaka/subscriptions",
      "organizations_url": "https://api.github.com/users/takafuminaka/orgs",
      "repos_url": "https://api.github.com/users/takafuminaka/repos",
      "events_url": "https://api.github.com/users/takafuminaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takafuminaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-05T17:44:21Z",
    "updated_at": "2015-02-06T09:40:15Z",
    "closed_at": "2015-02-06T08:19:36Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/885",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/885",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/885.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/885.patch"
    },
    "body": "Fixed support for mbed HRM1017.\nIt had been broken Feb.27th.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/884",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/884/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/884/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/884/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/884",
    "id": 56627029,
    "number": 884,
    "title": "[RZ_A1H]Fix a bug that Ether Driver there is a case where the transmission can n...",
    "user": {
      "login": "masaohamanaka",
      "id": 8746484,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8746484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/masaohamanaka",
      "html_url": "https://github.com/masaohamanaka",
      "followers_url": "https://api.github.com/users/masaohamanaka/followers",
      "following_url": "https://api.github.com/users/masaohamanaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/masaohamanaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/masaohamanaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/masaohamanaka/subscriptions",
      "organizations_url": "https://api.github.com/users/masaohamanaka/orgs",
      "repos_url": "https://api.github.com/users/masaohamanaka/repos",
      "events_url": "https://api.github.com/users/masaohamanaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/masaohamanaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-05T04:45:10Z",
    "updated_at": "2015-02-05T13:40:43Z",
    "closed_at": "2015-02-05T13:40:43Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/884",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/884",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/884.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/884.patch"
    },
    "body": "Hello,\n\nWe fix a bug of Ether Driver as below.\n- If Ether driver have been set multiple transmit data without waiting for the received data, Ether driver can not send data correctly .\n\nRegards,\nHamanaka\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/883",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/883/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/883/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/883/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/883",
    "id": 56509849,
    "number": 883,
    "title": "Added IAR support for NRF51822. IAR's linker can not merge hex files as ...",
    "user": {
      "login": "GustavWi",
      "id": 9265014,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9265014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GustavWi",
      "html_url": "https://github.com/GustavWi",
      "followers_url": "https://api.github.com/users/GustavWi/followers",
      "following_url": "https://api.github.com/users/GustavWi/following{/other_user}",
      "gists_url": "https://api.github.com/users/GustavWi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GustavWi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GustavWi/subscriptions",
      "organizations_url": "https://api.github.com/users/GustavWi/orgs",
      "repos_url": "https://api.github.com/users/GustavWi/repos",
      "events_url": "https://api.github.com/users/GustavWi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GustavWi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-04T10:35:54Z",
    "updated_at": "2015-02-05T13:39:38Z",
    "closed_at": "2015-02-05T13:39:38Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/883",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/883",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/883.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/883.patch"
    },
    "body": "...a section only binarys. I added a binary under TARGET_NORDIC/TARGET_MCU_NRF51822/TOOLCHAIN_IAR that  represents the soft_device. I added support in the python scripts to also copy binaries to the build/mbed dir and also added support for the exporter to copy binaries from resources into the exported zip file.\n\nI don't know if the binary will be copied into the zip file when you export from the mbed web IDE, because I don't know what scripts are used for that.\n\nRegards Gustav\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/882",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/882/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/882/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/882/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/882",
    "id": 56480703,
    "number": 882,
    "title": "STM32F103RB GCC export",
    "user": {
      "login": "Novacha",
      "id": 5689596,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5689596?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Novacha",
      "html_url": "https://github.com/Novacha",
      "followers_url": "https://api.github.com/users/Novacha/followers",
      "following_url": "https://api.github.com/users/Novacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/Novacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Novacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Novacha/subscriptions",
      "organizations_url": "https://api.github.com/users/Novacha/orgs",
      "repos_url": "https://api.github.com/users/Novacha/repos",
      "events_url": "https://api.github.com/users/Novacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Novacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 144902129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20work",
        "name": "needs: work",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-04T05:02:33Z",
    "updated_at": "2016-05-10T15:35:48Z",
    "closed_at": "2016-05-10T15:35:48Z",
    "author_association": "NONE",
    "body": "The exported GCC project for the STM32F103RB target fails to build and produces the following error:\n\n```\n$ make\narm-none-eabi-g++ -mcpu=cortex-m3 -mthumb -c -g -fno-common -fmessage-length=0 -Wall -fno-exceptions -ffunction-sections -fdata-sections -fno-rtti -MMD -MP -DNDEBUG -Os -DTARGET_NUCLEO_F103RB -DTARGET_M3 -DTARGET_CORTEX_M -DTARGET_STM -DTARGET_STM32F1 -DTARGET_STM32F103RB -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -D__CORTEX_M3 -DARM_MATH_CM3 -DMBED_BUILD_TIMESTAMP=1423025545.55 -D__MBED__=1 -DTARGET_FF_ARDUINO -DTARGET_FF_MORPHO  -std=gnu++98 -I. -I./mbed -I./mbed/TARGET_NUCLEO_F103RB -I./mbed/TARGET_NUCLEO_F103RB/TARGET_STM -I./mbed/TARGET_NUCLEO_F103RB/TARGET_STM/TARGET_NUCLEO_F103RB  -o main.o main.cpp\narm-none-eabi-gcc -mcpu=cortex-m3 -mthumb -Wl,--gc-sections --specs=nano.specs -u _printf_float -u _scanf_float -Wl,--wrap,main -Wl,-Map=Test_STM_F103RB_Export.\n/usr/local/Cellar/arm-none-eabi-gcc/20140609/bin/../lib/gcc/arm-none-eabi/4.8.4/../../../../arm-none-eabi/bin/ld: cannot open linker script file None: No such file or directory\ncollect2: error: ld returned 1 exit status\nmake: *** [Test_STM_F103RB_Export.elf] Error 1\n```\n\nThis was tested on Mac OSX 10.10.1 (Yosemite).\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/881",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/881/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/881/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/881/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/881",
    "id": 56436210,
    "number": 881,
    "title": "Added I2CSlave support for lpc812",
    "user": {
      "login": "Willem23",
      "id": 10687540,
      "avatar_url": "https://avatars0.githubusercontent.com/u/10687540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Willem23",
      "html_url": "https://github.com/Willem23",
      "followers_url": "https://api.github.com/users/Willem23/followers",
      "following_url": "https://api.github.com/users/Willem23/following{/other_user}",
      "gists_url": "https://api.github.com/users/Willem23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Willem23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Willem23/subscriptions",
      "organizations_url": "https://api.github.com/users/Willem23/orgs",
      "repos_url": "https://api.github.com/users/Willem23/repos",
      "events_url": "https://api.github.com/users/Willem23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Willem23/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2015-02-03T20:59:27Z",
    "updated_at": "2015-02-11T08:22:09Z",
    "closed_at": "2015-02-11T08:22:09Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/881",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/881",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/881.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/881.patch"
    },
    "body": "The I2C engine on newer devices such as the lpc812, lpc824 and lpc1549 is very different from other mbed NXP devices such as the lpc1768. The newer devices have separate Master and Slave engines. This also means that dedicated I2C Slave byte read and byte write functions need to be called from the 'common' mbed I2CSlave.cpp.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/880",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/880/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/880/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/880/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/880",
    "id": 56363218,
    "number": 880,
    "title": "Add support for EA LPC4088_DM",
    "user": {
      "login": "screamerbg",
      "id": 5940648,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5940648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/screamerbg",
      "html_url": "https://github.com/screamerbg",
      "followers_url": "https://api.github.com/users/screamerbg/followers",
      "following_url": "https://api.github.com/users/screamerbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/screamerbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/screamerbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/screamerbg/subscriptions",
      "organizations_url": "https://api.github.com/users/screamerbg/orgs",
      "repos_url": "https://api.github.com/users/screamerbg/repos",
      "events_url": "https://api.github.com/users/screamerbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/screamerbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-03T11:03:34Z",
    "updated_at": "2015-02-03T13:11:57Z",
    "closed_at": "2015-02-03T13:11:57Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/880",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/880",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/880.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/880.patch"
    },
    "body": "Add support for EA LPC4088_DM\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/879",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/879/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/879/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/879/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/879",
    "id": 56249522,
    "number": 879,
    "title": "Targets - gpio_is_connected() for STM targets where it was not implemented",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-02T15:24:26Z",
    "updated_at": "2015-06-09T11:50:24Z",
    "closed_at": "2015-02-02T15:49:05Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/879",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/879",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/879.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/879.patch"
    },
    "body": "Should be available for all mbed targets\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/878",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/878/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/878/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/878/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/878",
    "id": 56215668,
    "number": 878,
    "title": "adding new target for STM32F439 CPU",
    "user": {
      "login": "mazgch",
      "id": 5808299,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5808299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mazgch",
      "html_url": "https://github.com/mazgch",
      "followers_url": "https://api.github.com/users/mazgch/followers",
      "following_url": "https://api.github.com/users/mazgch/following{/other_user}",
      "gists_url": "https://api.github.com/users/mazgch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mazgch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mazgch/subscriptions",
      "organizations_url": "https://api.github.com/users/mazgch/orgs",
      "repos_url": "https://api.github.com/users/mazgch/repos",
      "events_url": "https://api.github.com/users/mazgch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mazgch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-02T09:55:07Z",
    "updated_at": "2015-02-04T09:19:31Z",
    "closed_at": "2015-02-04T09:19:31Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/878",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/878",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/878.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/878.patch"
    },
    "body": "I am trying to add a new platform/target for a currently not yet supported CPU. \n\nThis pull request contains: \n- support for the STM32F439ZI CPU \n- added a new platform as TARGET_UBLOX_C029\n- special pinnames for the added platform\n\nDo we need some other changes?\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/877",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/877/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/877/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/877/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/877",
    "id": 55974368,
    "number": 877,
    "title": "STM32F0xx reorganisation of hal folder",
    "user": {
      "login": "ohagendorf",
      "id": 8608842,
      "avatar_url": "https://avatars1.githubusercontent.com/u/8608842?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ohagendorf",
      "html_url": "https://github.com/ohagendorf",
      "followers_url": "https://api.github.com/users/ohagendorf/followers",
      "following_url": "https://api.github.com/users/ohagendorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/ohagendorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ohagendorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ohagendorf/subscriptions",
      "organizations_url": "https://api.github.com/users/ohagendorf/orgs",
      "repos_url": "https://api.github.com/users/ohagendorf/repos",
      "events_url": "https://api.github.com/users/ohagendorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ohagendorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-01-29T23:39:43Z",
    "updated_at": "2015-02-09T22:31:31Z",
    "closed_at": "2015-02-09T09:29:12Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/877",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/877",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/877.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/877.patch"
    },
    "body": "Reorganisation of hal folder of all STM32F0xx target using the same principle as @bcostm already did with cmsis folder before and as I did for STM32F4xx hal folder.\n\nrunning build_travis, extended by missing F0 targets (NUCLEO_F070RB and DISCO_F051R8), is OK\n\nsingletest.py runs fine for all F0 targets with DTCT_1 ,EXAMPLE_1 ,MBED_10 ,MBED_11 ,MBED_12 ,MBED_16 ,MBED_2 ,MBED_23 ,MBED_24 ,MBED_25 ,MBED_26 ,MBED_34 ,MBED_A1 ,MBED_A21 ,MBED_A5 ,MBED_A6 ,MBED_A7 ,MBED_A9\n\nExcept MBED_24 for NUCLEO_F030R8 and DISCO_F051R8. But they failed before too.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/876",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/876/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/876/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/876/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/876",
    "id": 55924813,
    "number": 876,
    "title": "Initial ethernet support for LPC433x",
    "user": {
      "login": "NitinBhaskar",
      "id": 7971634,
      "avatar_url": "https://avatars1.githubusercontent.com/u/7971634?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NitinBhaskar",
      "html_url": "https://github.com/NitinBhaskar",
      "followers_url": "https://api.github.com/users/NitinBhaskar/followers",
      "following_url": "https://api.github.com/users/NitinBhaskar/following{/other_user}",
      "gists_url": "https://api.github.com/users/NitinBhaskar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NitinBhaskar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NitinBhaskar/subscriptions",
      "organizations_url": "https://api.github.com/users/NitinBhaskar/orgs",
      "repos_url": "https://api.github.com/users/NitinBhaskar/repos",
      "events_url": "https://api.github.com/users/NitinBhaskar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NitinBhaskar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-29T16:49:58Z",
    "updated_at": "2015-02-09T08:40:47Z",
    "closed_at": "2015-02-09T08:40:47Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/876",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/876",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/876.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/876.patch"
    },
    "body": "Ethernet support for LPC433x\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/875",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/875/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/875/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/875/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/875",
    "id": 55867284,
    "number": 875,
    "title": "[RZ_A1H]Add some function and fix some bugs.",
    "user": {
      "login": "masaohamanaka",
      "id": 8746484,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8746484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/masaohamanaka",
      "html_url": "https://github.com/masaohamanaka",
      "followers_url": "https://api.github.com/users/masaohamanaka/followers",
      "following_url": "https://api.github.com/users/masaohamanaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/masaohamanaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/masaohamanaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/masaohamanaka/subscriptions",
      "organizations_url": "https://api.github.com/users/masaohamanaka/orgs",
      "repos_url": "https://api.github.com/users/masaohamanaka/repos",
      "events_url": "https://api.github.com/users/masaohamanaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/masaohamanaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-29T07:47:31Z",
    "updated_at": "2015-02-02T11:24:46Z",
    "closed_at": "2015-02-02T11:24:46Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/875",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/875",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/875.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/875.patch"
    },
    "body": "Hi,\n\nWe add some function and fix some bugs as below.\n\nRTC\nAdd RTC function.\n\nSerial\nAdd Serial flow control and fix a bug that parity setting is wrong.\nModifies are as below.\n- Add flow control\n- Change the range of baud rate that can be set in the baud function.\n  　8138 bps more -> 128 bps more\n- Fixed a bug that designation of parity had been reversed in format().\n\nAnalogIn\nModify some processing of AnalgIn.\nModifies are as below.\n- Change the A/D conversion time to run fast.\n- Change the macro value of ANALOGIN_MEDIAN_FILTER\n  1 -> 0\n\nI2C\nAdd some processing of I2C driver\nChanges are as below\n- Add STOP condition omission processing of I2C Master\n- Add I2C Slave processing \n\nTicker\nModify ticker driver to make consistent with Pull Reqest#839 and #864.\n\ngpio_object.h\nAdd include mbed_assert.h.\n\ngpio_api.c\nModify gpio api to make consistent with Merge branch 'PrzemekWirkus-pinology'.\n\nRegards,\nHamanaka\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/874",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/874/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/874/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/874/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/874",
    "id": 55769888,
    "number": 874,
    "title": "Extended RTOS support for LPC4330 Target",
    "user": {
      "login": "NitinBhaskar",
      "id": 7971634,
      "avatar_url": "https://avatars1.githubusercontent.com/u/7971634?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NitinBhaskar",
      "html_url": "https://github.com/NitinBhaskar",
      "followers_url": "https://api.github.com/users/NitinBhaskar/followers",
      "following_url": "https://api.github.com/users/NitinBhaskar/following{/other_user}",
      "gists_url": "https://api.github.com/users/NitinBhaskar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NitinBhaskar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NitinBhaskar/subscriptions",
      "organizations_url": "https://api.github.com/users/NitinBhaskar/orgs",
      "repos_url": "https://api.github.com/users/NitinBhaskar/repos",
      "events_url": "https://api.github.com/users/NitinBhaskar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NitinBhaskar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-28T15:26:42Z",
    "updated_at": "2015-01-29T07:22:32Z",
    "closed_at": "2015-01-29T07:22:32Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/874",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/874",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/874.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/874.patch"
    },
    "body": "Extended RTOS support for LPC4330 Target\n"
  }
]
