[
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6248",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6248/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6248/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6248/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6248",
    "id": 301571752,
    "number": 6248,
    "title": "CMake export add memory map analysis after compile",
    "user": {
      "login": "vidavidorra",
      "id": 12871315,
      "avatar_url": "https://avatars1.githubusercontent.com/u/12871315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vidavidorra",
      "html_url": "https://github.com/vidavidorra",
      "followers_url": "https://api.github.com/users/vidavidorra/followers",
      "following_url": "https://api.github.com/users/vidavidorra/following{/other_user}",
      "gists_url": "https://api.github.com/users/vidavidorra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vidavidorra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vidavidorra/subscriptions",
      "organizations_url": "https://api.github.com/users/vidavidorra/orgs",
      "repos_url": "https://api.github.com/users/vidavidorra/repos",
      "events_url": "https://api.github.com/users/vidavidorra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vidavidorra/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-01T21:48:15Z",
    "updated_at": "2018-05-22T14:29:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\nShow memory map by default on CMake exported builds.\r\n\r\n**Reason to enhance or problem with existing solution**\r\nAs developer it's very useful to know how much memory your program uses.\r\n\r\n**Suggested enhancement**\r\nThe enhancement contains two parts:\r\n- Add linker flag to add .map file. Not sure where this should be located, simply [here in the template](https://github.com/ARMmbed/mbed-os/blob/master/tools/export/cmake/CMakeLists.txt.tmpl#L41-L44) or some place else from where the exporter script gets it. The proposed added flag should be `-Wl,-Map=${CMAKE_PROJECT_NAME}.map` or some other way to get the project name depending on where this is added.\r\n- Add custom command in the CMakelLists template around [here](https://github.com/ARMmbed/mbed-os/blob/master/tools/export/cmake/CMakeLists.txt.tmpl#L73) that executes the `memap.py` script with. I currently use the example below in my `project.cmake` to do this. I am not sure here whether there is some better check where the mbed-os can be located. The location of the .map file should be known though. I've also added a check for python interpreter just to be sure but you could also assume it exists\r\n\r\n```cmake\r\n# Try to find python interpeter for memory map analysis\r\nfind_package(PythonInterp 2.7)\r\n\r\n# Add a custom command to be performed post build that analyses the memory map\r\nif(PYTHONINTERP_FOUND)\r\n    if(EXISTS ${CMAKE_SOURCE_DIR}/mbed-os/mbed.h AND\r\n            EXISTS ${CMAKE_BINARY_DIR}/${CMAKE_PROJECT_NAME}.map)\r\n        add_custom_command(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD\r\n                COMMAND ${CMAKE_COMMAND} -E echo \"-- Analysing memory map\"\r\n                COMMAND ${PYTHON_EXECUTABLE}\r\n                ${CMAKE_SOURCE_DIR}/mbed-os/tools/memap.py\r\n                ${CMAKE_BINARY_DIR}/${CMAKE_PROJECT_NAME}.map\r\n                -t GCC_ARM\r\n                )\r\n    else()\r\n        add_custom_command(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD\r\n                COMMAND ${CMAKE_COMMAND} -E echo \"-- Could not find mbed-os and/or .map file...\"\r\n                )\r\n    endif()\r\nelse()\r\n    add_custom_command(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD\r\n            COMMAND ${CMAKE_COMMAND} -E echo \"-- Could not find python interpeter, so skipping memory map analysis...\"\r\n            )\r\nendif()\r\n```\r\n\r\n**Pros**\r\n- Knowledge of RAM and flash usage\r\n\r\n**Cons**  \r\n  \r\nIf this enhancement is ok, I'd be happy to make a pull request for it with some help for the linker flags...\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6242",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6242/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6242/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6242/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6242",
    "id": 301322388,
    "number": 6242,
    "title": "CMake export: binary compile output",
    "user": {
      "login": "vidavidorra",
      "id": 12871315,
      "avatar_url": "https://avatars1.githubusercontent.com/u/12871315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vidavidorra",
      "html_url": "https://github.com/vidavidorra",
      "followers_url": "https://api.github.com/users/vidavidorra/followers",
      "following_url": "https://api.github.com/users/vidavidorra/following{/other_user}",
      "gists_url": "https://api.github.com/users/vidavidorra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vidavidorra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vidavidorra/subscriptions",
      "organizations_url": "https://api.github.com/users/vidavidorra/orgs",
      "repos_url": "https://api.github.com/users/vidavidorra/repos",
      "events_url": "https://api.github.com/users/vidavidorra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vidavidorra/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-01T08:51:10Z",
    "updated_at": "2018-05-22T13:24:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\nWhen exporting to CMake, the compile step does not generate a binary output file. This output type is needed to flash the program on, for example a NUCLEO_F103RB.\r\n\r\n**Reason to enhance or problem with existing solution**\r\nAt the moment extra steps in a `project.cmake` are needed to create binary output file, which is required for flashing some boards (NUCLEO_F103RB).\r\n\r\n**Suggested enhancement**\r\nTwo options for enhancement:\r\n1. Add two lines to the current output generation for the .hex ([here](https://github.com/ARMmbed/mbed-os/blob/master/tools/export/cmake/CMakeLists.txt.tmpl#L69-L72)) that generates the binary output\r\n2. Add extra custom command after the .hex output generation here ([here](https://github.com/ARMmbed/mbed-os/blob/master/tools/export/cmake/CMakeLists.txt.tmpl#L69-L72)) that generates the binary output\r\n\r\nI think option 1 might be the cleanest as there remains one custom command for output generations, but both would do just fine. If this enhancement is ok, I'd be happy to make a pull request for it.\r\n\r\nI've tried it in my `project.cmake` as shown below and it works perfectly. Although it would be cleaner to have this in the `CMakeList.txt.tmpl` by default.\r\n\r\n```cmake\r\nadd_custom_command(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD\r\n        COMMAND ${ELF2BIN} -O binary $<TARGET_FILE:${CMAKE_PROJECT_NAME}> $<TARGET_FILE:${CMAKE_PROJECT_NAME}>.bin\r\n        COMMAND ${CMAKE_COMMAND} -E echo \"-- built: $<TARGET_FILE:${CMAKE_PROJECT_NAME}>.bin\"\r\n        )\r\n```\r\n\r\n**Pros**\r\n- Binary output by default that can be used for programming\r\n\r\n**Cons**\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6222",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6222/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6222/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6222/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6222",
    "id": 300397768,
    "number": 6222,
    "title": "Digital Signatures and Secure In-Field Updates",
    "user": {
      "login": "AGlass0fMilk",
      "id": 350500,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AGlass0fMilk",
      "html_url": "https://github.com/AGlass0fMilk",
      "followers_url": "https://api.github.com/users/AGlass0fMilk/followers",
      "following_url": "https://api.github.com/users/AGlass0fMilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/AGlass0fMilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AGlass0fMilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AGlass0fMilk/subscriptions",
      "organizations_url": "https://api.github.com/users/AGlass0fMilk/orgs",
      "repos_url": "https://api.github.com/users/AGlass0fMilk/repos",
      "events_url": "https://api.github.com/users/AGlass0fMilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AGlass0fMilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 17,
    "created_at": "2018-02-26T21:12:43Z",
    "updated_at": "2018-04-04T10:37:42Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "# Description\r\n- Type: Enhancement\r\n- Related pull request: #5950 \r\n----------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nSHA256/RSA2048 digital signatures provide a relatively simple way of securing in-field updates. Using the existing, built-in mbedTLS library it should be possible to implement a generic way to verify in-field firmware updates. Implementing this feature for all mbed platforms would simplify and encourage secure firmware upgrades, a huge issue in IoT devices moving forward.\r\n\r\n### **Suggested enhancement**\r\n\r\n#### Requirements:\r\n1. Digital signature tools (integrated into mbed-cli) \r\n\r\n1. Application information (headers, version numbers, digital signatures, public key, etc) embedded into generated binaries intended for in field updates. \r\n\r\n1. A communication-agnostic way of verifying new firmware images (whether it comes from BLE/UART/SPI/I2C or other), associated examples.\r\n\r\n1. Support for uVisor integration to protect critical security data (crypto keys, etc)\r\n\r\n1. Secure internal/external storage of crypto keys\r\n\r\n1. Solution should be usable with mbed Cloud client (currently a private repo, so not sure how to go about making sure the solution is compatible @theotherjimmy). Should **not require** the use of mbed Cloud/client.\r\n\r\n#### Possible solutions:\r\n- mbed TLS for key and certificate management (I haven't fully researched this yet)\r\n\r\nThis could be an enhancement to the current managed bootloader system.\r\n\r\nI'm opening up an issue at the suggestion of @theotherjimmy to discuss the scope of this possible feature/enhancement.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6208",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6208/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6208/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6208/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6208",
    "id": 300112221,
    "number": 6208,
    "title": "Managed Bootloaders for Nordic Platforms",
    "user": {
      "login": "AGlass0fMilk",
      "id": 350500,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AGlass0fMilk",
      "html_url": "https://github.com/AGlass0fMilk",
      "followers_url": "https://api.github.com/users/AGlass0fMilk/followers",
      "following_url": "https://api.github.com/users/AGlass0fMilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/AGlass0fMilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AGlass0fMilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AGlass0fMilk/subscriptions",
      "organizations_url": "https://api.github.com/users/AGlass0fMilk/orgs",
      "repos_url": "https://api.github.com/users/AGlass0fMilk/repos",
      "events_url": "https://api.github.com/users/AGlass0fMilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AGlass0fMilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-02-26T05:18:00Z",
    "updated_at": "2018-02-26T16:45:58Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n- Related issue: #5950 \r\n- Priority: Minor\r\n\r\nWhat is currently preventing managed bootloaders from being used on the Nordic nRF platform? It is my understanding that mbed-managed bootloaders have to lie before the main app in flash. This contradicts the expectation of the Nordic soft device.\r\n\r\nI have spent a few days creating tools for inserting appdata headers into my binaries and would like to take advantage of the new feature in #5950 instead..."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6203",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6203/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6203/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6203/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6203",
    "id": 299912163,
    "number": 6203,
    "title": "Fault Occuring in mbed::CAN constructor in Debug profile, but not in Develop profile",
    "user": {
      "login": "ssnover95",
      "id": 10117564,
      "avatar_url": "https://avatars1.githubusercontent.com/u/10117564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssnover95",
      "html_url": "https://github.com/ssnover95",
      "followers_url": "https://api.github.com/users/ssnover95/followers",
      "following_url": "https://api.github.com/users/ssnover95/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssnover95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssnover95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssnover95/subscriptions",
      "organizations_url": "https://api.github.com/users/ssnover95/orgs",
      "repos_url": "https://api.github.com/users/ssnover95/repos",
      "events_url": "https://api.github.com/users/ssnover95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssnover95/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-02-24T04:58:59Z",
    "updated_at": "2018-05-22T14:12:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO_F302R8\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n6.3.1 20170620 (release) [ARM/embedded-6-branch revision 249437]\r\n\r\n**mbed-cli version:** \r\n1.2.2\r\n\r\n**mbed-os sha:**\r\ncaeaa49\r\n\r\n**DAPLink version:**\r\nN/A\r\n\r\n**Expected behavior**\r\nAn instance of `mbed::CAN` is constructed and the program runs using Debug profile.\r\n\r\n**Actual behavior**\r\nIf object is constructed using profile `debug.json` the program goes to a fault mode (LD2 on ST-NUCLEO 64 blinks S.O.S.). This behavior is not present when using profile `develop.json`.\r\n\r\nI have however found that running the same code under both profiles on a NUCLEO_F446RE did not yield the fault. Executables built with both profiles ran just fine.\r\n\r\nI noted that with NUCLEO_F302R8 it is not set to be built under mbed OS 5 (I had to modify the targets.json to get it to build), however this is the first instance where I've run into an issue with using the NUCLEO_F302R8.\r\n\r\n**Steps to reproduce**\r\nA minimal example showing the error is here: https://gist.github.com/ssnover95/b94058a0edb987f5e65c4ad2d100ad33\r\n\r\nIs there documentation available regarding what changes need to be made for a target that is not supported by mbed OS 5, but was in a previous version? If the list isn't too long I'd be happy to investigate making those changes."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6196",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6196/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6196/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6196/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6196",
    "id": 299795143,
    "number": 6196,
    "title": "Support for handling BLE_GAP_EVT_CONN_PARAM_UPDATE_REQUEST for NRF52 devices in BLE API.",
    "user": {
      "login": "yogeshk19",
      "id": 21161918,
      "avatar_url": "https://avatars2.githubusercontent.com/u/21161918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yogeshk19",
      "html_url": "https://github.com/yogeshk19",
      "followers_url": "https://api.github.com/users/yogeshk19/followers",
      "following_url": "https://api.github.com/users/yogeshk19/following{/other_user}",
      "gists_url": "https://api.github.com/users/yogeshk19/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yogeshk19/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yogeshk19/subscriptions",
      "organizations_url": "https://api.github.com/users/yogeshk19/orgs",
      "repos_url": "https://api.github.com/users/yogeshk19/repos",
      "events_url": "https://api.github.com/users/yogeshk19/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yogeshk19/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515545581,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20ble",
        "name": "component: ble",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-02-23T17:47:22Z",
    "updated_at": "2018-05-03T00:34:58Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type:  Question\r\n- Related issue: `#4893,#3509`\r\n- Priority: Major \r\n-----------------------------------------------------------------\r\n## Question\r\n\r\n**How to handle BLE_GAP_EVT_CONN_PARAM_UPDATE_REQUEST for NRF52 devices in BLE API? Currently there is no available mechanism to handle this event using the BLE API, as this seems to tie in to the low power mode operation for NRF52 devices. Currently using two NRF52 devices as peripheral and master and when the peripheral requests an update to the connection parameters the master has no mechanism in the mbed BLE API to handle this event BLE_GAP_EVT_CONN_PARAM_UPDATE_REQUEST and to accept the updated connection request. What is the easiest way to achieve this?**\r\n\r\nThanks,\r\nYogesh\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6194",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6194/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6194/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6194/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6194",
    "id": 299787133,
    "number": 6194,
    "title": "Threads and Tickers are not halted when getting into error() or mbed_die()",
    "user": {
      "login": "amq",
      "id": 4178389,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4178389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amq",
      "html_url": "https://github.com/amq",
      "followers_url": "https://api.github.com/users/amq/followers",
      "following_url": "https://api.github.com/users/amq/following{/other_user}",
      "gists_url": "https://api.github.com/users/amq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amq/subscriptions",
      "organizations_url": "https://api.github.com/users/amq/orgs",
      "repos_url": "https://api.github.com/users/amq/repos",
      "events_url": "https://api.github.com/users/amq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-02-23T17:20:54Z",
    "updated_at": "2018-02-27T11:25:53Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nTested on EFM32PG12 with LowPowerTicker\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n6-2017-q2-update\r\n\r\n**mbed-cli version:** \r\n1.3.0\r\n\r\n**mbed-os sha:**\r\ncaeaa49d68c67ee00275cece10cd88e0ed0f6ed3\r\n\r\n**Expected behavior**\r\n\r\nWhen the system goes into `error()`, all threads and tickers should be stopped. Relevant for watchdog feeding / kicking.\r\n\r\n**Actual behavior**\r\n\r\nThreads and Tickers continue to execute and feed watchdog, preventing it from resetting the board.\r\n\r\n**Steps to reproduce**\r\n\r\nTicker\r\n```\r\n#include \"mbed.h\"\r\n\r\nDigitalOut led(LED1);\r\nLowPowerTicker watchdogTicker;\r\n\r\nvoid watchdogRefreshIsr() {\r\n    led = !led;\r\n    // target-specific feed function\r\n};\r\n\r\nint main() {\r\n    watchdogTicker.attach(callback(&watchdogRefreshIsr), 0.5f);\r\n}\r\n```\r\n\r\nThread\r\n```\r\n#include \"mbed.h\"\r\n\r\nDigitalOut led(LED1);\r\nLowPowerTicker watchdogTicker;\r\nThread watchdogThread;\r\nEventQueue watchdogQueue;\r\n\r\nvoid watchdogRefreshHandler() {\r\n    led = !led;\r\n    // target-specific feed function\r\n};\r\n\r\nvoid watchdogRefreshIsr() {\r\n    watchdogQueue.call(callback(&watchdogRefreshHandler));\r\n};\r\n\r\nint main() {\r\n    watchdogThread.start(callback(&watchdogQueue, &EventQueue::dispatch_forever));\r\n    watchdogTicker.attach(callback(&watchdogRefreshIsr), 0.5f);\r\n}\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6187",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6187/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6187/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6187/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6187",
    "id": 299724789,
    "number": 6187,
    "title": "Minor change of SPI interface [API breaking]",
    "user": {
      "login": "drahnr",
      "id": 667047,
      "avatar_url": "https://avatars1.githubusercontent.com/u/667047?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drahnr",
      "html_url": "https://github.com/drahnr",
      "followers_url": "https://api.github.com/users/drahnr/followers",
      "following_url": "https://api.github.com/users/drahnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/drahnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drahnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drahnr/subscriptions",
      "organizations_url": "https://api.github.com/users/drahnr/orgs",
      "repos_url": "https://api.github.com/users/drahnr/repos",
      "events_url": "https://api.github.com/users/drahnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drahnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-02-23T14:15:27Z",
    "updated_at": "2018-02-26T13:22:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Enhancement | Question\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n\r\n## Question\r\n\r\nusing SPI the types do not make much sense.\r\n\r\nThe idea is that things are bytes that are written, I am not 100% sure if `char`is guaranteed to be unsigned. At least as of `C11` this is implementation specific.\r\n\r\nSo should there not be either be made usage of `uint8_t ` (as defined in <`cinttypes>` or `<cstdint>`)  or define a custom `byte_t`.\r\n\r\n`virtual int write(const char *tx_buffer, int tx_length, char *rx_buffer, int rx_length);`\r\n\r\nThe API of `virtual int write(int value);` is not very idiomatic either, the argument should also be an `uint8_t` since that is what is actually transfered, the return value is a mingled version of an error code and a return code.\r\n\r\nproposal (this is an API breaking change):\r\n\r\n`virtual int write(const uint8_t *tx_buffer, size_t tx_length, uint8_t *rx_buffer, size_t rx_length);`\r\n`virtual int write(uint8_t value, uint8_t *ret);`\r\n\r\nI'd like to know what you think about this or what was the reasoning to use the above?\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6180",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6180/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6180/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6180/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6180",
    "id": 299639480,
    "number": 6180,
    "title": "KL27Z \"Unsupported warning\"",
    "user": {
      "login": "ManDeJan",
      "id": 3768010,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3768010?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ManDeJan",
      "html_url": "https://github.com/ManDeJan",
      "followers_url": "https://api.github.com/users/ManDeJan/followers",
      "following_url": "https://api.github.com/users/ManDeJan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ManDeJan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ManDeJan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ManDeJan/subscriptions",
      "organizations_url": "https://api.github.com/users/ManDeJan/orgs",
      "repos_url": "https://api.github.com/users/ManDeJan/repos",
      "events_url": "https://api.github.com/users/ManDeJan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ManDeJan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-02-23T08:55:11Z",
    "updated_at": "2018-03-27T08:54:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I am working with mbed OS 5.7.5 and the KL27Z board,\r\nI get an error if I want to compile that says board not supported\r\nIt seems the file [/targets/targets.json](https://github.com/ARMmbed/mbed-os/blob/master/targets/targets.json) is out dated, I added a \"5\" to the release versions of KL27Z and everything worked fine. Is there a reason it is not yet updated?\r\n\r\nIt says here it is supported: https://os.mbed.com/platforms/FRDM-KL27Z/"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6178",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6178/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6178/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6178/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6178",
    "id": 299563789,
    "number": 6178,
    "title": "Add target definition: nrf51 16k on MCU_NRF51_UNIFIED platform",
    "user": {
      "login": "andrewleech",
      "id": 3318786,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3318786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewleech",
      "html_url": "https://github.com/andrewleech",
      "followers_url": "https://api.github.com/users/andrewleech/followers",
      "following_url": "https://api.github.com/users/andrewleech/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewleech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewleech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewleech/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewleech/orgs",
      "repos_url": "https://api.github.com/users/andrewleech/repos",
      "events_url": "https://api.github.com/users/andrewleech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewleech/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147112891,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20review",
        "name": "needs: review",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 450730565,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/scope:%20new-target",
        "name": "scope: new-target",
        "color": "c2e0c6",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2018-02-23T00:59:07Z",
    "updated_at": "2018-05-23T08:39:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6178",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6178",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6178.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6178.patch"
    },
    "body": "The flash base address in the linker (APP_CODE_BASE) for nrf51_16k_s130 is incorrect, as per the official documentation for S130: http://infocenter.nordicsemi.com/index.jsp?topic=%2Fcom.nordic.infocenter.s130.sds%2Fdita%2Fsoftdevices%2Fs130%2Fmem_usage%2Fmem_resource_reqs.html\r\n\r\nWithout this change applications do not boot when running on a 16K nrf51 (not very common any more) as the softdevice jumps to the wrong location to start the application.\r\n\r\nI've been running with this fix in place using a Raytac MDBT40 module with only 16K ram.\r\n\r\n# Pull request type\r\n\r\n- [x] Fix\r\n- [ ] Refactor\r\n- [ ] New Target\r\n- [ ] Feature\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6174",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6174/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6174/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6174/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6174",
    "id": 299472006,
    "number": 6174,
    "title": "memap ImportError",
    "user": {
      "login": "hosse005",
      "id": 5465925,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5465925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hosse005",
      "html_url": "https://github.com/hosse005",
      "followers_url": "https://api.github.com/users/hosse005/followers",
      "following_url": "https://api.github.com/users/hosse005/following{/other_user}",
      "gists_url": "https://api.github.com/users/hosse005/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hosse005/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hosse005/subscriptions",
      "organizations_url": "https://api.github.com/users/hosse005/orgs",
      "repos_url": "https://api.github.com/users/hosse005/repos",
      "events_url": "https://api.github.com/users/hosse005/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hosse005/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-02-22T19:09:47Z",
    "updated_at": "2018-02-26T14:15:59Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Question\r\nAnybody noticing memap.py ImportError failures with mbed-os-5.7.5?\r\n\r\n**Target**\r\nNot target specific\r\n\r\n**Toolchain:**\r\nNot toolchain specific\r\n\r\n**mbed-cli version:** \r\n1.4.0\r\n\r\n**mbed-os sha:**\r\n569159b\r\n\r\n**Expected behavior**\r\n$ python memap.py displays help screen\r\n\r\n**Actual behavior**\r\nTraceback (most recent call last):\r\n  File \"memap.py\", line 16, in <module>\r\n    from tools.arm_pack_manager import Cache\r\nImportError: No module named tools.arm_pack_manager\r\n\r\n**Steps to reproduce**\r\n$ python memap.py\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6159",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6159/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6159/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6159/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6159",
    "id": 299236168,
    "number": 6159,
    "title": "mbed_platform-critical_section test case is failing",
    "user": {
      "login": "akrnvm",
      "id": 27943065,
      "avatar_url": "https://avatars0.githubusercontent.com/u/27943065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akrnvm",
      "html_url": "https://github.com/akrnvm",
      "followers_url": "https://api.github.com/users/akrnvm/followers",
      "following_url": "https://api.github.com/users/akrnvm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akrnvm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akrnvm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akrnvm/subscriptions",
      "organizations_url": "https://api.github.com/users/akrnvm/orgs",
      "repos_url": "https://api.github.com/users/akrnvm/repos",
      "events_url": "https://api.github.com/users/akrnvm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akrnvm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2018-02-22T06:26:42Z",
    "updated_at": "2018-03-02T07:33:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Bug \r\n- Related issue: `#abc`\r\n- Priority: Blocker | Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\ntests-mbed_platform-critical_section test case is failing\r\n\r\n**Target**\r\nK64F | Custom\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Expected behavior**\r\n\r\ntests-mbed_platform-critical_section test should pass\r\n\r\n**Actual behavior**\r\ntests-mbed_platform-critical_section test case is failing\r\n\r\n**Steps to reproduce**\r\nmbed test -m XXXX -t ARM -v -n tests-mbed_platform-critical_section\r\n\r\n## Question\r\nMy timer is generating interrupt at every 100us and this value is return to us_ticker read function.\r\nBut in this test case, all interrupts are blocked by entering to critical section and  it wait for 100us.\r\n\r\nHow can make pass this test case.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6158",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6158/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6158/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6158/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6158",
    "id": 299225290,
    "number": 6158,
    "title": "STM32F429: \"usb_thread could not read dev descr\" error in USB host keyboard",
    "user": {
      "login": "guest253456",
      "id": 17869415,
      "avatar_url": "https://avatars3.githubusercontent.com/u/17869415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guest253456",
      "html_url": "https://github.com/guest253456",
      "followers_url": "https://api.github.com/users/guest253456/followers",
      "following_url": "https://api.github.com/users/guest253456/following{/other_user}",
      "gists_url": "https://api.github.com/users/guest253456/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guest253456/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guest253456/subscriptions",
      "organizations_url": "https://api.github.com/users/guest253456/orgs",
      "repos_url": "https://api.github.com/users/guest253456/repos",
      "events_url": "https://api.github.com/users/guest253456/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guest253456/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2018-02-22T05:19:27Z",
    "updated_at": "2018-04-16T19:50:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO-STM32F429\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\narm-none-eabi-gcc (15:4.9.3+svn231177-1) 4.9.3 20150529 (prerelease)\r\n\r\n**mbed-cli version:** \r\n1.2.2\r\n\r\n**mbed-os sha:**\r\ncaeaa49\r\n\r\nmbed's USB host keyboard is not working, i'm getting the following error when i try to use the usb host keyboard\r\n>[USB_ERR: ../USBHost/USBHost/USBHost.cpp:149]usb_thread could not read dev descr\r\n>[USB_ERR: ../USBHost/USBHost/USBHost.cpp:149]usb_thread could not read dev descr\r\n>[USB_ERR: ../USBHost/USBHost/USBHost.cpp:149]usb_thread could not read dev descr\r\n>[USB_ERR: ../USBHost/USBHost/USBHost.cpp:149]usb_thread could not read dev descr\r\n>[USB_ERR: ../USBHost/USBHost/USBHost.cpp:149]usb_thread could not read dev descr\r\n>[USB_ERR: ../USBHost/USBHost/USBHost.cpp:149]usb_thread could not read dev descr\r\n>[USB_ERR: ../USBHost/USBHost/USBHost.cpp:149]usb_thread could not read dev descr\r\n>[USB_ERR: ../USBHost/USBHost/USBHost.cpp:149]usb_thread could not read dev descr\r\n>[USB_ERR: ../USBHost/USBHost/USBHost.cpp:149]usb_thread could not read dev descr\r\n>[USB_ERR: ../USBHost/USBHost/USBHost.cpp:149]usb_thread could not read dev descr\r\n>[USB_INFO: ../USBHost/USBHost/USBHost.cpp:177]New device connected: 0x2000b414 [hub: 0 - port: 1]\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6144",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6144/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6144/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6144/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6144",
    "id": 298670677,
    "number": 6144,
    "title": "cleanup .mbedignore additions from exporters",
    "user": {
      "login": "bmcdonnell-ionx",
      "id": 34172339,
      "avatar_url": "https://avatars2.githubusercontent.com/u/34172339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmcdonnell-ionx",
      "html_url": "https://github.com/bmcdonnell-ionx",
      "followers_url": "https://api.github.com/users/bmcdonnell-ionx/followers",
      "following_url": "https://api.github.com/users/bmcdonnell-ionx/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmcdonnell-ionx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmcdonnell-ionx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmcdonnell-ionx/subscriptions",
      "organizations_url": "https://api.github.com/users/bmcdonnell-ionx/orgs",
      "repos_url": "https://api.github.com/users/bmcdonnell-ionx/repos",
      "events_url": "https://api.github.com/users/bmcdonnell-ionx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmcdonnell-ionx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-20T16:57:45Z",
    "updated_at": "2018-03-09T22:10:04Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Related issue: #5989\r\n- Related PR: #6121\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\nWith PR #6121, some exporters (`e2studio`, `gnuarmeclipse`, and `mcuxpresso`) can add to the `.mbedignore` file. However, if the items it wants to add aren't all present, in order, and contiguous, then it adds them all again. (Details in [this comment](https://github.com/ARMmbed/mbed-os/pull/6121#issuecomment-366358012).)\r\n\r\n**Suggested enhancement**\r\n\r\nIf an exporter wants to ignore some files, it could parse `.mbedignore`, and append only what it needs to it.\r\n\r\n**Pros**\r\n\r\nWon't make unnecessary changes to the `.mbedignore` file.\r\n\r\n**Cons**\r\n\r\n?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6138",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6138/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6138/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6138/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6138",
    "id": 298336181,
    "number": 6138,
    "title": "STM32L0xx Hardfault after sleep while running the debugger",
    "user": {
      "login": "marcemmers",
      "id": 35759328,
      "avatar_url": "https://avatars0.githubusercontent.com/u/35759328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcemmers",
      "html_url": "https://github.com/marcemmers",
      "followers_url": "https://api.github.com/users/marcemmers/followers",
      "following_url": "https://api.github.com/users/marcemmers/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcemmers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcemmers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcemmers/subscriptions",
      "organizations_url": "https://api.github.com/users/marcemmers/orgs",
      "repos_url": "https://api.github.com/users/marcemmers/repos",
      "events_url": "https://api.github.com/users/marcemmers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcemmers/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-02-19T16:30:40Z",
    "updated_at": "2018-02-20T11:13:43Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Related issue: #5396\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Toolchain**\r\nIAR 8.11.2\r\n\r\n**Target**\r\nSTM32L072CZ\r\n\r\n**mbed-os sha:**\r\nb8d218038bcd8c2ad447d91ab94c927118c1ad61\r\n\r\n**Expected behavior**\r\nNormal use of `HAL_PWR_EnterSLEEPMode()`\r\n\r\n**Actual behavior**\r\nOn certain occasions the device crashes with a hardfault after calling `HAL_PWR_EnterSLEEPMode()`. This is however only when running with the debugger. After some extensive testing it seems that sometimes the flash has some glitches and the stack is popped an additional time causing the SR to be out of sync.\r\n\r\nThe first image shows the disassembly of the routine as it should be and this functions without issue. The live watch is to indicate that the flash is indeed read correctly.\r\n![image](https://user-images.githubusercontent.com/35759328/36386236-5f773fe6-1595-11e8-9088-0b25797923c7.png)\r\n\r\nThis image shows the disassembly but this time with wrong instruction according to the live watch. The new instructions are an additional `WFE` and an additional `POP {R4}`. The instructions down below also execute and the `BX LR` on line 0x80097F2 returns with the SR off by 1 causing the hardfault later on.\r\n![image](https://user-images.githubusercontent.com/35759328/36386276-84124b70-1595-11e8-9e62-fde2c2f2156d.png)\r\n\r\n**Steps to reproduce**\r\nI am running mbed in Tickless mode. To be able to do this I have defined the mbed_get_m0_tick_irqn as the LCD_IRQn since I won't use that one.\r\nThe only thing I do in main is set the ULP bit in the PWR->CR register and add a call_every to the shared queue to toggle a led and wakeup every so often:\r\n\r\n```\r\nDigitalOut led1(PA_3);\r\nEventQueue *pQueue = mbed_event_queue();\r\n\r\nextern \"C\"\r\n{\r\n    IRQn_Type mbed_get_m0_tick_irqn()\r\n    {\r\n        return LCD_IRQn;\r\n    }\r\n}\r\n\r\nvoid Led1On()\r\n{\r\n    led1 != led1;\r\n}\r\n\r\nint main()\r\n{\r\n    PWR->CR |= 0x200;\r\n    pQueue->call_every(5000, Led1On);\r\n    return 0;\r\n}\r\n```\r\n\r\nAfter that the only thing running is the idle thread after returning from main.\r\nThe issue only occurs when MBED_DEBUG is defined or if deep sleep is locked. This means HAL_PWR_EnterSTOPMode is not affected.\r\n\r\nNot setting the ULP bit solves the issue but this means we can't go low power as we want to.\r\nAdding a couple of nops after the wfi seems to solve the issue, just as was the case in #5396.\r\n\r\n\r\n\r\nThe only other reference I could find online was this: https://community.st.com/thread/41602-stm32l1-hardfault-when-returning-from-wfi-only-when-debugger-attached which wasn't answered but seems to be the same issue as I am having now.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6132",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6132/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6132/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6132/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6132",
    "id": 298151956,
    "number": 6132,
    "title": "LoRaWAN HAL should have function to read EUI if device has one",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 17,
    "created_at": "2018-02-19T03:23:36Z",
    "updated_at": "2018-02-20T14:29:28Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\nSome targets - like the Multi-Tech ones - have an EUI printed on the module. Very useful as you don't have to buy one yourself. However, we cannot read this EUI at the moment. \r\n\r\n**Suggested enhancement**\r\n\r\nAdd a HAL function to read EUI. Maybe in the LoRaWAN HAL, but I assume we have similar things for BLE.\r\n\r\n**Pros**\r\n\r\nUsers don't have to configure their EUI in mbed_app.json anymore.\r\n\r\n**Cons**\r\n\r\nCould also be in userspace. Also I don't know how to read the EUI on MT devices, because the code is in a statically compiled binary.\r\n\r\ncc @hasnainvirk"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6131",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6131/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6131/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6131/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6131",
    "id": 298145039,
    "number": 6131,
    "title": "Add LoRa radio pins to HAL for targets with LoRa board",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-02-19T02:20:35Z",
    "updated_at": "2018-05-24T08:41:27Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\nA variety of targets have a LoRa radio on board. This radio is connected to the MCU via some pins, and these pins won't change over the lifetime of the device. However, to write an application which supports all LoRa modules that we have, we need to write lengthy `#ifdef`'s or `target_overrides` (for example in [mbed-os-example-lorawan](https://github.com/ARMmbed/mbed-os-example-lorawan/blob/master/mbed_app.json). Every demo application of our stack is going to have the same issue.\r\n\r\n**Suggested enhancement**\r\n\r\nAdd LORA_RADIO_* definitions to the HAL of all targets that have an embedded LoRa module. Also a `TARGET_HAS_EMBEDDED_LORA` definition (or something) would be nice to have.\r\n\r\n**Pros**\r\n\r\nDon't have to repeat ourselves in demo applications.\r\n\r\n**Cons**\r\n\r\nMight be something that lives in user space instead. Could add it to https://github.com/ARMmbed/mbed-semtech-lora-rf-drivers instead.\r\n\r\n@hasnainvirk what's your opinion."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6122",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6122/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6122/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6122/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6122",
    "id": 297900107,
    "number": 6122,
    "title": "Instantiating OdinWiFiInterface seems to be changing Thread behavior with I2C Slave",
    "user": {
      "login": "dmelo",
      "id": 89710,
      "avatar_url": "https://avatars2.githubusercontent.com/u/89710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dmelo",
      "html_url": "https://github.com/dmelo",
      "followers_url": "https://api.github.com/users/dmelo/followers",
      "following_url": "https://api.github.com/users/dmelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/dmelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dmelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dmelo/subscriptions",
      "organizations_url": "https://api.github.com/users/dmelo/orgs",
      "repos_url": "https://api.github.com/users/dmelo/repos",
      "events_url": "https://api.github.com/users/dmelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dmelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-02-16T19:48:56Z",
    "updated_at": "2018-05-24T05:05:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Bug\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\narm-none-eabi-g++ (Fedora 7.1.0-2.fc26) 7.1.0\r\n\r\n**mbed-cli version:** \r\n1.4.0\r\n\r\n**mbed-os sha:**\r\ncaeaa49d6 (HEAD, tag: mbed-os-5.7.4, tag: latest) Merge pull request #5954 from ARMmbed/release-candidate\r\n\r\n**DAPLink version:**\r\n\r\n**Expected behavior**\r\nI have two threads, the first runs i2cslave and just prints what it gets from the master and the second thread prints a simple string and then sleeps for 1 second. Both threads are in infinite loop.\r\n\r\nExecution 1 - When I run this program, everything runs just fine.\r\n\r\nExecution 2 - When I add an global OdinWiFiInterface instance, I expected both thread to keep running and showing the printf results on the serial.\r\n\r\n**Actual behavior**\r\n\r\nOn execution 2, the i2C slave thread seems to be starving the second thread. I don't see the printf from the second thread anymore.\r\n\r\n**Steps to reproduce**\r\n\r\nRun the following code:\r\n\r\n```c\r\n#include \"mbed.h\"\r\n#include \"rtos.h\"\r\n#include \"OdinWiFiInterface.h\"\r\n\r\n#define I2C_ADDRESS 0x25\r\n\r\nThread t1, thread_i2c_slave;\r\n\r\n// To reproduce execution 1, comment the line above.\r\nOdinWiFiInterface wifi; // During execution 2, I have instanced a OdinWiFiInterface object.\r\n\r\nvoid func_t1()\r\n{\r\n    for (int i = 0;; i++) {\r\n        printf(\"FUNC_T1 ============\\n%d\\n==============\\n\\n\", i);\r\n        Thread::wait(1000);\r\n    }\r\n}\r\n\r\nvoid i2c_slave()\r\n{\r\n    I2CSlave slave(PF_0, PF_1);\r\n    int count = 0;\r\n    char buf[10];\r\n    char msg[] = \"Slave!\";\r\n\r\n    slave.address(I2C_ADDRESS);\r\n    while (1) {\r\n        int i = slave.receive();\r\n        count++;\r\n        switch (i) {\r\n            case I2CSlave::ReadAddressed:\r\n                slave.write(msg, strlen(msg) + 1); // Includes null char\r\n                break;\r\n            case I2CSlave::WriteGeneral:\r\n                slave.read(buf, 10);\r\n                printf(\"Read G: %s\\n\", buf);\r\n                break;\r\n            case I2CSlave::WriteAddressed:\r\n                slave.read(buf, 10);\r\n                printf(\"Read A: strlen %d. \", strlen(buf));\r\n                for (unsigned int c =0; c < strlen(buf); c++) {\r\n                    printf(\"%X \", buf[c]);\r\n                }\r\n                printf(\"\\n\");\r\n                printf(\"count: %d\\n\", count);\r\n                break;\r\n        }\r\n        for(int i = 0; i < 10; i++) buf[i] = 0;    // Clear buffer\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    printf(\"BEGIN\\n\");\r\n\r\n    printf(\"starting threads\\n\");\r\n    t1.start(func_t1);\r\n    thread_i2c_slave.start(i2c_slave);\r\n\r\n    t1.join();\r\n    thread_i2c_slave.join();\r\n\r\n    return 0;\r\n}\r\n\r\n```\r\n\r\nOutput on the execution 1:\r\n```\r\nBEGIN\r\nstarting threads\r\nFUNC_T1 ============\r\n0\r\n==============\r\n\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 749070\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 1602034\r\nFUNC_T1 ============\r\n1\r\n==============\r\n\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 2386922\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 3237849\r\nFUNC_T1 ============\r\n2\r\n==============\r\n\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 4022860\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 4873974\r\nFUNC_T1 ============\r\n3\r\n==============\r\n\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 5658975\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 6510014\r\nFUNC_T1 ============\r\n4\r\n==============\r\n\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 7294943\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 8145975\r\nFUNC_T1 ============\r\n5\r\n==============\r\n\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 8930893\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 9781846\r\n```\r\n\r\nOutput on execution 2:\r\n```\r\nBEGIN\r\nstarting threads\r\nFUNC_T1 ============\r\n0\r\n==============\r\n\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 139268\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 952623\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 1778385\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 2602818\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 3429469\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 4258486\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 5087584\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 5912158\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 6738882\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 7568029\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 8397041\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 9225966\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 10054951\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 10882079\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 11709333\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 12536402\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 13363531\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 14190524\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 15017642\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 15844821\r\nRead A: strlen 4. 1 61 62 63 \r\ncount: 16671864\r\n```\r\n\r\n----------------------------------------------------------------\r\n\r\n## Question\r\n\r\nHow can I make the threads work while using OdinWiFiInterface?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6111",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6111/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6111/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6111/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6111",
    "id": 297508350,
    "number": 6111,
    "title": "dir_read function return unexist file/directory",
    "user": {
      "login": "moranpeker",
      "id": 17570418,
      "avatar_url": "https://avatars2.githubusercontent.com/u/17570418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moranpeker",
      "html_url": "https://github.com/moranpeker",
      "followers_url": "https://api.github.com/users/moranpeker/followers",
      "following_url": "https://api.github.com/users/moranpeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/moranpeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moranpeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moranpeker/subscriptions",
      "organizations_url": "https://api.github.com/users/moranpeker/orgs",
      "repos_url": "https://api.github.com/users/moranpeker/repos",
      "events_url": "https://api.github.com/users/moranpeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moranpeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "geky",
      "id": 1075160,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geky",
      "html_url": "https://github.com/geky",
      "followers_url": "https://api.github.com/users/geky/followers",
      "following_url": "https://api.github.com/users/geky/following{/other_user}",
      "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
      "organizations_url": "https://api.github.com/users/geky/orgs",
      "repos_url": "https://api.github.com/users/geky/repos",
      "events_url": "https://api.github.com/users/geky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geky/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "geky",
        "id": 1075160,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/geky",
        "html_url": "https://github.com/geky",
        "followers_url": "https://api.github.com/users/geky/followers",
        "following_url": "https://api.github.com/users/geky/following{/other_user}",
        "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
        "organizations_url": "https://api.github.com/users/geky/orgs",
        "repos_url": "https://api.github.com/users/geky/repos",
        "events_url": "https://api.github.com/users/geky/events{/privacy}",
        "received_events_url": "https://api.github.com/users/geky/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-02-15T16:24:15Z",
    "updated_at": "2018-02-22T22:56:50Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Bug\r\n- Related issue: `#abc`\r\n- Priority:  Major \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**please follow this scenario:** _(i added some prints in addition to the lfs prints)_\r\n\r\nlfs info: dir_read(0x2001a2e8, 0x2000add4)\r\nlfs info: dir_read -> 1\r\n_pal_print - readdir function output:   test_f1 (this is the name of the file inside the dir)_\r\n_pal_print - full path:   /sd/pri/dir1/test_f1_ \r\n_pal_print -  file type:   5 (== DT_REG,     ///< This is a regular file.)_\r\nlfs info: remove(\"pri/dir1/test_f1\")\r\nlfs info: remove -> 0\r\nlfs info: dir_read(0x2001a2e8, 0x2000add4)\r\nlfs info: dir_read -> 1\r\n__pal_print - readdir function output:   test_f19aJ_ \r\n_pal_print - full path:   /sd/pri/dir1/test_f19aJ_ \r\n_pal_print -  file type:    3  (== DT_DIR,     ///< This is a directory.)__\r\nlfs info: dir_open(0x0, \"pri/dir1/test_f19aJ\")\r\nlfs info: dir_open -> -2  (== FS ERROR NO PATH)\r\nlfs info: remove(\"pri/dir1/test_f19aJ\")\r\nlfs info: remove -> -2\r\n\r\n**Actual behavior**\r\nFirst, dir_read return an exist file first . file type is regular file. we remove it successfully.\r\nat the second time dir_read  return unexist file - (name test_f19aJ ). it's type is directory. try to open it and dir_open return -2 because its not exist.\r\n\r\n**Expected behavior**\r\ndir_read function must return only existing files.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6098",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6098/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6098/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6098/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6098",
    "id": 297252962,
    "number": 6098,
    "title": "Ticker test fails with NRF51 when LF clock is used",
    "user": {
      "login": "cmonr",
      "id": 260086,
      "avatar_url": "https://avatars1.githubusercontent.com/u/260086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmonr",
      "html_url": "https://github.com/cmonr",
      "followers_url": "https://api.github.com/users/cmonr/followers",
      "following_url": "https://api.github.com/users/cmonr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmonr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmonr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmonr/subscriptions",
      "organizations_url": "https://api.github.com/users/cmonr/orgs",
      "repos_url": "https://api.github.com/users/cmonr/repos",
      "events_url": "https://api.github.com/users/cmonr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmonr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-02-14T21:33:43Z",
    "updated_at": "2018-02-14T22:06:19Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Related issue: https://github.com/ARMmbed/mbed-os/pull/5892\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNRF51 | OSHChip\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**mbed-os sha:**\r\nf9cd95f30\r\n\r\n**Expected behavior**\r\nTicker test should pass, when using the RC clock as the main clock source.\r\n\r\n**Actual behavior**\r\nTicker test fails\r\n\r\n**Steps to reproduce**\r\n* Checkout mbed-os\r\n* Add `\"overrides\": {\"lf_clock_src\": \"NRF_LF_SRC_RC\"}\" to NRF51_DK target, along with comma where necessary.\r\n* Run `mbed test -m AUTO -t GCC_ARM -n tests-mbed_drivers-ticker -v`\r\n\r\n**Relevant output**\r\n```\r\n...\r\n[1518643678.90][CONN][RXD] >>> Running case #9: 'Test multi ticker'...\r\n[1518643678.94][CONN][INF] found KV pair in stream: {{__testcase_start;Test multi ticker}}, queued...\r\n[1518643679.22][CONN][INF] found KV pair in stream: {{__testcase_finish;Test multi ticker;1;0}}, queued...\r\n[1518643679.26][CONN][RXD] >>> 'Test multi ticker': 1 passed, 0 failed\r\n[1518643679.26][CONN][RXD]\r\n[1518643679.32][CONN][RXD] >>> Running case #10: 'Test timers: 1x ticker'...\r\n[1518643679.37][CONN][INF] found KV pair in stream: {{__testcase_start;Test timers: 1x ticker}}, queued...\r\n[1518643679.40][CONN][INF] found KV pair in stream: {{timing_drift_check_start;0}}, queued...\r\n[1518643679.42][SERI][TXD] {{base_time;0}}\r\n[1518643679.46][CONN][INF] found KV pair in stream: {{base_time;40000}}, queued...\r\n[1518643689.07][HTST][INF] Device base time 40000\r\n[1518643689.07][HTST][INF] sleeping for 9.59800720215 to measure drift accurately\r\n[1518643689.08][SERI][TXD] {{final_time;0}}\r\n[1518643689.13][CONN][INF] found KV pair in stream: {{final_time;10489000}}, queued...\r\n[1518643689.13][HTST][INF] Device final time 10489000\r\n[1518643689.13][HTST][INF] Compute host events\r\n[1518643689.13][HTST][INF] Transport delay 0: 0.0574750900269\r\n[1518643689.13][HTST][INF] Transport delay 1: 0.0619189739227\r\n[1518643689.13][HTST][INF] DUT base time : 40000.0\r\n[1518643689.14][HTST][INF] DUT end time  : 10489000.0\r\n[1518643689.14][HTST][INF] min_pass : 9.24115055799 , max_pass : 10.0885394812 for 5.0%%\r\n[1518643689.14][HTST][INF] min_inconclusive : 9.12772619724 , max_inconclusive : 10.2139032483\r\n[1518643689.14][HTST][INF] Time reported by device: 10.449\r\n[1518643689.14][HTST][INF] Time outside of passing range. Timing drift seems to be present !!!\r\n[1518643689.14][SERI][TXD] {{fail;0}}\r\n[1518643689.25][CONN][RXD] :130::FAIL: Expected 'pass' Was 'fail'. Host side script reported a fail...\r\n[1518643689.31][CONN][INF] found KV pair in stream: {{__testcase_finish;Test timers: 1x ticker;0;1}}, queued...\r\n[1518643689.41][CONN][RXD] >>> 'Test timers: 1x ticker': 0 passed, 1 failed with reason 'Assertion Failed'\r\n[1518643689.41][CONN][RXD]\r\n[1518643689.49][CONN][RXD] >>> Test cases: 9 passed, 1 failed with reason 'Assertion Failed'\r\n[1518643689.52][CONN][RXD] >>> TESTS FAILED!\r\n[1518643689.56][CONN][INF] found KV pair in stream: {{__testcase_summary;9;1}}, queued...\r\n[1518643689.58][HTST][ERR] orphan event in main phase: {{max_heap_usage;0}}, timestamp=1518643689.580707\r\n[1518643689.58][CONN][INF] found KV pair in stream: {{max_heap_usage;0}}, queued...\r\n[1518643689.61][HTST][ERR] orphan event in main phase: {{reserved_heap;0}}, timestamp=1518643689.612596\r\n[1518643689.61][CONN][INF] found KV pair in stream: {{reserved_heap;0}}, queued...\r\n[1518643689.63][HTST][INF] __notify_complete(False)\r\n[1518643689.63][HTST][INF] __exit_event_queue received\r\n[1518643689.63][HTST][INF] test suite run finished after 16.34 sec...\r\n[1518643689.63][CONN][INF] found KV pair in stream: {{end;failure}}, queued...\r\n[1518643689.63][CONN][INF] received special event '__host_test_finished' value='True', finishing\r\n[1518643689.70][HTST][INF] CONN exited with code: 0\r\n[1518643689.70][HTST][INF] No events in queue\r\n[1518643689.70][HTST][INF] stopped consuming events\r\n[1518643689.70][HTST][INF] host test result() call skipped, received: False\r\n[1518643689.70][HTST][WRN] missing __exit event from DUT\r\n[1518643689.70][HTST][INF] calling blocking teardown()\r\n[1518643689.70][HTST][INF] teardown() finished\r\n[1518643689.70][HTST][INF] {{result;failure}}\r\nmbedgt: checking for GCOV data...\r\nmbedgt: mbed-host-test-runner: stopped and returned 'FAIL'\r\nmbedgt: test on hardware with target id: 110000005032312036393738313037313032303197969903\r\nmbedgt: test suite 'tests-mbed_drivers-ticker' ....................................................... FAIL in 70.66 sec\r\n\ttest case: 'Test attach for 0.01s and time measure' .......................................... OK in 0.08 sec\r\n\ttest case: 'Test attach for 0.1s and time measure' ........................................... OK in 0.16 sec\r\n\ttest case: 'Test attach for 0.5s and time measure' ........................................... OK in 0.54 sec\r\n\ttest case: 'Test attach_us for 100ms and time measure' ....................................... OK in 0.16 sec\r\n\ttest case: 'Test attach_us for 10ms and time measure' ........................................ OK in 0.08 sec\r\n\ttest case: 'Test attach_us for 500ms and time measure' ....................................... OK in 0.53 sec\r\n\ttest case: 'Test detach' ..................................................................... OK in 0.70 sec\r\n\ttest case: 'Test multi call and time measure' ................................................ OK in 1.01 sec\r\n\ttest case: 'Test multi ticker' ............................................................... OK in 0.28 sec\r\n\ttest case: 'Test timers: 1x ticker' .......................................................... FAIL in 9.94 sec\r\n\ttest case: 'Test timers: 2x ticker' .......................................................... SKIPPED in 0.00 sec\r\nmbedgt: test case summary: 9 passes, 1 failure\r\nmbedgt: utest test case summary mismatch: utest reported passes and failures miscount!\r\n\treported by utest: passes = 9, failures 1)\r\n\ttest case result count: passes = 9, failures 2)\r\nmbedgt: all tests finished!\r\nmbedgt: shuffle seed: 0.0354585733\r\nmbedgt: test suite report:\r\n+------------------+---------------+---------------------------+--------+--------------------+-------------+\r\n| target           | platform_name | test suite                | result | elapsed_time (sec) | copy_method |\r\n+------------------+---------------+---------------------------+--------+--------------------+-------------+\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-mbed_drivers-ticker | FAIL   | 70.66              | default     |\r\n+------------------+---------------+---------------------------+--------+--------------------+-------------+\r\nmbedgt: test suite results: 1 FAIL\r\nmbedgt: test case report:\r\n+------------------+---------------+---------------------------+-------------------------------------------+--------+--------+---------+--------------------+\r\n| target           | platform_name | test suite                | test case                                 | passed | failed | result  | elapsed_time (sec) |\r\n+------------------+---------------+---------------------------+-------------------------------------------+--------+--------+---------+--------------------+\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-mbed_drivers-ticker | Test attach for 0.01s and time measure    | 1      | 0      | OK      | 0.08               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-mbed_drivers-ticker | Test attach for 0.1s and time measure     | 1      | 0      | OK      | 0.16               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-mbed_drivers-ticker | Test attach for 0.5s and time measure     | 1      | 0      | OK      | 0.54               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-mbed_drivers-ticker | Test attach_us for 100ms and time measure | 1      | 0      | OK      | 0.16               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-mbed_drivers-ticker | Test attach_us for 10ms and time measure  | 1      | 0      | OK      | 0.08               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-mbed_drivers-ticker | Test attach_us for 500ms and time measure | 1      | 0      | OK      | 0.53               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-mbed_drivers-ticker | Test detach                               | 1      | 0      | OK      | 0.7                |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-mbed_drivers-ticker | Test multi call and time measure          | 1      | 0      | OK      | 1.01               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-mbed_drivers-ticker | Test multi ticker                         | 1      | 0      | OK      | 0.28               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-mbed_drivers-ticker | Test timers: 1x ticker                    | 0      | 1      | FAIL    | 9.94               |\r\n| NRF51_DK-GCC_ARM | NRF51_DK      | tests-mbed_drivers-ticker | Test timers: 2x ticker                    | 0      | 0      | SKIPPED | 0.0                |\r\n+------------------+---------------+---------------------------+-------------------------------------------+--------+--------+---------+--------------------+\r\nmbedgt: test case results: 1 FAIL / 1 SKIPPED / 9 OK\r\nmbedgt: completed in 71.07 sec\r\nmbedgt: exited with code 1\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6091",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6091/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6091/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6091/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6091",
    "id": 297053483,
    "number": 6091,
    "title": "Critical Sections when \"FEATURE_UVISOR\" not defined",
    "user": {
      "login": "paul-adam",
      "id": 31661138,
      "avatar_url": "https://avatars0.githubusercontent.com/u/31661138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paul-adam",
      "html_url": "https://github.com/paul-adam",
      "followers_url": "https://api.github.com/users/paul-adam/followers",
      "following_url": "https://api.github.com/users/paul-adam/following{/other_user}",
      "gists_url": "https://api.github.com/users/paul-adam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paul-adam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paul-adam/subscriptions",
      "organizations_url": "https://api.github.com/users/paul-adam/orgs",
      "repos_url": "https://api.github.com/users/paul-adam/repos",
      "events_url": "https://api.github.com/users/paul-adam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paul-adam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-02-14T10:58:59Z",
    "updated_at": "2018-02-22T15:37:58Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\nIn a source code without \"FEATURE_UVISOR\" defined:\r\nIn file \"mbed_critical.c\" there are the lines (from line 68):\r\n\r\n```\r\n// FIXME\r\n#ifndef   FEATURE_UVISOR\r\n    if (interrupt_enable_counter > 0) {\r\n        MBED_ASSERT(interrupts_disabled);\r\n    }\r\n#else\r\nthus the function \"core_util_critical_section_enter\" cannot be called twice without  calling \"core_util_critical_section_exit\".\r\n`\r\nOr the function \"Timer::start()\" calls inside a critical section the function \"ticker_read_us\":\r\nvoid Timer::start() {\r\n    core_util_critical_section_enter();\r\n    if (!_running) {\r\n        if(_lock_deepsleep) {\r\n            sleep_manager_lock_deep_sleep();\r\n        }\r\n        _start = ticker_read_us(_ticker_data);\r\n        _running = 1;\r\n    }\r\n    core_util_critical_section_exit();\r\n}\r\n\r\nFunction \"ticker_read_us\" itself calls \"core_util_critical_section_enter\":\r\nus_timestamp_t ticker_read_us(const ticker_data_t *const ticker)\r\n{\r\n    initialize(ticker);\r\n\r\n    core_util_critical_section_enter();\r\n    update_present_time(ticker);\r\n    core_util_critical_section_exit();\r\n\r\n    return ticker->queue->present_time;\r\n}\r\n\r\n```\r\n\r\nThis does not work...\r\n\r\n**Target**\r\nB_L475E_IOT01A\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n?\r\n\r\n**mbed-cli version:** \r\n1.3.0\r\n\r\n**mbed-os sha:**\r\n?\r\n\r\n**DAPLink version:**\r\n?\r\n\r\n**Expected behavior**\r\nIn file \"mbed_critical.c\" the code should be changed to  (from line 68):\r\n// FIXME\r\n#ifndef   FEATURE_UVISOR\r\n    if (interrupt_enable_counter > 1) {\r\n        MBED_ASSERT(interrupts_disabled);\r\n    }\r\n#else\r\n\r\n**Actual behavior**\r\nTarget executes \"mbed_die\". \r\n\r\n**Steps to reproduce**\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**How to?**\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6089",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6089/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6089/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6089/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6089",
    "id": 296981763,
    "number": 6089,
    "title": "mbed export -i IAR -m NUCLEO_L443RC not working with mbed-os-5",
    "user": {
      "login": "kmkuo",
      "id": 20100561,
      "avatar_url": "https://avatars3.githubusercontent.com/u/20100561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kmkuo",
      "html_url": "https://github.com/kmkuo",
      "followers_url": "https://api.github.com/users/kmkuo/followers",
      "following_url": "https://api.github.com/users/kmkuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kmkuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kmkuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kmkuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kmkuo/orgs",
      "repos_url": "https://api.github.com/users/kmkuo/repos",
      "events_url": "https://api.github.com/users/kmkuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kmkuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-02-14T05:39:51Z",
    "updated_at": "2018-02-21T04:20:03Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Target\r\nNUCLEO_L443RC\r\n\r\nToolchain:\r\nIAR\r\n\r\nToolchain version: 6.4.0\r\n\r\nmbed-cli version:\r\n1.4.0\r\n\r\nSteps to reproduce\r\nmbed export -i IAR -m NUCLEO_L443RC"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6085",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6085/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6085/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6085/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6085",
    "id": 296815692,
    "number": 6085,
    "title": "LittleFS failure to format Blockdevice - FAT works fine",
    "user": {
      "login": "drahnr",
      "id": 667047,
      "avatar_url": "https://avatars1.githubusercontent.com/u/667047?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drahnr",
      "html_url": "https://github.com/drahnr",
      "followers_url": "https://api.github.com/users/drahnr/followers",
      "following_url": "https://api.github.com/users/drahnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/drahnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drahnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drahnr/subscriptions",
      "organizations_url": "https://api.github.com/users/drahnr/orgs",
      "repos_url": "https://api.github.com/users/drahnr/repos",
      "events_url": "https://api.github.com/users/drahnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drahnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "geky",
      "id": 1075160,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geky",
      "html_url": "https://github.com/geky",
      "followers_url": "https://api.github.com/users/geky/followers",
      "following_url": "https://api.github.com/users/geky/following{/other_user}",
      "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
      "organizations_url": "https://api.github.com/users/geky/orgs",
      "repos_url": "https://api.github.com/users/geky/repos",
      "events_url": "https://api.github.com/users/geky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geky/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "geky",
        "id": 1075160,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/geky",
        "html_url": "https://github.com/geky",
        "followers_url": "https://api.github.com/users/geky/followers",
        "following_url": "https://api.github.com/users/geky/following{/other_user}",
        "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
        "organizations_url": "https://api.github.com/users/geky/orgs",
        "repos_url": "https://api.github.com/users/geky/repos",
        "events_url": "https://api.github.com/users/geky/events{/privacy}",
        "received_events_url": "https://api.github.com/users/geky/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-02-13T17:08:51Z",
    "updated_at": "2018-02-26T10:35:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n\r\n**Target**\r\nNRF52_DK / CUSTOM\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n\r\n**mbed-cli version:** \r\n1.3.0\r\n\r\n**mbed-os sha:**\r\n4.7.4 + 2 patches\r\n\r\n**Expected behavior**\r\nSame succesful test as with FATFileSystem\r\n\r\n**Actual behavior**\r\nFailure -52\r\n\r\n**Steps to reproduce**\r\n\r\nCode taken from one of the mbed fat fs examples\r\n```\r\n#define LITTLE_IS_BETTER_THAN_FAT true\r\nconst static char LOG_TAG[] = \"Test\";\r\n\r\nint fstest(BlockDevice& bd) {\r\n  int error = 0;\r\n  Log::d(LOG_TAG, \"***Start***\");\r\n    #if LITTLE_IS_BETTER_THAN_FAT\r\n/// 4096 is the native block/sector size\r\n    lfs_size_t read_size = 4096;\r\n    lfs_size_t prog_size = 4096;\r\n    lfs_size_t bock_size = 256;\r\n    lfs_size_t lookahead = 128;\r\n    error = LittleFileSystem::format(&bd, read_size, prog_size, bock_size, lookahead);\r\n    #else\r\n  error = FATFileSystem::format(&bd);\r\n  #endif\r\n  return_error(error);\r\n \r\n  Log::d(LOG_TAG, \"Mounting the filesystem on \\\"/woot\\\". \");\r\n  error = fs.mount(&bd);\r\n  return_error(error);\r\n \r\n  Log::d(LOG_TAG, \"Opening a new file, numbers.txt.\");\r\n  FILE* fd = fopen(\"/woot/numbers.txt\", \"w\");\r\n  errno_error(fd);\r\n \r\n  for (int i = 0; i < 20; i++){\r\n    Log::d(LOG_TAG, \"Writing decimal numbers to a file (%d/20)\\r\", i);\r\n    fprintf(fd, \"%d\", i);\r\n  }\r\n  Log::d(LOG_TAG, \"Writing decimal numbers to a file (20/20) done.\");\r\n \r\n  Log::d(LOG_TAG, \"Closing file.\");\r\n  fclose(fd);\r\n  Log::d(LOG_TAG, \" done.\");\r\n \r\n  Log::d(LOG_TAG, \"Re-opening file read-only.\");\r\n  fd = fopen(\"/woot/numbers.txt\", \"r\");\r\n  errno_error(fd);\r\n \r\n  Log::d(LOG_TAG, \"Dumping file to screen.\");\r\n  char buff[16] = {0};\r\n  while (!feof(fd)){\r\n    int size = fread(&buff[0], 1, 15, fd);\r\n    fwrite(&buff[0], 1, size, stdout);\r\n  }\r\n  Log::d(LOG_TAG, \"EOF.\");\r\n \r\n  Log::d(LOG_TAG, \"Closing file.\");\r\n  fclose(fd);\r\n  Log::d(LOG_TAG, \" done.\");\r\n \r\n  Log::d(LOG_TAG, \"Opening root directory.\");\r\n  DIR* dir = opendir(\"/woot/\");\r\n  errno_error(fd);\r\n \r\n  struct dirent* de;\r\n  Log::d(LOG_TAG, \"Printing all filenames:\");\r\n  while((de = readdir(dir)) != NULL){\r\n    Log::d(LOG_TAG, \"  %s\", &(de->d_name)[0]);\r\n  }\r\n \r\n  Log::d(LOG_TAG, \"Closeing root directory. \");\r\n  error = closedir(dir);\r\n  return_error(error);\r\n  Log::d(LOG_TAG, \"Filesystem Demo complete.\");\r\n \r\n  while (true) {}\r\n}\r\n```\r\nOutput:\r\n\r\n```\r\nTest  Mounting the filesystem on \"/woot\".\r\nTest  Failure. -52\r\n```\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\nAnything wrong with the parameters above\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6081",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6081/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6081/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6081/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6081",
    "id": 296724573,
    "number": 6081,
    "title": "Add shutdown mode to sleep api",
    "user": {
      "login": "ivanccu",
      "id": 36444030,
      "avatar_url": "https://avatars1.githubusercontent.com/u/36444030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanccu",
      "html_url": "https://github.com/ivanccu",
      "followers_url": "https://api.github.com/users/ivanccu/followers",
      "following_url": "https://api.github.com/users/ivanccu/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanccu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanccu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanccu/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanccu/orgs",
      "repos_url": "https://api.github.com/users/ivanccu/repos",
      "events_url": "https://api.github.com/users/ivanccu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanccu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-13T12:45:58Z",
    "updated_at": "2018-02-14T21:38:41Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement \r\n- Related issue: `Shutdown api`\r\n- Priority: Major \r\n\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nCurrently it is starting to work in the industrial sector with the internet of things. \r\nOne of the characteristics of IoT is the low consumption. To achieve this low consumption, manufacturers already have microcontrollers such as the STM32L4 capable of entering ultra-low consumption mode (shutdown), sacrificing information not stored in memory.\r\nThis utility is very useful at the moment but, in spite of the fact that in this case ST has implemented this functionality for its microcontroller, this function does not exist in the mbed library.\r\nWith the current library (sleep) you can only reach two operating modes (sleep and deepsleep) that have higher consumption than shutdown.\r\nTherefore if you need to use the shutdown function in your project you need to go down to the HAL level and try to do it on your own. Possibly resulting errors since going down to the HAL layer implies losing the thread safety\r\n\r\n\r\n**Suggested enhancement**\r\nAdd shutdown mode to de mbed library\r\n\r\n**Pros**\r\n-more easy to use for the user\r\n-mbed will be more itnerested for the market, specially on Iot devices\r\n\r\n**Cons**\r\n -invalid function for some microcontrollers\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6079",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6079/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6079/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6079/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6079",
    "id": 296720573,
    "number": 6079,
    "title": "Stm32l4 shutdown bug",
    "user": {
      "login": "ivanccu",
      "id": 36444030,
      "avatar_url": "https://avatars1.githubusercontent.com/u/36444030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanccu",
      "html_url": "https://github.com/ivanccu",
      "followers_url": "https://api.github.com/users/ivanccu/followers",
      "following_url": "https://api.github.com/users/ivanccu/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanccu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanccu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanccu/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanccu/orgs",
      "repos_url": "https://api.github.com/users/ivanccu/repos",
      "events_url": "https://api.github.com/users/ivanccu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanccu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-02-13T12:31:07Z",
    "updated_at": "2018-04-26T05:55:39Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "\r\n\r\n### Description\r\n- Type: Bug  | Question\r\n- Related issue: `Sleep and deepsleep modes work differently on two equal boards`\r\n- Priority: Blocker \r\n\r\nThere is no shutdown functionality in mbed api, so to achieve this I use HAL code mixed whit mbed api (see the link)\r\nhttps://os.mbed.com/questions/79533/Sleep-and-deepsleep-modes-work-different/\r\n\r\nand unexpected behavior appears\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nnucleo smt32L4\r\n\r\n**Toolchain:**\r\nmbed online\r\n\r\n\r\n**Expected behavior**\r\nAfter reset the board or reprograming the registers must have the default values\r\n**Actual behavior**\r\nAfter trying shutdown mode the board consumption increases, in spite of reset the board or reprograming.\r\n**Steps to reproduce**\r\nhttps://os.mbed.com/questions/79533/Sleep-and-deepsleep-modes-work-different/\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**How to?**\r\n\r\nReturn to the values ​​of original registers, since deleting the chip before reprogramming does not work\r\n\r\n\r\n**How to?** \r\nEnter in shutdown mode (stm32L4)  with mbed"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6077",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6077/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6077/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6077/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6077",
    "id": 296699365,
    "number": 6077,
    "title": "FlashIAP does not deal with erasing sectors correctly",
    "user": {
      "login": "LiyouZhou",
      "id": 2660805,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2660805?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LiyouZhou",
      "html_url": "https://github.com/LiyouZhou",
      "followers_url": "https://api.github.com/users/LiyouZhou/followers",
      "following_url": "https://api.github.com/users/LiyouZhou/following{/other_user}",
      "gists_url": "https://api.github.com/users/LiyouZhou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LiyouZhou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LiyouZhou/subscriptions",
      "organizations_url": "https://api.github.com/users/LiyouZhou/orgs",
      "repos_url": "https://api.github.com/users/LiyouZhou/repos",
      "events_url": "https://api.github.com/users/LiyouZhou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LiyouZhou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-02-13T11:11:24Z",
    "updated_at": "2018-02-14T21:46:44Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nAny STM based targets with Variable internal flash sector size\r\n\r\n**Toolchain:**\r\nAny\r\n\r\n**mbed-os sha:**\r\ncaeaa49d6 Merge pull request #5954 from ARMmbed/release-candidate\r\n\r\n**Expected behavior**\r\nFlashIAP::erase allows the user to erase multiple sectors with one call.\r\n\r\nOn STM F439 (ODIN) sector 12 starting from 0x080e0000 have size 128k, sector 13 starting from 0x08100000 have size 16k. I want to erase these two sectors so I call\r\n\r\nFlashIAP::erase(0x080e0000, (128+16)*1024)\r\n\r\n**Actual behavior**\r\nThe impelmentation cannot deal with variable sector sizes and returns -1 on alignment check.\r\n\r\n**Steps to reproduce**\r\ncompile the following code:\r\n`mbed compile -m UBLOX_EVK_ODIN_W2 -t GCC_ARM` and run.\r\n```\r\n#include \"mbed.h\"\r\n\r\nint main()\r\n{\r\n    FlashIAP flash;\r\n\r\n    flash.init();\r\n\r\n    size_t sec_1_start_addr = flash.get_flash_start() + 0xe0000;\r\n    size_t sec_1_size = flash.get_sector_size(sec_1_start_addr);\r\n    size_t sec_2_start_addr = sec_1_start_addr + sec_1_size;\r\n    size_t sec_2_size = flash.get_sector_size(sec_2_start_addr);\r\n\r\n    int ret = flash.erase(sec_1_start_addr, sec_1_size + sec_2_size);\r\n    printf(\"ret %i\\r\\n\", ret);\r\n\r\n    ret = flash.erase(sec_1_start_addr, sec_1_size);\r\n    printf(\"ret %i\\r\\n\", ret);\r\n\r\n    ret = flash.erase(sec_2_start_addr, sec_2_size);\r\n    printf(\"ret %i\\r\\n\", ret);\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\nThe first call fails while the subsequent calls succeed.\r\n\r\n## RCA\r\n\r\nIn FlashIAP.cpp https://github.com/ARMmbed/mbed-os/blob/master/drivers/FlashIAP.cpp#L118-L144\r\nThe algorithm tries to erase sector by sector but the alignment check is still done on the overall erase size. This will not work on variable sector sizes.\r\n\r\nThe API does not provide a way for user to get the correct erase size. User is forced to doing erasing secotor by sector at the top level thus defeating the purpose of the FlashIAP::erase API.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6073",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6073/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6073/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6073/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6073",
    "id": 296546909,
    "number": 6073,
    "title": "Make it possible to enable C++11 with gnuarmeclipse",
    "user": {
      "login": "amq",
      "id": 4178389,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4178389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amq",
      "html_url": "https://github.com/amq",
      "followers_url": "https://api.github.com/users/amq/followers",
      "following_url": "https://api.github.com/users/amq/following{/other_user}",
      "gists_url": "https://api.github.com/users/amq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amq/subscriptions",
      "organizations_url": "https://api.github.com/users/amq/orgs",
      "repos_url": "https://api.github.com/users/amq/repos",
      "events_url": "https://api.github.com/users/amq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-02-12T22:26:55Z",
    "updated_at": "2018-05-22T22:45:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Related issue: https://github.com/ARMmbed/mbed-os/issues/4872, https://github.com/ARMmbed/mbed-os/issues/5507, https://github.com/ARMmbed/mbed-cli/issues/588\r\n- Priority: Minor\r\n\r\nSee also https://os.mbed.com/forum/mbed/topic/28583/\r\n\r\n`gnuarmeclipse` exporter doesn't support `--profile`, and the only way to enable C++11 is to fork mbed-os. Things are a bit complicated by the fact that `gnuarmeclipse` exports all 3 profiles, while `--profile` is meant to be used with a single one.\r\n\r\nI propose two solutions:\r\n\r\n- add a new option `--profiles` which accepts a directory. It would be global for the whole `mbed-cli`\r\n- make `gnuarmeclipse` treat `--profile` as a directory\r\n\r\nWhy don't I like `eclipse_gcc_arm` which does support `--profile`?\r\n\r\n- indexing is much slower and doesn't resolve many things, not sure why\r\n- it creates a clutter `eclipse-extras` directory\r\n- I'm not able to quickly switch between profiles\r\n\r\nWhy is it that hard to enable C++11 in project settings?\r\n\r\n- I tend to export quite often, which is already hurting productivity quite a bit. I'd like to avoid additional delays and re-indexing. For me it is a strong enough reason to still keep a fork of mbed-os, despite being *that* close to being able to use upstream"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6062",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6062/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6062/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6062/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6062",
    "id": 296297047,
    "number": 6062,
    "title": "OdinWiFiInterface uses too small buffer to contain IPv6 address",
    "user": {
      "login": "juhaylinen",
      "id": 32567893,
      "avatar_url": "https://avatars1.githubusercontent.com/u/32567893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhaylinen",
      "html_url": "https://github.com/juhaylinen",
      "followers_url": "https://api.github.com/users/juhaylinen/followers",
      "following_url": "https://api.github.com/users/juhaylinen/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhaylinen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhaylinen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhaylinen/subscriptions",
      "organizations_url": "https://api.github.com/users/juhaylinen/orgs",
      "repos_url": "https://api.github.com/users/juhaylinen/repos",
      "events_url": "https://api.github.com/users/juhaylinen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhaylinen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-12T08:33:52Z",
    "updated_at": "2018-02-12T12:35:08Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**mbed-cli version:** \r\n1.2.2\r\n\r\n**mbed-os sha:**\r\n04f0f2b1a\r\n\r\n**Expected behavior**\r\n\"get_ip_address()” call in OdinWiFiInterface returns IPv6 address when IPv6 support is enabled and connected to WiFi AP\r\n\r\n**Actual behavior**\r\n\"get_ip_address()” call in OdinWiFiInterface returns NULL address. The reason seems to be too small a buffer to contain an IPv6 address.\r\n\r\n**Steps to reproduce**\r\nRequires IPv6 capable Wifi router\r\nConfigure mbed-os-example-wifi to use IPv6 only, compile and run.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6044",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6044/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6044/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6044/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6044",
    "id": 295627342,
    "number": 6044,
    "title": "Question: development workflow (master vs. release branches/tags)",
    "user": {
      "login": "bmcdonnell-ionx",
      "id": 34172339,
      "avatar_url": "https://avatars2.githubusercontent.com/u/34172339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmcdonnell-ionx",
      "html_url": "https://github.com/bmcdonnell-ionx",
      "followers_url": "https://api.github.com/users/bmcdonnell-ionx/followers",
      "following_url": "https://api.github.com/users/bmcdonnell-ionx/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmcdonnell-ionx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmcdonnell-ionx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmcdonnell-ionx/subscriptions",
      "organizations_url": "https://api.github.com/users/bmcdonnell-ionx/orgs",
      "repos_url": "https://api.github.com/users/bmcdonnell-ionx/repos",
      "events_url": "https://api.github.com/users/bmcdonnell-ionx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmcdonnell-ionx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-08T18:57:44Z",
    "updated_at": "2018-02-09T17:18:28Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n- Related issue: #2602\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Background\r\n\r\nI think I have most of the general idea of the Mbed OS development workflow in as it relates to the branching and merging.\r\n- The `master` branch is kept stable, and that's where features and bugfixes are merged to once approved.\r\n- The `release-candidate` branch splits off from `master` in preparation for each \"minor\" version release (e.g. `mbed-os-5.7.0`, but not `mbed-os-5.7.1`).\r\n- There are \"release\" branches like `mbed-os-5.7`, where you merge the `release-candidate` branch into it for each release, which you tag as e.g. `mbed-os-5.7.4`.\r\n- These are done as **non-**fast-forward merges, for clarity and consistency in the history.\r\n\r\nFor reference, I use `git log --all --graph --decorate --pretty=oneline --abbrev-commit` to see the DAG.\r\n\r\n## Question\r\n\r\nIs all of the above correct?\r\n\r\nThe big thing that I don't understand is - if I'm interpreting the history correctly - why don't you merge `master` (or `master~N`) into `release-candidate`? It looks to me like you're cherry-picking everything from master into the `release-candidate` branch. Do I have that correct? If so, why?\r\n\r\nI would've expected merging `master` (or `master~N`) into `release-candidate`, and then maybe adding a few cherry-picks / hotfixes before tagging a release. Isn't this non-merging method creating extra duplication? And doesn't it make it tougher to keep `release-candidate` and `master` in sync?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6039",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6039/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6039/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6039/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6039",
    "id": 295426020,
    "number": 6039,
    "title": "ADC for Nordic devices",
    "user": {
      "login": "berrg",
      "id": 2904554,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2904554?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/berrg",
      "html_url": "https://github.com/berrg",
      "followers_url": "https://api.github.com/users/berrg/followers",
      "following_url": "https://api.github.com/users/berrg/following{/other_user}",
      "gists_url": "https://api.github.com/users/berrg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/berrg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/berrg/subscriptions",
      "organizations_url": "https://api.github.com/users/berrg/orgs",
      "repos_url": "https://api.github.com/users/berrg/repos",
      "events_url": "https://api.github.com/users/berrg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/berrg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2018-02-08T08:39:01Z",
    "updated_at": "2018-05-11T00:07:27Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "\r\n\r\n### Description\r\n- Type: Bug \r\n- Related issue: `#abc`\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNRF52-dk (Possible others Nordic targets)\r\n\r\n**Expected behavior**\r\nFrom Mbed documentation:\r\nUse the AnalogIn API to read an external voltage applied to an analog input pin. **AnalogIn() reads the voltage as a fraction of the system voltage.** The value is a floating point from 0.0(VSS) to 1.0(VCC). For example, if you have a 3.3V system and the applied voltage is 1.65V, then AnalogIn() reads 0.5 as the value.\r\n\r\n**Actual behavior**\r\nNRF52-dk ADC configuration in nrf_drv_saadc.h use internal referance voltage and not VCC.\r\n\r\n**Suggested enhancement**\r\nChange these parameter in nrf_drv_saadc.h (for both for SE and DIFFERENTIAL)\r\n\r\n```\r\n    .gain       = NRF_SAADC_GAIN1_6,                 \r\n    .reference  = NRF_SAADC_REFERENCE_INTERNAL,       \r\n```\r\nTo the following:\r\n```\r\n  .gain       = NRF_SAADC_GAIN1_4,                  \r\n  .reference  =  NRF_SAADC_REFERENCE_VDD4,       \r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6038",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6038/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6038/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6038/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6038",
    "id": 295285700,
    "number": 6038,
    "title": "Upgrade memap to show components of included libraries",
    "user": {
      "login": "AGlass0fMilk",
      "id": 350500,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AGlass0fMilk",
      "html_url": "https://github.com/AGlass0fMilk",
      "followers_url": "https://api.github.com/users/AGlass0fMilk/followers",
      "following_url": "https://api.github.com/users/AGlass0fMilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/AGlass0fMilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AGlass0fMilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AGlass0fMilk/subscriptions",
      "organizations_url": "https://api.github.com/users/AGlass0fMilk/orgs",
      "repos_url": "https://api.github.com/users/AGlass0fMilk/repos",
      "events_url": "https://api.github.com/users/AGlass0fMilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AGlass0fMilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-02-07T20:43:01Z",
    "updated_at": "2018-02-14T17:17:36Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement \r\n- Priority: Minor\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\nWhen statically compiling mbed libraries with mbed-cli using the --library flag it appears that the memap tool doesn't know how to output the various sections. I'm not sure if this is a limitation of memap or just due to the nature of statically linked libraries.\r\n\r\nMy build process statically builds a bunch of libraries together, including mbed-os and some in-house libraries. When memap displays post-build analysis, these statically linked libraries appear as \"../..\" which isn't very helpful in discovering where all your flash consumption is coming from.\r\n\r\nExample:\r\n```\r\n+-------------------------+-------+-------+------+\r\n| Module                  | .text | .data | .bss |\r\n+-------------------------+-------+-------+------+\r\n| ../..                   | 24943 |    72 | 1304 |\r\n| BUILD/image_info.o      |   512 |     0 |    0 |\r\n| BUILD/irqn_workaround.o |    78 |     0 |    0 |\r\n| BUILD/main.o            |  1548 |    24 |  206 |\r\n| [fill]                  |   335 |     4 |   26 |\r\n| [lib]/c.a               |  2800 |  2108 |   56 |\r\n| [lib]/gcc.a             |   808 |     0 |    0 |\r\n| [lib]/misc              |   252 |    12 |   28 |\r\n| Subtotals               | 31276 |  2220 | 1620 |\r\n+-------------------------+-------+-------+------+\r\nTotal Static RAM memory (data + bss): 3840 bytes\r\nTotal Flash memory (text + data): 33496 bytes\r\n```\r\n\r\n\r\n**Reason to enhance or problem with existing solution**\r\nUpgrade memap to show components of included libraries so size optimizations can be carried out more easily. This would allow one to see what statically linked library components are taking up unnecessary flash space.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6022",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6022/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6022/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6022/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6022",
    "id": 294607400,
    "number": 6022,
    "title": "nrf5x: Enable asserts -> mbed_error",
    "user": {
      "login": "andrewleech",
      "id": 3318786,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3318786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewleech",
      "html_url": "https://github.com/andrewleech",
      "followers_url": "https://api.github.com/users/andrewleech/followers",
      "following_url": "https://api.github.com/users/andrewleech/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewleech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewleech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewleech/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewleech/orgs",
      "repos_url": "https://api.github.com/users/andrewleech/repos",
      "events_url": "https://api.github.com/users/andrewleech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewleech/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147112891,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20review",
        "name": "needs: review",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 42,
    "created_at": "2018-02-06T02:05:26Z",
    "updated_at": "2018-05-22T19:56:10Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6022",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6022",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6022.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6022.patch"
    },
    "body": "## Description\r\n\r\nThe nordic sdk has a lot of asserts to protect against incorrect usage. \r\n\r\nCurrently these are disabled by default which allows serious issues to go undetected such as #6020\r\n\r\nIn this particular case an array internal to nordic sdk code was being written out of bounds `m_cb.handlers[-1] = 0xFF`, with the only tests to prevent this being as ASSERTS\r\n\r\nThis PR enables the nordic aserts by default for the nrf unified platform, with the error handing being passed through to the standard mbed `error()` handler (complete with file:line reference).\r\n\r\nUnfortunately enabling nordic asserts does expose a (known?) typo in SDK 11 code which I've corrected in the second commit here. \r\nI avoid touching the SDK code as a rule but there doesn't appear to be any way around this?\r\nref: https://devzone.nordicsemi.com/f/nordic-q-a/14000/nrf_drv_adc-c-doesn-t-compile-with--ddebug_nrf\r\n\r\n## Status\r\n\r\n**READY**\r\n\r\n## Migrations\r\n\r\nNO\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6020",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6020/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6020/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6020/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6020",
    "id": 294591588,
    "number": 6020,
    "title": "nrf5x: array overflow in gpio configuration code",
    "user": {
      "login": "andrewleech",
      "id": 3318786,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3318786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewleech",
      "html_url": "https://github.com/andrewleech",
      "followers_url": "https://api.github.com/users/andrewleech/followers",
      "following_url": "https://api.github.com/users/andrewleech/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewleech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewleech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewleech/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewleech/orgs",
      "repos_url": "https://api.github.com/users/andrewleech/repos",
      "events_url": "https://api.github.com/users/andrewleech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewleech/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-02-06T00:34:09Z",
    "updated_at": "2018-02-06T07:58:34Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Related PR: #5207\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nnrf5x\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Toolchain version:**\r\nTested on Windows, GNU Tools ARM Embedded\\7 2017-q4-major\r\n\r\n**Steps to reproduce**\r\n The PR I've marked as related, #5207, was a good change in that it stopped valuable gpiote resources being used for a basic input pin. However this has unearthed / created an array overflow elsewhere in the gpio init.\r\n\r\nThe problem starts with `gpio_dir()` and `gpio_mode()` functions in `mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/gpio_api.c`.\r\n\r\nBoth of these functions' implementations call `gpiote_pin_uninit()` then `gpio_apply_config()` with appropriate pin configs.\r\n\r\nNow `gpiote_pin_uninit()` (also in `gpio_api.c`) only checks if the pin has been configured at all before running the appropriate `nordic nrf_drv_gpiote_*_uninit()` function.\r\n\r\nThe problem is `nrf_drv_gpiote_in_uninit()` queries which gpiote channel is in use for the provided pin then frees that channel by writing 0xFF to it's internal tracking array (`m_cb.handlers`) at the channel index.\r\nIf the pin is not currently in use by gpiote however the channel returned is `-1` so we get `m_cb.handlers[-1] = 0xFF` being run.\r\n\r\nWith the recent change to not use (waste) a gpiote for the input pin, now this function is being run without previously having gpiote channel set so writes a 0xFF to some random part of ram.\r\n\r\nFor some unfathomable reason the nrf function to query whether a pin is currently assigned to a channel is internal-only, so we can't check if a gpiote is in use before running `nrf_drv_gpiote_in_uninit()`. I think we either have to:\r\n* track pin / channel usage ourself, basically duplicating the internal nrf functionality\r\nor \r\n* change to an ask for forgiveness model in `gpio_mode()` and `gpio_dir()`, run `nrf_drv_gpiote_in_init()` immediately and if it fails due to `NRF_ERROR_INVALID_STATE` (returned when gpiote already configured) then run the `nrf_drv_gpiote_in_uninit()` function and re-run `nrf_drv_gpiote_in_init()`\r\n\r\nThe ask for forgiveness is probably more efficient, with less duplicated functionality but does leave `nrf_drv_gpiote_in_uninit()` as a potentially unsafe function to call so is probably not the best route.\r\n\r\nThe other route of tracking gpiote usage separate to generic gpio config is annoying but safer, I'll attempt an implementation of this now.\r\n\r\nOn a related note, the nordic internal function for checking if a pin is currently assigned to a gpiote channel; `pin_in_use_by_gpiote()`. It's a static inline however so we can't get access to it.\r\n`nrf_drv_gpiote_in_uninit()` does `ASSERT` using this function to ensure a pin is in use, but nordic's `ASSERT` does not seem to be enabled at all. \r\nThis should probably be wired through to `mbed_error()` when in debug mode, I'll look at implementing this separate to fixing this issue as it would have caught the issue much earlier."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6010",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6010/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6010/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6010/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6010",
    "id": 294314538,
    "number": 6010,
    "title": "Cortex-M7 cache setting",
    "user": {
      "login": "bcostm",
      "id": 5803932,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5803932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bcostm",
      "html_url": "https://github.com/bcostm",
      "followers_url": "https://api.github.com/users/bcostm/followers",
      "following_url": "https://api.github.com/users/bcostm/following{/other_user}",
      "gists_url": "https://api.github.com/users/bcostm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bcostm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bcostm/subscriptions",
      "organizations_url": "https://api.github.com/users/bcostm/orgs",
      "repos_url": "https://api.github.com/users/bcostm/repos",
      "events_url": "https://api.github.com/users/bcostm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bcostm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-02-05T08:52:47Z",
    "updated_at": "2018-02-09T03:58:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n- Targets: Cortex-M7\r\n- Priority: Major?\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\nAs of now, the cache is enabled in targets/TARGET_STM/**mbed_overrides.c** (example for STM32F7 devices). **But shouldn't this be generic** ?\r\n\r\nAlso in case of **bootloader**, shoudn't mbed_start_application handle the cache cleaning / disabling before jumping into new application ?\r\n\r\nThis question is a follow-up of a comment posted in PR #5972 while implementing the bootloader on STM32F7 devices.\r\n\r\ncc @ARMmbed/team-st-mcd \r\n\r\n \r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6008",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6008/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6008/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6008/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6008",
    "id": 294183991,
    "number": 6008,
    "title": "CI tests failing for filesystem tests on targets with 32K RAM",
    "user": {
      "login": "ashok-rao",
      "id": 17567812,
      "avatar_url": "https://avatars1.githubusercontent.com/u/17567812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashok-rao",
      "html_url": "https://github.com/ashok-rao",
      "followers_url": "https://api.github.com/users/ashok-rao/followers",
      "following_url": "https://api.github.com/users/ashok-rao/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashok-rao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashok-rao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashok-rao/subscriptions",
      "organizations_url": "https://api.github.com/users/ashok-rao/orgs",
      "repos_url": "https://api.github.com/users/ashok-rao/repos",
      "events_url": "https://api.github.com/users/ashok-rao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashok-rao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-04T09:36:46Z",
    "updated_at": "2018-02-05T12:28:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement | Question\r\n- Related PR: `#5975`\r\n- Priority: Major\r\n\r\n## Enhancement\r\n\r\n**Some of the targets with 32K RAM seems to be failing the heap block device tests**\r\n\r\n**Suggested enhancement**\r\nCan the tests be modified to use less heap on resource constrained devices?\r\n\r\n**Pros**\r\nUseful for many smaller targets with limited RAM.\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**How to?**\r\nIs there an option to include something like \"special, low memory\" tests that could may be selected based on a macro (similar to that being done for SD driver tests now) and built / ran only for a few selected targets?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5992",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5992/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5992/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5992/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5992",
    "id": 293413308,
    "number": 5992,
    "title": "RTC failing with latest master branch",
    "user": {
      "login": "akrnvm",
      "id": 27943065,
      "avatar_url": "https://avatars0.githubusercontent.com/u/27943065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akrnvm",
      "html_url": "https://github.com/akrnvm",
      "followers_url": "https://api.github.com/users/akrnvm/followers",
      "following_url": "https://api.github.com/users/akrnvm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akrnvm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akrnvm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akrnvm/subscriptions",
      "organizations_url": "https://api.github.com/users/akrnvm/orgs",
      "repos_url": "https://api.github.com/users/akrnvm/repos",
      "events_url": "https://api.github.com/users/akrnvm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akrnvm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2018-02-01T06:02:13Z",
    "updated_at": "2018-02-06T05:22:12Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug \r\n- Related issue: `RTC`\r\n- Priority: Blocker | Major \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F| Custom Board\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Expected behavior**\r\nRTC test case  \" tests-mbed_drivers-rtc\" will pass without errors\r\n**Actual behavior**\r\nTest Case is failing with latest mbedos (master branch)\r\n**Steps to reproduce**\r\nmbed test -m XXXXX -t ARM -v -n tests-mbed_drivers-rtc\r\n\r\n----------------------------------------------------------------\r\n\r\n\r\n## Question\r\n\r\nHow to fix this issue?\r\nWhy this extra sections are added in RTC tests?\r\nIs this test case is PASSING with all other boards/controllers?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5991",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5991/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5991/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5991/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5991",
    "id": 293383817,
    "number": 5991,
    "title": "How to enable multi-client on nRF51822",
    "user": {
      "login": "drewcassidy",
      "id": 3837797,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3837797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drewcassidy",
      "html_url": "https://github.com/drewcassidy",
      "followers_url": "https://api.github.com/users/drewcassidy/followers",
      "following_url": "https://api.github.com/users/drewcassidy/following{/other_user}",
      "gists_url": "https://api.github.com/users/drewcassidy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drewcassidy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drewcassidy/subscriptions",
      "organizations_url": "https://api.github.com/users/drewcassidy/orgs",
      "repos_url": "https://api.github.com/users/drewcassidy/repos",
      "events_url": "https://api.github.com/users/drewcassidy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drewcassidy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515545581,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20ble",
        "name": "component: ble",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-02-01T02:38:04Z",
    "updated_at": "2018-02-01T22:35:54Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type:  Question\r\n\r\n---------------------------------------------------------------\r\n## Question\r\n\r\nI want to allow multiple clients to connect to my board, which should be supported by the S130 softdevice. I tried re-enabling advertising in the BLE connection callback, but when a second device attempts to connect it never completes. \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5981",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5981/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5981/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5981/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5981",
    "id": 293021208,
    "number": 5981,
    "title": "\"mbed export\" always produces GettingStarted.html",
    "user": {
      "login": "drewcassidy",
      "id": 3837797,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3837797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drewcassidy",
      "html_url": "https://github.com/drewcassidy",
      "followers_url": "https://api.github.com/users/drewcassidy/followers",
      "following_url": "https://api.github.com/users/drewcassidy/following{/other_user}",
      "gists_url": "https://api.github.com/users/drewcassidy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drewcassidy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drewcassidy/subscriptions",
      "organizations_url": "https://api.github.com/users/drewcassidy/orgs",
      "repos_url": "https://api.github.com/users/drewcassidy/repos",
      "events_url": "https://api.github.com/users/drewcassidy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drewcassidy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-01-31T03:42:49Z",
    "updated_at": "2018-02-10T18:24:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug/Enhancement\r\n- Priority: Minor\r\n\r\nrunning `mbed export` to regenerate IDE files always produces a `GettingStarted.html` file in the project directory. Ideally this should only be generated the first time it is run, or removed entirely since it just links to the documentation for using the export tool (which the user must already know about to run the command...)\r\n\r\n## Bug\r\n\r\n**mbed-cli version:** 1.3.0\r\n\r\n**mbed-os sha:** b87e98c57b976711c8f94920764eb1cd0631a6a4\r\n\r\n**Steps to reproduce** run `mbed export` with any choice of IDE"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5976",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5976/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5976/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5976/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5976",
    "id": 292907928,
    "number": 5976,
    "title": "Online compiler can't compile REALTEK RTL8195AM mbed-os-example-wifi",
    "user": {
      "login": "JanneKiiskila",
      "id": 21054492,
      "avatar_url": "https://avatars1.githubusercontent.com/u/21054492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JanneKiiskila",
      "html_url": "https://github.com/JanneKiiskila",
      "followers_url": "https://api.github.com/users/JanneKiiskila/followers",
      "following_url": "https://api.github.com/users/JanneKiiskila/following{/other_user}",
      "gists_url": "https://api.github.com/users/JanneKiiskila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JanneKiiskila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JanneKiiskila/subscriptions",
      "organizations_url": "https://api.github.com/users/JanneKiiskila/orgs",
      "repos_url": "https://api.github.com/users/JanneKiiskila/repos",
      "events_url": "https://api.github.com/users/JanneKiiskila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JanneKiiskila/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      },
      {
        "id": 534372905,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20online%20deployment",
        "name": "type: online deployment",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2018-01-30T19:28:27Z",
    "updated_at": "2018-04-10T15:39:44Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Related issue: [PR #5611](https://github.com/ARMmbed/mbed-os/pull/5611#issuecomment-361679737)\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nRTL8195AM\r\n\r\n**Toolchain:**\r\non-line compiler\r\n\r\n**Toolchain version:**\r\n?\r\n\r\n**mbed-cli version:** \r\nN/A\r\n\r\n**mbed-os sha:**\r\nmbed-OS 5.7.3\r\n\r\n**DAPLink version:**\r\nN/A\r\n\r\n**Expected behavior**\r\n\r\nRealtek RTL8195 AM compiles as per usual with the default mbed_app.json and target selected as RTL8195AM.\r\n\r\n**Actual behavior**\r\n\r\nIt fails to compile, internal error.\r\n\r\n\"\"/extras/mbed_5e5da4a5990b/LPC1768/ARM/LPC1768.sct\", line 4 (column 9): Error: L6235E: More than one section matches selector - cannot all be FIRST/LAST.\" in file \"/\"\r\n\r\nLook for multiple mbed.bld files in your program.\r\n\r\n**Steps to reproduce**\r\n\r\nOpen on-line compiler.\r\nSelect RTL8195AM as the target board\r\nImport mbed-os-example-wifi\r\nCompile\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5969",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5969/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5969/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5969/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5969",
    "id": 292670218,
    "number": 5969,
    "title": "When do feature branches get merged into master?",
    "user": {
      "login": "MikeDK",
      "id": 1184607,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1184607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeDK",
      "html_url": "https://github.com/MikeDK",
      "followers_url": "https://api.github.com/users/MikeDK/followers",
      "following_url": "https://api.github.com/users/MikeDK/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeDK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeDK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeDK/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeDK/orgs",
      "repos_url": "https://api.github.com/users/MikeDK/repos",
      "events_url": "https://api.github.com/users/MikeDK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeDK/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-30T06:46:07Z",
    "updated_at": "2018-02-07T13:15:38Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n- Related issue: #5557\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n\r\n## Question\r\n\r\nI'm happy my pull request #5557 was merged, but I wonder how this will go from feature_cpuid into master? What are the next steps? Is there some procedure for feature branches?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5968",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5968/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5968/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5968/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5968",
    "id": 292662817,
    "number": 5968,
    "title": "How to enable pretty bars on targets where they don't actually work?",
    "user": {
      "login": "MikeDK",
      "id": 1184607,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1184607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeDK",
      "html_url": "https://github.com/MikeDK",
      "followers_url": "https://api.github.com/users/MikeDK/followers",
      "following_url": "https://api.github.com/users/MikeDK/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeDK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeDK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeDK/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeDK/orgs",
      "repos_url": "https://api.github.com/users/MikeDK/repos",
      "events_url": "https://api.github.com/users/MikeDK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeDK/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 14,
    "created_at": "2018-01-30T06:03:49Z",
    "updated_at": "2018-03-12T14:10:34Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n- Related issue: #5929\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n\r\n## Question\r\n\r\nI was surprised about those new pretty bars (and the fact that they are the standard compile output now unless --stats-depth is given).\r\n\r\nI have observed that they are not working for all targets ... for example, for my EFM32PG12 board they are working - but not for NUCLEO_L432KC and NUCLEO_F746ZG.\r\n\r\nI read something about cmsis packs in the pull request, so I searched for something like that in the mbed-os dir ... I found mbed-os/tools/arm_pack_manager/index.json where I can see a big list of targets ... but both nucleo target cpus I wrote above are present in that file.... so I guess this is not what I need ;)\r\n\r\nSo, the question is: where to add yet unsupported targets to get the pretty bars?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5961",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5961/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5961/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5961/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5961",
    "id": 292404048,
    "number": 5961,
    "title": "Support heap > 32KB for memory statistics",
    "user": {
      "login": "markus-becker-tridonic-com",
      "id": 14232918,
      "avatar_url": "https://avatars3.githubusercontent.com/u/14232918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markus-becker-tridonic-com",
      "html_url": "https://github.com/markus-becker-tridonic-com",
      "followers_url": "https://api.github.com/users/markus-becker-tridonic-com/followers",
      "following_url": "https://api.github.com/users/markus-becker-tridonic-com/following{/other_user}",
      "gists_url": "https://api.github.com/users/markus-becker-tridonic-com/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markus-becker-tridonic-com/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markus-becker-tridonic-com/subscriptions",
      "organizations_url": "https://api.github.com/users/markus-becker-tridonic-com/orgs",
      "repos_url": "https://api.github.com/users/markus-becker-tridonic-com/repos",
      "events_url": "https://api.github.com/users/markus-becker-tridonic-com/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markus-becker-tridonic-com/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-29T13:20:33Z",
    "updated_at": "2018-01-29T14:48:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nALL\r\n\r\n**Toolchain:**\r\nALL\r\n\r\n**Expected behavior**\r\nSupport heap > 32KB for memory statistics in \r\nhttps://github.com/ARMmbed/mbed-os/blob/729ef153076ea9db4a9c9f81e90076960e035213/features/FEATURE_COMMON_PAL/nanostack-libservice/mbed-client-libservice/nsdynmemLIB.h#L50\r\n\r\nChange to int32_t or uint32_t for heap_sector_size, heap_sector_alloc_cnt, heap_sector_allocated_bytes, heap_sector_allocated_bytes_max.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5959",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5959/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5959/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5959/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5959",
    "id": 292371697,
    "number": 5959,
    "title": "LittleFS - mkdir does not return error for existing directory",
    "user": {
      "login": "moranpeker",
      "id": 17570418,
      "avatar_url": "https://avatars2.githubusercontent.com/u/17570418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moranpeker",
      "html_url": "https://github.com/moranpeker",
      "followers_url": "https://api.github.com/users/moranpeker/followers",
      "following_url": "https://api.github.com/users/moranpeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/moranpeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moranpeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moranpeker/subscriptions",
      "organizations_url": "https://api.github.com/users/moranpeker/orgs",
      "repos_url": "https://api.github.com/users/moranpeker/repos",
      "events_url": "https://api.github.com/users/moranpeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moranpeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "geky",
      "id": 1075160,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geky",
      "html_url": "https://github.com/geky",
      "followers_url": "https://api.github.com/users/geky/followers",
      "following_url": "https://api.github.com/users/geky/following{/other_user}",
      "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
      "organizations_url": "https://api.github.com/users/geky/orgs",
      "repos_url": "https://api.github.com/users/geky/repos",
      "events_url": "https://api.github.com/users/geky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geky/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "geky",
        "id": 1075160,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/geky",
        "html_url": "https://github.com/geky",
        "followers_url": "https://api.github.com/users/geky/followers",
        "following_url": "https://api.github.com/users/geky/following{/other_user}",
        "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
        "organizations_url": "https://api.github.com/users/geky/orgs",
        "repos_url": "https://api.github.com/users/geky/repos",
        "events_url": "https://api.github.com/users/geky/events{/privacy}",
        "received_events_url": "https://api.github.com/users/geky/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2018-01-29T11:25:21Z",
    "updated_at": "2018-02-21T20:51:43Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Bug\r\nToolchain:\r\nGCC_ARM|ARM|IAR\r\n\r\nActual behavior\r\nplease follow this mkdir scenario:\r\n/\r\nmkidr 1\r\ncd 1\r\nmkdir 2\r\n/1/2\r\nmkdir /1\r\n\r\nmkdir /1 should return is exists error.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5943",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5943/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5943/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5943/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5943",
    "id": 291825312,
    "number": 5943,
    "title": "SerialBase::attach option to prevent locking deep sleep",
    "user": {
      "login": "marcemmers",
      "id": 35759328,
      "avatar_url": "https://avatars0.githubusercontent.com/u/35759328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcemmers",
      "html_url": "https://github.com/marcemmers",
      "followers_url": "https://api.github.com/users/marcemmers/followers",
      "following_url": "https://api.github.com/users/marcemmers/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcemmers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcemmers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcemmers/subscriptions",
      "organizations_url": "https://api.github.com/users/marcemmers/orgs",
      "repos_url": "https://api.github.com/users/marcemmers/repos",
      "events_url": "https://api.github.com/users/marcemmers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcemmers/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-01-26T08:05:10Z",
    "updated_at": "2018-03-26T13:59:53Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nSerialBase locking deep sleep when attaching to an irq prevents effective use of low power uarts and possibly even normal uarts. Some of these peripherals are perfectly capable of generating interrupts when in deep sleep to wake up the processor.\r\n\r\nHowever, I don't know if this is the case for all mcu series, this is why i didn't simply create a PR because I can't oversee the effects.\r\n\r\n**Suggested enhancement**\r\nProvide a way to attach without locking deep sleep. Either with an additional parameter or function, with a define that disables the locking or remove the locking altogether.\r\n\r\n**Pros**\r\nThe possibility to go more low power while still maintaining serial communications.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5922",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5922/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5922/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5922/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5922",
    "id": 291225394,
    "number": 5922,
    "title": "Enhancement request: getsockname()-style API",
    "user": {
      "login": "kFYatek",
      "id": 4499762,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4499762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kFYatek",
      "html_url": "https://github.com/kFYatek",
      "followers_url": "https://api.github.com/users/kFYatek/followers",
      "following_url": "https://api.github.com/users/kFYatek/following{/other_user}",
      "gists_url": "https://api.github.com/users/kFYatek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kFYatek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kFYatek/subscriptions",
      "organizations_url": "https://api.github.com/users/kFYatek/orgs",
      "repos_url": "https://api.github.com/users/kFYatek/repos",
      "events_url": "https://api.github.com/users/kFYatek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kFYatek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-01-24T14:19:56Z",
    "updated_at": "2018-01-25T10:07:44Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Major\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**: mbed OS' current socket API does not have any function like `getsockname()`. This makes it often infeasible to bind on an ephemeral port, because there is no way to check what is the port number after such binding. It might make sense to use when implementing certain protocols such as e.g. FTP, when there might be many concurrent connections so that we want to avoid port number collisions.\r\n\r\n**Suggested enhancement**: Add some API like `SocketAddress Socket::getsockname()` with semantics similar to a POSIX function of the same name.\r\n\r\n**Pros**: More complete and flexible networking API.\r\n\r\n**Cons**: Required changes would propagate to `NetworkStack` and `nsapi_stack_api_t` APIs, possibly requiring modifications to pre-existing first- and third-party network stack implementations."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5919",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5919/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5919/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5919/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5919",
    "id": 291196848,
    "number": 5919,
    "title": "NXP LPC4088 Type I IOCON HS bit",
    "user": {
      "login": "scamille",
      "id": 1479348,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1479348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scamille",
      "html_url": "https://github.com/scamille",
      "followers_url": "https://api.github.com/users/scamille/followers",
      "following_url": "https://api.github.com/users/scamille/following{/other_user}",
      "gists_url": "https://api.github.com/users/scamille/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scamille/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scamille/subscriptions",
      "organizations_url": "https://api.github.com/users/scamille/orgs",
      "repos_url": "https://api.github.com/users/scamille/repos",
      "events_url": "https://api.github.com/users/scamille/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scamille/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-01-24T12:50:09Z",
    "updated_at": "2018-01-26T14:01:18Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Bug / Enhancement\r\n- Related issue: `#5918`\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNXP|LPC4088\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\ngcc version 6.3.1 20170620 (release) [ARM/embedded-6-branch revision 249437] (GNU Tools for ARM Embedded Processors 6-2017-q2-update)\r\n\r\n**mbed-cli version:** \r\n1.2.2\r\n\r\n**mbed-os sha:**\r\n97e2d4a8c (HEAD -> master) Merge pull request #5025 from grygorek/master\r\n\r\n**DAPLink version:**\r\n\r\n**Expected behavior**\r\nWhen using Pins of the Type I IOCON register (P0[27], P0[28], P5[2], P5[3]) as normal GPIO pins (not for specialized I2C functions), as well as for SSP2, they should behave as normal GPIO pins as described in chapter 7.3.8 of UM10562 (https://www.nxp.com/docs/en/user-guide/UM10562.pdf). This means the HS bit ([8:8]) should be set to 1 when configuring the pin, somewhere in pinmap_pinout, pin_function or pin_mode\r\n\r\n**Actual behavior**\r\nSSP2 with P5[2] and P5[3] is currently not usable without special code setting the HS bit, e.g.\r\n\r\n```\r\n  for( auto&& pin : {sclk, ssel})\r\n  {\r\n    auto reg = (__IO uint32_t*) (LPC_IOCON_BASE + 4 * pin);\r\n\r\n    // Type I IOCON register pin HS bits: [8:8] -> b1'0000'0000 = (0x100)\r\n    *reg = (*reg & ~0x100) | (1 << 8); // set HS bit to 1\r\n  }\r\n```\r\n\r\n**Comments**\r\nSince I cannot estimate the impact of any hacky changes to eg. pin_mode, I cannot offer a ready-made pull-request here. The thing is that the solution depends both on the function (!I2C) and the type of the IOCON Base of the pin, and requires some extended logic."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5887",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5887/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5887/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5887/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5887",
    "id": 289952383,
    "number": 5887,
    "title": "ff_lpc546xx:  Library name 'platform' is not unique",
    "user": {
      "login": "gorazdko",
      "id": 25270775,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25270775?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gorazdko",
      "html_url": "https://github.com/gorazdko",
      "followers_url": "https://api.github.com/users/gorazdko/followers",
      "following_url": "https://api.github.com/users/gorazdko/following{/other_user}",
      "gists_url": "https://api.github.com/users/gorazdko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gorazdko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gorazdko/subscriptions",
      "organizations_url": "https://api.github.com/users/gorazdko/orgs",
      "repos_url": "https://api.github.com/users/gorazdko/repos",
      "events_url": "https://api.github.com/users/gorazdko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gorazdko/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 34,
    "created_at": "2018-01-19T11:57:57Z",
    "updated_at": "2018-03-27T09:58:32Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Compiling example https://os.mbed.com/teams/mbed/code/mbed_blinky/ in online compiler for target FF_LPC546XX results in error:\r\n\r\nError: Library name 'platform' is not unique (defined in '/extras/mbed_7130f322cb7e/TARGET_LPC546XX/mbed_lib.json' and '/extras/mbed_7130f322cb7e/TARGET_FF_LPC546XX/mbed_lib.json')\r\n\r\nCompiling examples with mbed-os  works fine.\r\n\r\nSee PR #5876 for details\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5871",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5871/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5871/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5871/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5871",
    "id": 289297793,
    "number": 5871,
    "title": "FAT FS partition magic field not set",
    "user": {
      "login": "moranpeker",
      "id": 17570418,
      "avatar_url": "https://avatars2.githubusercontent.com/u/17570418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moranpeker",
      "html_url": "https://github.com/moranpeker",
      "followers_url": "https://api.github.com/users/moranpeker/followers",
      "following_url": "https://api.github.com/users/moranpeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/moranpeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moranpeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moranpeker/subscriptions",
      "organizations_url": "https://api.github.com/users/moranpeker/orgs",
      "repos_url": "https://api.github.com/users/moranpeker/repos",
      "events_url": "https://api.github.com/users/moranpeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moranpeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-01-17T15:04:59Z",
    "updated_at": "2018-02-15T23:07:18Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Bug \r\n- Related issue: `#abc`\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Actual behavior**\r\nplease follow this scenario while init file system :\r\ninit LittleFS .\r\ninit FatFS - mount failed -> reformat .\r\ninit back to LittleFS - mount failed. (expected to fail on muont and do reformat) \r\n\r\n**Steps to reproduce**\r\nFS partition magic field not set .\r\nwhile we init little file system the magic field is \"LittleFS\". when we init littleFS again after mount FATFS the mount succeed because the magic file is still \"LittleFS\".\r\nwe expect mount to failed. \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5869",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5869/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5869/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5869/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5869",
    "id": 289249997,
    "number": 5869,
    "title": "How to export offline Project to KEIL uVision5 with custom scatterfile?",
    "user": {
      "login": "RaEyE",
      "id": 29312954,
      "avatar_url": "https://avatars3.githubusercontent.com/u/29312954?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RaEyE",
      "html_url": "https://github.com/RaEyE",
      "followers_url": "https://api.github.com/users/RaEyE/followers",
      "following_url": "https://api.github.com/users/RaEyE/following{/other_user}",
      "gists_url": "https://api.github.com/users/RaEyE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RaEyE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RaEyE/subscriptions",
      "organizations_url": "https://api.github.com/users/RaEyE/orgs",
      "repos_url": "https://api.github.com/users/RaEyE/repos",
      "events_url": "https://api.github.com/users/RaEyE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RaEyE/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-01-17T12:33:12Z",
    "updated_at": "2018-01-23T23:26:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Question\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n\r\n## Question\r\n\r\nIs there a possibility to use the offline export functionality of mbed-os to ignore scatterfiles of specific targets and automaticaly replace them with custom scatterfiles provided by the user?\r\n\r\n\r\n## Description\r\n\r\nCurrently projects are exportet using the '.\\mbed-os\\tools\\project.py' script.\r\nexample: `..\\mbed-os\\tools\\project.py -m NUCLEO_F746ZG -i uvision5 --source . --source ..\\mbed-os`\r\n\r\nWith the use of `.mbedignore` it is rather simple to ignore the addition of scatterfiles in general by ignoring any .sct file (e.g. `*.sct`), but it doesn't prevent the addition of\r\n`--scatter ..\\..\\mbed-os\\targets\\TARGET_STM\\TARGET_STM32F7\\TARGET_STM32F746xG\\device\\TOOLCHAIN_ARM_STD\\stm32f746xg.sct`\r\nto the Linker configuration of KEIL uVision5, which effectively configures the IDE to use the scatterfile provided by mbed.\r\n\r\n\r\n## Conclusion\r\n\r\nIf possible I'd like to know if the is a possibility to configure a custom scatterfile by the means of using `mbed_app.json` or the application of parameters when using `..\\mbed-os\\tools\\project.py`.\r\n\r\nMany Thank in advance\r\n - RaEyE\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5868",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5868/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5868/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5868/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5868",
    "id": 289242466,
    "number": 5868,
    "title": "Unknown failure during mount - LittleFileSystem ",
    "user": {
      "login": "moranpeker",
      "id": 17570418,
      "avatar_url": "https://avatars2.githubusercontent.com/u/17570418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moranpeker",
      "html_url": "https://github.com/moranpeker",
      "followers_url": "https://api.github.com/users/moranpeker/followers",
      "following_url": "https://api.github.com/users/moranpeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/moranpeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moranpeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moranpeker/subscriptions",
      "organizations_url": "https://api.github.com/users/moranpeker/orgs",
      "repos_url": "https://api.github.com/users/moranpeker/repos",
      "events_url": "https://api.github.com/users/moranpeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moranpeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "geky",
      "id": 1075160,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geky",
      "html_url": "https://github.com/geky",
      "followers_url": "https://api.github.com/users/geky/followers",
      "following_url": "https://api.github.com/users/geky/following{/other_user}",
      "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
      "organizations_url": "https://api.github.com/users/geky/orgs",
      "repos_url": "https://api.github.com/users/geky/repos",
      "events_url": "https://api.github.com/users/geky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geky/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "geky",
        "id": 1075160,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/geky",
        "html_url": "https://github.com/geky",
        "followers_url": "https://api.github.com/users/geky/followers",
        "following_url": "https://api.github.com/users/geky/following{/other_user}",
        "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
        "organizations_url": "https://api.github.com/users/geky/orgs",
        "repos_url": "https://api.github.com/users/geky/repos",
        "events_url": "https://api.github.com/users/geky/events{/privacy}",
        "received_events_url": "https://api.github.com/users/geky/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2018-01-17T12:04:33Z",
    "updated_at": "2018-02-18T09:50:52Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "## Bug\r\n- Type: Bug \r\n- Priority: Blocker\r\n\r\n**Target**\r\nALL\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Actual behavior**\r\non LittleFileSystem there is no way to know if mount failed not \r\n\r\n```\r\nLittleFileSystem::LittleFileSystem(const char *name, BlockDevice *bd, ...............)\r\n {\r\n    if (bd) {\r\n        mount(bd);\r\n    }\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5863",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5863/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5863/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5863/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5863",
    "id": 289178574,
    "number": 5863,
    "title": "FlashIAP API should allow smaller program sizes then sector size",
    "user": {
      "login": "helmut64",
      "id": 2076290,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2076290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/helmut64",
      "html_url": "https://github.com/helmut64",
      "followers_url": "https://api.github.com/users/helmut64/followers",
      "following_url": "https://api.github.com/users/helmut64/following{/other_user}",
      "gists_url": "https://api.github.com/users/helmut64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/helmut64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/helmut64/subscriptions",
      "organizations_url": "https://api.github.com/users/helmut64/orgs",
      "repos_url": "https://api.github.com/users/helmut64/repos",
      "events_url": "https://api.github.com/users/helmut64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/helmut64/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-01-17T08:23:39Z",
    "updated_at": "2018-02-08T21:16:45Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "- Type: Enhancement\r\n\r\nUsually when a flash chip is erased (e.g. 2kB sector size) it is possible to write multiple times to this flash sector., e.g. at offset 0, 8 bytes, and later at offset 8 another 8 bytes at another time. To allow this the FlashIAP API and implementation needs to be extended, API e.g.:\r\n\r\nint minProgramSize(); // gets the minium program size often 8 bytes.\r\nint programAlignment(); // gets the programm alignment often 64-bit\r\n\r\nThis would allow more effective handling of flash programming, it would also be helpful for littlefs block device drivers.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5860",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5860/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5860/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5860/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5860",
    "id": 288844377,
    "number": 5860,
    "title": "ble: data storage",
    "user": {
      "login": "ZakariaZed",
      "id": 35140716,
      "avatar_url": "https://avatars3.githubusercontent.com/u/35140716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ZakariaZed",
      "html_url": "https://github.com/ZakariaZed",
      "followers_url": "https://api.github.com/users/ZakariaZed/followers",
      "following_url": "https://api.github.com/users/ZakariaZed/following{/other_user}",
      "gists_url": "https://api.github.com/users/ZakariaZed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ZakariaZed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ZakariaZed/subscriptions",
      "organizations_url": "https://api.github.com/users/ZakariaZed/orgs",
      "repos_url": "https://api.github.com/users/ZakariaZed/repos",
      "events_url": "https://api.github.com/users/ZakariaZed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ZakariaZed/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515545581,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20ble",
        "name": "component: ble",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-01-16T09:51:34Z",
    "updated_at": "2018-01-18T10:12:43Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi,\r\n\r\n   I'm using Nrf52 with Mbed ble exemple and i want to save data when i try to modify caracteristics. The problem is when i turn off my device and turn it on, it take the old value not my value. \r\nSo i want to know what i have to modify for saving value.\r\nThank's,\r\nZakaria."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5839",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5839/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5839/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5839/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5839",
    "id": 288122849,
    "number": 5839,
    "title": "NUCLEO-F429ZI export to uVision 5 is broken (online compiler)",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      },
      {
        "id": 534372905,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20online%20deployment",
        "name": "type: online deployment",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-12T13:43:08Z",
    "updated_at": "2018-01-17T19:21:45Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO-F429ZI\r\n\r\n**Toolchain:**\r\nARM\r\n\r\n**Toolchain version:**\r\nOnline Compiler\r\n\r\n**Expected behavior**\r\nExport succeeds\r\n\r\n**Actual behavior**\r\nExport fails\r\n\r\n**Steps to reproduce**\r\nApparently does blinky work, but HelloMQTT does not...\r\n\r\nSee https://os.mbed.com/questions/79879/Unable-to-export-helloMQTT-and-CoAP-exam/"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5823",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5823/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5823/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5823/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5823",
    "id": 287439328,
    "number": 5823,
    "title": "Ticker causes big delays in TCPSocket::recv",
    "user": {
      "login": "martinnov71",
      "id": 30630706,
      "avatar_url": "https://avatars0.githubusercontent.com/u/30630706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinnov71",
      "html_url": "https://github.com/martinnov71",
      "followers_url": "https://api.github.com/users/martinnov71/followers",
      "following_url": "https://api.github.com/users/martinnov71/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinnov71/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinnov71/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinnov71/subscriptions",
      "organizations_url": "https://api.github.com/users/martinnov71/orgs",
      "repos_url": "https://api.github.com/users/martinnov71/repos",
      "events_url": "https://api.github.com/users/martinnov71/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinnov71/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2018-01-10T13:48:55Z",
    "updated_at": "2018-04-23T14:24:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug | Question\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUCLEOF429ZI\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**mbed-os**\r\n5.6.2, 5.7.1\r\n\r\n**Expected behavior**\r\n- TCPSocket::recv is consistent in time\r\n- detaching Ticker should return system to correct function\r\n\r\n**Actual behavior**\r\n- when Ticker is attached with function that blocks for few us (20 us and more every 1 ms) socket is slowed down\r\n- this happens after few minutes of function (not more than 2 minutes); until this critical time system works as expected\r\n- unexpected behavior - reading segments of packet by TCPSocket::recv returns NSAPI_ERROR_WOULD_BLOCK (between segments there are 300 ms and more delays - up to seconds)\r\n- once critical time is reached, detaching, deleting or attaching Ticker with different options (for example blocks for 1 us every 1 s) doesn't restore system to original state (only way is to restart MCU)\r\n\r\n**Steps to reproduce**\r\n1. run some TCP server on PC (i.e. SocketTest) on port 61112\r\n2. compile and run code (IP address should be replaced with your PC IP address)\r\n```cpp\r\n#include \"mbed.h\"\r\n#include \"EthernetInterface.h\"\r\n\r\nTCPSocket socket;\r\nEthernetInterface eth;\r\n\r\n#define WITH_TICKER 1\r\n\r\nvoid tick_func(){\r\n\twait_us(90);\r\n\treturn;\r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n\teth.connect();\r\n#if WITH_TICKER\r\n\tTicker tick;\r\n\ttick.attach(&tick_func,0.001);\r\n#endif\r\n\tsocket.open(&eth);\r\n\tsocket.connect(\"192.168.67.38\", 61112);\r\n    char sbuffer[] = \"hello!\\r\\n\";\r\n    int scount = socket.send(sbuffer, sizeof sbuffer);\r\n    printf(\"sent %d [%.*s]\\r\\n\", scount, strstr(sbuffer, \"\\r\\n\")-sbuffer, sbuffer);\r\n\r\n   \tchar rbuffer[2048];\r\n\tTimer tim;\r\n\tbool first=true;\r\n\r\n\twhile(true){\r\n\r\n\t    int rcount = socket.recv(rbuffer, sizeof rbuffer);\r\n\t    if(rcount>0){\r\n\t    \tif(first){\r\n\t    \t\ttim.reset();\r\n\t    \t\ttim.start();\r\n\t    \t\tfirst=false;\r\n\t    \t}\r\n\t    \tif(rcount != 536){\r\n\t    \t\tfirst=true;\r\n\t    \t\ttim.stop();\r\n\t    \t}\r\n#if WITH_TICKER\r\n\t    \tif(tim.read_ms() > 300){\r\n\t    \t\tprintf(\"detaching\\n\");\r\n\t    \t\ttick.detach();\r\n\t    \t}\r\n#endif\r\n\t    \tprintf(\"recv %d in %d\\r\\n\", rcount,tim.read_ms());\r\n\t    }else{\r\n\t    \tThread::wait(10);\r\n\t    }\r\n\r\n    }\r\n\r\n}\r\n```\r\n3. after NUCLEO connects to your TCP server, send some packets (1100 B so there are three segments of data)\r\n4. after output should be something like this: \r\n```\r\nsent 9 [hello!]\r\nrecv 536 in 0\r\nrecv 536 in 1\r\nrecv 230 in 2\r\n```\r\n5. wait for a while and send the same packet again, now response is following (reading whole packet took more then 300 ms so Ticker was detached):\r\n```\r\nrecv 536 in 0\r\nrecv 536 in 9\r\ndetaching\r\nrecv 230 in 539\r\n```\r\n6. send the same packet again to see if detaching helped\r\n7.  you can compile the whole code again with `#define WITH_TICKER 0` to see that problem is caused by attached ticker (should not be reproduced)\r\n\r\nNote:\r\nCode just simulates real situation (some pin actions in Ticker), I dont want to use any waits in Ticker.\r\n\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**Am I doing something wrong? I can agree that 10% of CPU usage by Ticker function is a little much, but in my opinion deteching Ticker should bring system back to correct state. Next thing I don't understand is that packet read delay starts after 2 mins and not immediately.**\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5814",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5814/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5814/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5814/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5814",
    "id": 287062409,
    "number": 5814,
    "title": "ImportError: No module named utils",
    "user": {
      "login": "SierpG",
      "id": 35260071,
      "avatar_url": "https://avatars1.githubusercontent.com/u/35260071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SierpG",
      "html_url": "https://github.com/SierpG",
      "followers_url": "https://api.github.com/users/SierpG/followers",
      "following_url": "https://api.github.com/users/SierpG/following{/other_user}",
      "gists_url": "https://api.github.com/users/SierpG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SierpG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SierpG/subscriptions",
      "organizations_url": "https://api.github.com/users/SierpG/orgs",
      "repos_url": "https://api.github.com/users/SierpG/repos",
      "events_url": "https://api.github.com/users/SierpG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SierpG/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-09T11:50:41Z",
    "updated_at": "2018-01-11T13:25:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\nWe are using the command \"mbed compile ...\" in Jenkins and get the following error message:\r\n\r\nmbed compile -t IAR  -vv \r\n\r\nTraceback (most recent call last):\r\n  File \"..\\tools\\make.py\", line 51, in <module>\r\n    from utils import argparse_filestring_type\r\nImportError: No module named utils\r\n\r\nIf I look at the code in make.py it seems to me that in the lines 51 to 53 \"from utils import ...\" should be replaced by \"from tools.utils import ...\" as it is done in lines 32 and 33. As in line 30 the sys.path is extended by the root directory of the tools-directory utils.py should then be found.\r\n\r\n\r\n\r\n  \r\n  "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5801",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5801/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5801/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5801/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5801",
    "id": 286634999,
    "number": 5801,
    "title": "Allow mbed_app.json to override OS_IDLE_THREAD_STACK_SIZE for Nordic targets",
    "user": {
      "login": "saedelman",
      "id": 5248091,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5248091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saedelman",
      "html_url": "https://github.com/saedelman",
      "followers_url": "https://api.github.com/users/saedelman/followers",
      "following_url": "https://api.github.com/users/saedelman/following{/other_user}",
      "gists_url": "https://api.github.com/users/saedelman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saedelman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saedelman/subscriptions",
      "organizations_url": "https://api.github.com/users/saedelman/orgs",
      "repos_url": "https://api.github.com/users/saedelman/repos",
      "events_url": "https://api.github.com/users/saedelman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saedelman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-01-08T03:39:59Z",
    "updated_at": "2018-05-09T18:36:40Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug \r\n- Priority:  Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\nThe iOS_IDLE_THREAD_STACK_SIZE define  is hard coded for Nordic targets in:\r\n\r\nmbed-os/targets/TARGET_NORDIC/mbed_rtx.h \r\n\r\nThis should be wrapped in #ifndef/#endif otherwise the user defined setting in mbed_app.json is ignored.\r\n\r\n**Target**\r\nNRF52_DK\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**mbed-cli version:** \r\n1.1.1\r\n\r\n## Enhancement\r\n\r\nIt would be nice if the idle thread and timer threads were named so that they are easily identified when dumping threads stats (using mbed-memory-status for example). \r\n\r\n  "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5793",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5793/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5793/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5793/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5793",
    "id": 286329643,
    "number": 5793,
    "title": "Abstraction/virtualization of basic peripheral classes",
    "user": {
      "login": "steve-martin-mbed",
      "id": 32403039,
      "avatar_url": "https://avatars3.githubusercontent.com/u/32403039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steve-martin-mbed",
      "html_url": "https://github.com/steve-martin-mbed",
      "followers_url": "https://api.github.com/users/steve-martin-mbed/followers",
      "following_url": "https://api.github.com/users/steve-martin-mbed/following{/other_user}",
      "gists_url": "https://api.github.com/users/steve-martin-mbed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steve-martin-mbed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steve-martin-mbed/subscriptions",
      "organizations_url": "https://api.github.com/users/steve-martin-mbed/orgs",
      "repos_url": "https://api.github.com/users/steve-martin-mbed/repos",
      "events_url": "https://api.github.com/users/steve-martin-mbed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steve-martin-mbed/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-05T16:02:29Z",
    "updated_at": "2018-01-08T08:48:33Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n## Enhancement\r\n\r\nAs suggested in the [forum](https://os.mbed.com/forum/bugs-suggestions/topic/28469/), I'm opening up this for discussion here.\r\n\r\n> As the availability of peripheral and driver variants continues to explode on the mbed platform, it becomes more and more difficult to write higher-level functionality that generically takes advantage of what is available. Polymorphism has been implemented in various parts of the code (i.e. network stack) to address this very issue. However, basic peripherals remain lacking. Moving to abstract class definitions (i.e. I2CBase, SPIBase, DigitalOutBase, etc...), or at least virtualization of basic functionality can ease this problem.  ...\r\n\r\n  "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5780",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5780/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5780/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5780/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5780",
    "id": 285748961,
    "number": 5780,
    "title": "Filesystem bugs, including volume corruption",
    "user": {
      "login": "bmcdonnell-ionx",
      "id": 34172339,
      "avatar_url": "https://avatars2.githubusercontent.com/u/34172339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmcdonnell-ionx",
      "html_url": "https://github.com/bmcdonnell-ionx",
      "followers_url": "https://api.github.com/users/bmcdonnell-ionx/followers",
      "following_url": "https://api.github.com/users/bmcdonnell-ionx/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmcdonnell-ionx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmcdonnell-ionx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmcdonnell-ionx/subscriptions",
      "organizations_url": "https://api.github.com/users/bmcdonnell-ionx/orgs",
      "repos_url": "https://api.github.com/users/bmcdonnell-ionx/repos",
      "events_url": "https://api.github.com/users/bmcdonnell-ionx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmcdonnell-ionx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 55,
    "created_at": "2018-01-03T17:06:36Z",
    "updated_at": "2018-05-21T14:55:24Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bugs\r\n- Priority: Major?\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nLPC4088\r\n\r\n**Toolchain:**\r\nGCC_ARM - yes\r\nARM|IAR - untested\r\n\r\n**Toolchain version:**\r\n\r\n**mbed-cli version:** \r\n1.2.2\r\n\r\n**mbed-os sha:**\r\n2b4ff78ab0a52ef1dc3f2998908453c595e2b2c0\r\n\r\n**Expected behavior**\r\n\r\n1. `readdir()` returns `NULL` to terminate a directory listing.\r\n2. `FATFileSystem` writes files to SD Card at a relatively consistent speed.\r\n3. `FATFileSystem` never corrupts the file system on the SD Card.\r\n\r\n**Actual behavior**\r\n\r\n1. When operating on a directory on a FAT32 volume containing the maximum number of files per directory (65534), `readdir()` never returns `NULL`.\r\n2. Increasing the number of files in a directory slows down `FATFileSystem` writes.\r\n3. Under certain cirumstances, `FATFileSystem` (or `SDBlockDevice`?) **corrupts the file system on the SD Card**. (i.e. It can no longer be read by `FATFileSystem`, nor by a Windows PC.)\r\n\r\n**Steps to reproduce**\r\n\r\nI forked [ARMmbed/mbed-os-example-filesystem](https://github.com/ARMmbed/mbed-os-example-filesystem) to create [demo code](https://github.com/bmcdonnell-ionx/mbed-os-demo-filesystem-bugs) for items `1` and `2`. There are tags (linked below) for each of these. I don't have code to share for `3` yet, but I give details below.\r\n\r\nAll testing was done with an Embedded Artists' [LPC4088 QuickStart Board](https://www.embeddedartists.com/products/boards/lpc4088_qsb.php) connected to an [LPC4088 Experiment Base Board (EBB)](https://www.embeddedartists.com/products/boards/lpc4088_exp_bb.php). The EBB is used for its SD Card slot. Jumpers are configured to use the SPI interface to the SD Card (per Figure 7 in the [EBB user guide](https://www.embeddedartists.com/sites/default/files/support/qsb/lpc4088/LPC4088_Experiment_BB_Users_Guide.pdf) (PDF)).\r\n\r\nI made a small patch to mbed OS so that GCC_ARM will `malloc()` from the LPC4088's external SDRAM like the mbed online compiler does. Demo programs `1` & `2` use megabytes of memory for a `HeapBlockDevice`. You should be able to replace this with an `SDBlockDevice` to avoid the large memory use and test on another target device, but of course this is slower to run.\r\n\r\nOf course, add your choice of `Serial` device to output `printf()` text.\r\n\r\n1. [bug01-mbed-os-5.7.1-65534-files-dirent-ne-null](https://github.com/bmcdonnell-ionx/mbed-os-demo-filesystem-bugs/releases/tag/bug01-mbed-os-5.7.1-65534-files-dirent-ne-null) ([1fa0b0b](https://github.com/bmcdonnell-ionx/mbed-os-demo-filesystem-bugs/commit/1fa0b0b3969366a7c79a26433633fe92a24fd13c))\r\n2. [bug02a-mbed-os.5.7.1-write-slowdown-empty-files](https://github.com/bmcdonnell-ionx/mbed-os-demo-filesystem-bugs/releases/tag/bug02a-mbed-os.5.7.1-write-slowdown-empty-files) ([6ab378b](https://github.com/bmcdonnell-ionx/mbed-os-demo-filesystem-bugs/commit/6ab378b37a8c83cd534a81fc6561d75f9772cbaf))\r\n[bug02b-mbed-os.5.7.1-write-slowdown-small-files](https://github.com/bmcdonnell-ionx/mbed-os-demo-filesystem-bugs/releases/tag/bug02b-mbed-os.5.7.1-write-slowdown-small-files) ([d891ad3](https://github.com/bmcdonnell-ionx/mbed-os-demo-filesystem-bugs/commit/d891ad3c4945b2756662f5a141c18d570e5de34a))\r\n3. Using an 8 GB SD Card, write many files to a directory. After each file write, append text via `fprintf()` to a metadata file in the directory, and a log file in the parent directory.\r\n    - Circumstance 1: Files are exactly 512 KiB each, written via `fwrite()`. Filesystem is corrupted after writing to the 8160th file. I observed this particular failure mode on at least two units.\r\n    - Circumstance 2: Files are approximately 7.5 MB each, written via `fprintf()`. Filesystem is corrupted after filling up the volume. Observed on one unit so far.\r\n  "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5779",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5779/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5779/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5779/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5779",
    "id": 285665530,
    "number": 5779,
    "title": "REALTEK_RTL8195AM us timer resolution too corse",
    "user": {
      "login": "LiyouZhou",
      "id": 2660805,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2660805?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LiyouZhou",
      "html_url": "https://github.com/LiyouZhou",
      "followers_url": "https://api.github.com/users/LiyouZhou/followers",
      "following_url": "https://api.github.com/users/LiyouZhou/following{/other_user}",
      "gists_url": "https://api.github.com/users/LiyouZhou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LiyouZhou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LiyouZhou/subscriptions",
      "organizations_url": "https://api.github.com/users/LiyouZhou/orgs",
      "repos_url": "https://api.github.com/users/LiyouZhou/repos",
      "events_url": "https://api.github.com/users/LiyouZhou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LiyouZhou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620926933,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20realtek",
        "name": "devices: realtek",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-03T11:49:58Z",
    "updated_at": "2018-03-02T03:22:35Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Target**\r\nREALTEK_RTL8195AM\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n7.2.1 20170904\r\n\r\n**mbed-cli version:** \r\n1.2.2\r\n\r\n**mbed-os sha:**\r\n`2b4ff78ab Merge pull request #5738 from ARMmbed/release-candidate`\r\n\r\n**Description**\r\nThe us ticker on REALTEK_RTL8195AM uses a 32k clock source which means the resolution is ~30us. Hence the us ticker doesn't have us resolution. https://github.com/ARMmbed/mbed-os/blob/master/targets/TARGET_Realtek/TARGET_AMEBA/us_ticker.c#L30\r\n\r\n@ARMmbed/team-realtek "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5778",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5778/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5778/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5778/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5778",
    "id": 285664292,
    "number": 5778,
    "title": "REALTEK_RTL8195AM GPIO slow",
    "user": {
      "login": "LiyouZhou",
      "id": 2660805,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2660805?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LiyouZhou",
      "html_url": "https://github.com/LiyouZhou",
      "followers_url": "https://api.github.com/users/LiyouZhou/followers",
      "following_url": "https://api.github.com/users/LiyouZhou/following{/other_user}",
      "gists_url": "https://api.github.com/users/LiyouZhou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LiyouZhou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LiyouZhou/subscriptions",
      "organizations_url": "https://api.github.com/users/LiyouZhou/orgs",
      "repos_url": "https://api.github.com/users/LiyouZhou/repos",
      "events_url": "https://api.github.com/users/LiyouZhou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LiyouZhou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620926933,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20realtek",
        "name": "devices: realtek",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-03T11:43:41Z",
    "updated_at": "2018-05-22T03:04:48Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Target**\r\nREALTEK_RTL8195AM\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n7.2.1 20170904\r\n\r\n**mbed-cli version:** \r\n1.2.2\r\n\r\n**mbed-os sha:**\r\n`2b4ff78ab Merge pull request #5738 from ARMmbed/release-candidate`\r\n\r\n**Description**\r\nToggling gpio on this platform is slow. It taks ~7us to toggle a pin. where as on platform such as k64f the pin toggle time is around 300ns which is 20x faster.\r\n\r\nSlow GPIO makes bit banging impossible.  this driver https://os.mbed.com/users/bridadan/code/WS2812/ wouldn't work for example.\r\n\r\n**Steps to reproduce**\r\nThis code prints out how much time it takes to toggle a pin:\r\n```\r\n#include \"mbed.h\"\r\n#include \"gpio_api.h\"\r\n\r\n#define GPIO_LED_PIN            PE_0\r\n\r\nint main()\r\n{\r\n    gpio_t gpio_led;\r\n    gpio_init(&gpio_led, GPIO_LED_PIN);\r\n    gpio_dir(&gpio_led, PIN_OUTPUT);    // Direction: Output\r\n    gpio_mode(&gpio_led, PullNone);     // No pull\r\n\r\n    uint32_t num_of_loops = 10000;\r\n    printf(\"start\\r\\n\");\r\n\r\n    for (uint8_t k = 0;  k < 255; k++)\r\n    {\r\n        us_ticker_init();\r\n        __disable_irq();\r\n        start = us_ticker_read();\r\n        for (uint32_t i=0; i<num_of_loops; i++)\r\n        {\r\n            gpio_write(&gpio_led, 1);\r\n            for(j=0; j<k; j++) __NOP();\r\n            gpio_write(&gpio_led, 0);\r\n            for(j=0; j<k; j++) __NOP();\r\n        }\r\n        end = us_ticker_read();\r\n        __enable_irq();\r\n        uint32_t ns_per_loop = (end-start)*1000/num_of_loops/2;\r\n        printf(\"k = %u: %u ns per loop\\r\\n\", k, ns_per_loop);\r\n\r\n        if (ns_per_loop > 1000) break;\r\n    }\r\n```\r\n  "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5771",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5771/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5771/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5771/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5771",
    "id": 285407004,
    "number": 5771,
    "title": "Add support for Eclipse Che",
    "user": {
      "login": "amq",
      "id": 4178389,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4178389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amq",
      "html_url": "https://github.com/amq",
      "followers_url": "https://api.github.com/users/amq/followers",
      "following_url": "https://api.github.com/users/amq/following{/other_user}",
      "gists_url": "https://api.github.com/users/amq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amq/subscriptions",
      "organizations_url": "https://api.github.com/users/amq/orgs",
      "repos_url": "https://api.github.com/users/amq/repos",
      "events_url": "https://api.github.com/users/amq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-01-02T11:22:57Z",
    "updated_at": "2018-01-04T18:47:58Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n## Enhancement\r\n\r\n[Eclipse Che](https://www.eclipse.org/che/) is an open source online IDE which could be a great addition to the Mbed OS development ecosystem. It is also already being used for [embedded development](http://www.eclipse.org/che/docs/tutorials/platformio/index.html)."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5769",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5769/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5769/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5769/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5769",
    "id": 285226884,
    "number": 5769,
    "title": "Cannot export microbit programs in online compiler",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347909,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20export",
        "name": "component: export",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-12-30T22:12:49Z",
    "updated_at": "2018-01-22T17:32:29Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "@theotherjimmy \r\n\r\n### Description\r\n- Type: Bug\r\n\r\n## Bug\r\n\r\n**Target**\r\nBBC micro:bit\r\n\r\n**Toolchain:**\r\nARM\r\n\r\n**Expected behavior**\r\n\r\nExporting works.\r\n\r\n**Actual behavior**\r\n\r\nExporting does not work\r\n\r\n**Steps to reproduce**\r\n\r\nSee https://os.mbed.com/questions/79775/BBC-microbit-DAL-example-project-wont-ex/\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5741",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5741/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5741/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5741/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5741",
    "id": 283694419,
    "number": 5741,
    "title": "Add support for including/building source/asm files specific to architecture versions",
    "user": {
      "login": "SenRamakri",
      "id": 31017510,
      "avatar_url": "https://avatars0.githubusercontent.com/u/31017510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SenRamakri",
      "html_url": "https://github.com/SenRamakri",
      "followers_url": "https://api.github.com/users/SenRamakri/followers",
      "following_url": "https://api.github.com/users/SenRamakri/following{/other_user}",
      "gists_url": "https://api.github.com/users/SenRamakri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SenRamakri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SenRamakri/subscriptions",
      "organizations_url": "https://api.github.com/users/SenRamakri/orgs",
      "repos_url": "https://api.github.com/users/SenRamakri/repos",
      "events_url": "https://api.github.com/users/SenRamakri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SenRamakri/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "theotherjimmy",
      "id": 685409,
      "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theotherjimmy",
      "html_url": "https://github.com/theotherjimmy",
      "followers_url": "https://api.github.com/users/theotherjimmy/followers",
      "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
      "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
      "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
      "repos_url": "https://api.github.com/users/theotherjimmy/repos",
      "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "theotherjimmy",
        "id": 685409,
        "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theotherjimmy",
        "html_url": "https://github.com/theotherjimmy",
        "followers_url": "https://api.github.com/users/theotherjimmy/followers",
        "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
        "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
        "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
        "repos_url": "https://api.github.com/users/theotherjimmy/repos",
        "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-12-20T21:03:48Z",
    "updated_at": "2017-12-22T10:05:41Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "\r\n## Enhancement\r\nAdd support for including/building (Cortex-M)Architecture specific source/asm files\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Suggested enhancement**\r\nCurrently there is no way to include a source/asm file specific to a Cortex-M architecture version.\r\nAs of now, if we need to do anything specific to an ARCH version we need to replicate the same code across multiple cores under same architecture which creates maintenance issues. For example, we should be able to place code under TARGET_V7M and should get included for all V7M targets. ( Same goes for TARGET_V6M, TARGET_V8M )\r\n\r\n**Pros**\r\nLess code duplication\r\n\r\n**Cons**\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5735",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5735/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5735/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5735/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5735",
    "id": 283398483,
    "number": 5735,
    "title": "Silicon Labs RAILv2 update missing efr32xg12 configurations",
    "user": {
      "login": "ryankurte",
      "id": 860620,
      "avatar_url": "https://avatars0.githubusercontent.com/u/860620?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryankurte",
      "html_url": "https://github.com/ryankurte",
      "followers_url": "https://api.github.com/users/ryankurte/followers",
      "following_url": "https://api.github.com/users/ryankurte/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryankurte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryankurte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryankurte/subscriptions",
      "organizations_url": "https://api.github.com/users/ryankurte/orgs",
      "repos_url": "https://api.github.com/users/ryankurte/repos",
      "events_url": "https://api.github.com/users/ryankurte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryankurte/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 441187721,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20silicon%20labs",
        "name": "devices: silicon labs",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-12-19T23:08:18Z",
    "updated_at": "2018-02-08T15:57:55Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "PR #5579 appears to be missing configurations for efr32xg12 (and efr32xg13?) Sub1GHz operation.\r\n\r\n@stevew817 "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5730",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5730/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5730/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5730/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5730",
    "id": 283148975,
    "number": 5730,
    "title": "[NUCLEO-L476] 921600 baud does not work",
    "user": {
      "login": "andrewc-arm",
      "id": 21053224,
      "avatar_url": "https://avatars1.githubusercontent.com/u/21053224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewc-arm",
      "html_url": "https://github.com/andrewc-arm",
      "followers_url": "https://api.github.com/users/andrewc-arm/followers",
      "following_url": "https://api.github.com/users/andrewc-arm/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewc-arm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewc-arm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewc-arm/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewc-arm/orgs",
      "repos_url": "https://api.github.com/users/andrewc-arm/repos",
      "events_url": "https://api.github.com/users/andrewc-arm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewc-arm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-12-19T08:59:33Z",
    "updated_at": "2017-12-22T05:38:52Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO-L476\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\nTo be updated by the customer\r\n\r\n**mbed-cli version:** \r\nTo be updated by the customer\r\n(`mbed --version`)\r\n\r\n**mbed-os sha:**\r\nTo be updated by the customer\r\n(`git log -n1 --oneline`)\r\n\r\n**DAPLink version:**\r\nTo be updated by the customer\r\n\r\n**Expected behavior**\r\nArm mbed-os should support NUCLEO-L476 UART with 921600 baud rate.\r\n\r\n**Actual behavior**\r\nArm mbed-os does not support NUCLEO-L476 UART with 921600 baud rate.\r\nUsing different OS works well with 921600 baud rate and the spec sheet says 1M bps is supported.\r\n\r\n**Steps to reproduce**\r\nTo be updated by the customer\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5728",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5728/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5728/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5728/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5728",
    "id": 283123785,
    "number": 5728,
    "title": "Testing: Partitioning tests on supported filesystems",
    "user": {
      "login": "teetak01",
      "id": 15607794,
      "avatar_url": "https://avatars1.githubusercontent.com/u/15607794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teetak01",
      "html_url": "https://github.com/teetak01",
      "followers_url": "https://api.github.com/users/teetak01/followers",
      "following_url": "https://api.github.com/users/teetak01/following{/other_user}",
      "gists_url": "https://api.github.com/users/teetak01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teetak01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teetak01/subscriptions",
      "organizations_url": "https://api.github.com/users/teetak01/orgs",
      "repos_url": "https://api.github.com/users/teetak01/repos",
      "events_url": "https://api.github.com/users/teetak01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teetak01/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-12-19T07:05:11Z",
    "updated_at": "2017-12-19T16:15:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement \r\n- Related issue: IOTMORF-1769\r\n\r\nFilesystem partitioning tests"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5724",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5724/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5724/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5724/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5724",
    "id": 282929297,
    "number": 5724,
    "title": "stdlib locks - IAR and ARMCC alignment",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-12-18T15:59:11Z",
    "updated_at": "2017-12-18T16:03:05Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Description\r\n- Type: Enhancement \r\n- Priority: Minor\r\n\r\n## Enhancement\r\n\r\nReference, see https://github.com/ARMmbed/mbed-os/pull/5687#issuecomment-351120036. I'll include some details here.\r\n\r\nFrom my review how locking is done for all our toolchains, it seems to me that IAR and  ARMCC provides similar stdlib locking but our implementation is different.\r\n\r\nFrom the issue referenced above:\r\n\r\n> IAR locks they provide two defines _MAX_LOCK, _FOPEN_MAX. First is defined by C lib, and cant be changed. The second we define, 10 file locks (this is valid only if full lib is used, and its our case, we might missing there a check for this). Not certain why we do not align IAR and ARMCC (in ARMCC we would define similar, 8 would be max_lock, and fopen same as for IAR, 10, thus 18 mutexes provided by default ?\r\n\r\nThe diff is that IAR provides 2 lock counts that we use that is it. We define magic number 8 for ARMCC, and if more needed, we allocate on the heap. A question is if ARMCC can be changed to do the same as IAR (locks to be statically allocated, and define 2 max numbers to be used - stdlib lock and file locks). I could not find any similar defines for ARMCC to be defined, are there any? If not, we can define them, and document. Then we would have 2 same approaches for these 2 toolchains.\r\n\r\nIAR defines for stdlib locks and file locks are documented in their Compiler Reference document.\r\n\r\n@bulislaw @c1728p9"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5711",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5711/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5711/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5711/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5711",
    "id": 282291329,
    "number": 5711,
    "title": "mbed can't find a header file in a folder",
    "user": {
      "login": "ismailhkose",
      "id": 353824,
      "avatar_url": "https://avatars0.githubusercontent.com/u/353824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ismailhkose",
      "html_url": "https://github.com/ismailhkose",
      "followers_url": "https://api.github.com/users/ismailhkose/followers",
      "following_url": "https://api.github.com/users/ismailhkose/following{/other_user}",
      "gists_url": "https://api.github.com/users/ismailhkose/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ismailhkose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ismailhkose/subscriptions",
      "organizations_url": "https://api.github.com/users/ismailhkose/orgs",
      "repos_url": "https://api.github.com/users/ismailhkose/repos",
      "events_url": "https://api.github.com/users/ismailhkose/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ismailhkose/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-12-15T01:19:55Z",
    "updated_at": "2017-12-16T01:51:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "- Type: Bug\r\n- Priority: Blocker\r\n\r\nI developed a class and header for my device and put it in a folder in the root directory, then included the header file in main,cpp; however, it cant find the header file. I think there might be a bug in header name file parser in mbed-cli/mbed. When I move them to in root folder. It finds and builds successfully.\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\nCompile [ 18.3%]: main.cpp\r\n[Fatal Error] main.cpp@3,0: my_header.h: No such file or directory\r\n[ERROR] /path/main.cpp:3:25: fatal error: my_header.h: No such file or directory\r\ncompilation terminated.\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\nGCC 4.7.4\r\n\r\n**mbed-cli version:** \r\n1.2.0 - 1.2.2\r\n\r\n**mbed-os sha:**\r\n182bbd51bc8d1b6217477c2b5de3f1d0c5e6249f\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5706",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5706/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5706/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5706/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5706",
    "id": 282099887,
    "number": 5706,
    "title": "Mbed TLS example benchmark build fail for IAR + ODIN",
    "user": {
      "login": "mazimkhan",
      "id": 13520658,
      "avatar_url": "https://avatars0.githubusercontent.com/u/13520658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mazimkhan",
      "html_url": "https://github.com/mazimkhan",
      "followers_url": "https://api.github.com/users/mazimkhan/followers",
      "following_url": "https://api.github.com/users/mazimkhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mazimkhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mazimkhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mazimkhan/subscriptions",
      "organizations_url": "https://api.github.com/users/mazimkhan/orgs",
      "repos_url": "https://api.github.com/users/mazimkhan/repos",
      "events_url": "https://api.github.com/users/mazimkhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mazimkhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-12-14T13:26:09Z",
    "updated_at": "2018-01-09T14:56:27Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "mbed-os-example-tls/benchmark fails to build for IAR + ODIN\r\n\r\n### Description\r\n- Type: Bug (build failure)\r\n- Related issue: https://github.com/ARMmbed/mbed-os-example-tls/issues/133#issuecomment-351697974\r\n- Priority: Blocker | Major | Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nIAR\r\n\r\n**Toolchain version:**\r\n7.8 \r\n\r\n**Steps to reproduce**\r\nSee issue https://github.com/ARMmbed/mbed-os-example-tls/issues/133#issuecomment-351697974\r\n\r\n## Question\r\n\r\n**How to?**\r\nSee issue https://github.com/ARMmbed/mbed-os-example-tls/issues/133#issuecomment-351697974"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5705",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5705/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5705/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5705/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5705",
    "id": 282025471,
    "number": 5705,
    "title": "Question regarding priorities of System Timer Events and Send/Receive Events",
    "user": {
      "login": "ghseb",
      "id": 20226385,
      "avatar_url": "https://avatars3.githubusercontent.com/u/20226385?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghseb",
      "html_url": "https://github.com/ghseb",
      "followers_url": "https://api.github.com/users/ghseb/followers",
      "following_url": "https://api.github.com/users/ghseb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghseb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghseb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghseb/subscriptions",
      "organizations_url": "https://api.github.com/users/ghseb/orgs",
      "repos_url": "https://api.github.com/users/ghseb/repos",
      "events_url": "https://api.github.com/users/ghseb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghseb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-12-14T08:58:30Z",
    "updated_at": "2017-12-20T11:59:55Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Possible Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\nWhen a timer event is created via `eventOS_event_timer_request()` the priority `ARM_LIB_MED_PRIORITY_EVENT` is assigned in system_timer.c. Send/Receive Events get the priority `ARM_LIB_HIGH_PRIORITY_EVENT` in `send_receive_event()`.\r\nWhen there is high load an a network connection (Cellular with blockwise transfers in our case) such many Send/Receive Events are generated that Timer Events (which Registration Updates depend on) are not emitted and the Registration times out.\r\nOur question is if this is expected behaviour and why Timer Events should not have the same priority as Send/Receive Events ? \r\n\r\nIn our case this solved the issue, but there may be drawbacks we did not encounter yet.\r\n\r\nRegards,\r\nSebastian\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5702",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5702/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5702/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5702/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5702",
    "id": 281884950,
    "number": 5702,
    "title": "Expose filesystem stats",
    "user": {
      "login": "bmcdonnell-ionx",
      "id": 34172339,
      "avatar_url": "https://avatars2.githubusercontent.com/u/34172339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmcdonnell-ionx",
      "html_url": "https://github.com/bmcdonnell-ionx",
      "followers_url": "https://api.github.com/users/bmcdonnell-ionx/followers",
      "following_url": "https://api.github.com/users/bmcdonnell-ionx/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmcdonnell-ionx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmcdonnell-ionx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmcdonnell-ionx/subscriptions",
      "organizations_url": "https://api.github.com/users/bmcdonnell-ionx/orgs",
      "repos_url": "https://api.github.com/users/bmcdonnell-ionx/repos",
      "events_url": "https://api.github.com/users/bmcdonnell-ionx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmcdonnell-ionx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-12-13T20:28:55Z",
    "updated_at": "2018-03-26T21:08:50Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Reference: [Docs / mbed OS API References / Storage APIs / File system](https://docs.mbed.com/docs/mbed-os-api-reference/en/latest/APIs/storage/filesystem/)\r\n\r\n### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\nThere is no way to retrieve file system statistics (e.g. free space) via the POSIX API, nor via the FileSystem objects. AFAICT, the only way to do it now is to reach all the way down into [filesystem/fat/ChaN/ff.{h,cpp}](https://github.com/ARMmbed/mbed-os/tree/master/features/filesystem/fat/ChaN), and call `f_stat()`.\r\n\r\n**Suggested enhancement**\r\n\r\nExpose file system stats. This could be done in stages:\r\n\r\n1. Add a stat function(s) to `FileSystem.{h,cpp}` and `FATFileSystem.{h,cpp}`.\r\n2. Expose the stats via POSIX API functions [`fstatvfs()` and `statvfs()`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fstatvfs.html).\r\n\r\nEven [1] without [2] is helpful, e.g. if [2] is missing from whatever other library the filesystem feature depends on.\r\n\r\n**Pros**\r\n\r\nConsistent, simpler API.\r\n\r\n**Cons**\r\n\r\n??"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5700",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5700/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5700/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5700/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5700",
    "id": 281794921,
    "number": 5700,
    "title": "Sync with CMSIS repo / allow use of CMSIS-DSP",
    "user": {
      "login": "bmcdonnell-ionx",
      "id": 34172339,
      "avatar_url": "https://avatars2.githubusercontent.com/u/34172339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmcdonnell-ionx",
      "html_url": "https://github.com/bmcdonnell-ionx",
      "followers_url": "https://api.github.com/users/bmcdonnell-ionx/followers",
      "following_url": "https://api.github.com/users/bmcdonnell-ionx/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmcdonnell-ionx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmcdonnell-ionx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmcdonnell-ionx/subscriptions",
      "organizations_url": "https://api.github.com/users/bmcdonnell-ionx/orgs",
      "repos_url": "https://api.github.com/users/bmcdonnell-ionx/repos",
      "events_url": "https://api.github.com/users/bmcdonnell-ionx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmcdonnell-ionx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-12-13T15:42:34Z",
    "updated_at": "2018-05-23T17:11:42Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Major | Minor (somewhere in this range)\r\n\r\n---------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\nThere is no straightforward or maintainable way to utilize the parts of CMSIS which are not already included by `mbed-os`, e.g. CMSIS-DSP.\r\n\r\nThis is due to the subset of files chosen from the CMSIS repo, which are taken from different revisions of the CMSIS repo, organized in a different folder structure, and further customized within `mbed-os`. (In my working copy of `mbed-os`, I did `git log --all --graph --decorate cmsis` to investigate this. I'm not aware of those customizations being pushed upstream.)\r\n\r\n**Suggested enhancement**\r\n\r\n* Most importantly, *keep in sync with the [CMSIS git repo](https://github.com/ARM-software/CMSIS_5)*. If necessary (due to organizational reasons or whatever), fork it, and maintain your own `mbed` branch.\r\n* Do not rearrange the file/folder structure of CMSIS in the `mbed-os` tree. Optionally remove some files/folders in the mbed-os CMSIS folder subtree, if necessary.\r\n    * Or maybe even somehow pull all of CMSIS in as a sublibrary. Optionally utilize the pre-built library files provided by CMSIS. (This may be a separate later improvement.)\r\n\r\n**Pros**\r\n\r\n* Easy to promptly integrate bugfixes and enhancements from upstream CMSIS.\r\n* Easy to use excluded parts of CMSIS; or the whole thing will be available.\r\n\r\n**Cons**\r\n\r\n* Effort / up-front work to implement this change."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5699",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5699/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5699/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5699/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5699",
    "id": 281789888,
    "number": 5699,
    "title": "EthernetInterface fails to connect from other than default thread",
    "user": {
      "login": "amq",
      "id": 4178389,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4178389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amq",
      "html_url": "https://github.com/amq",
      "followers_url": "https://api.github.com/users/amq/followers",
      "following_url": "https://api.github.com/users/amq/following{/other_user}",
      "gists_url": "https://api.github.com/users/amq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amq/subscriptions",
      "organizations_url": "https://api.github.com/users/amq/orgs",
      "repos_url": "https://api.github.com/users/amq/repos",
      "events_url": "https://api.github.com/users/amq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-12-13T15:29:29Z",
    "updated_at": "2018-04-25T09:20:34Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nUBLOX_C030_N211\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n6-2017-q2-update\r\n\r\n**mbed-cli version:** \r\n1.2.2\r\n\r\n**mbed-os sha:**\r\n5f6572179d66ce4c09d6517b659ac51133cc980d\r\n\r\n**Expected behavior**\r\n\r\nBoth examples should succeed to connect:\r\n\r\n```\r\n#include \"mbed.h\"\r\n#include \"EthernetInterface.h\"\r\n\r\nint main() {\r\n    EthernetInterface net;\r\n    int result = net.connect();\r\n    while (true);\r\n}\r\n```\r\n\r\n```\r\n#include \"mbed.h\"\r\n#include \"EthernetInterface.h\"\r\n\r\nvoid test() {\r\n    EthernetInterface net;\r\n    int result = net.connect();\r\n}\r\n\r\nint main() {\r\n    Thread *testThread = new Thread(osPriorityNormal, OS_STACK_SIZE * 8, NULL, \"test_thread\");\r\n    testThread->start(callback(test));\r\n    while (true);\r\n}\r\n```\r\n\r\n**Actual behavior**\r\n\r\nThe second example consistently fails with `-3004`, while the first one is fine."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5694",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5694/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5694/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5694/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5694",
    "id": 281626373,
    "number": 5694,
    "title": "KL25Z: USB: USB MSD device freezes up when attempting to write data",
    "user": {
      "login": "guest253456",
      "id": 17869415,
      "avatar_url": "https://avatars3.githubusercontent.com/u/17869415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guest253456",
      "html_url": "https://github.com/guest253456",
      "followers_url": "https://api.github.com/users/guest253456/followers",
      "following_url": "https://api.github.com/users/guest253456/following{/other_user}",
      "gists_url": "https://api.github.com/users/guest253456/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guest253456/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guest253456/subscriptions",
      "organizations_url": "https://api.github.com/users/guest253456/orgs",
      "repos_url": "https://api.github.com/users/guest253456/repos",
      "events_url": "https://api.github.com/users/guest253456/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guest253456/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345068,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20usb",
        "name": "component: usb",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-12-13T05:04:47Z",
    "updated_at": "2017-12-18T04:50:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Reading works all the time but writing fails every now and then, it would freeze up and linux will try to reset it.\r\n\r\n>kernel: usb 3-10: reset full-speed USB device number 20 using xhci_hcd\r\n\r\nThe example from [utasker](http://www.utasker.com/kinetis/FRDM-KL25Z.html) works well, so it does not seem to be a hardware issue.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5679",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5679/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5679/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5679/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5679",
    "id": 280649109,
    "number": 5679,
    "title": "header files should not have `using` statements (namespaces)",
    "user": {
      "login": "bmcdonnell-ionx",
      "id": 34172339,
      "avatar_url": "https://avatars2.githubusercontent.com/u/34172339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmcdonnell-ionx",
      "html_url": "https://github.com/bmcdonnell-ionx",
      "followers_url": "https://api.github.com/users/bmcdonnell-ionx/followers",
      "following_url": "https://api.github.com/users/bmcdonnell-ionx/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmcdonnell-ionx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmcdonnell-ionx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmcdonnell-ionx/subscriptions",
      "organizations_url": "https://api.github.com/users/bmcdonnell-ionx/orgs",
      "repos_url": "https://api.github.com/users/bmcdonnell-ionx/repos",
      "events_url": "https://api.github.com/users/bmcdonnell-ionx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmcdonnell-ionx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 17,
    "created_at": "2017-12-08T23:40:14Z",
    "updated_at": "2018-02-13T19:45:17Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug | Enhancement\r\n\r\nSeveral mbed-os header files have `using` statements in them. Most notably in `mbed.h`:\r\n\r\n```\r\nusing namespace mbed;\r\nusing namespace std;\r\n```\r\n\r\n---------------------------------------------------------------\r\n**Reason to enhance or problem with existing solution**\r\n\r\nThere are [plenty](http://www.lonecpluspluscoder.com/2012/09/22/i-dont-want-to-see-another-using-namespace-xxx-in-a-header-file-ever-again/) of [online](http://umich.edu/~eecs381/handouts/NamespaceGuide.pdf) references [explaining](https://stackoverflow.com/questions/4872373/why-is-including-using-namespace-into-a-header-file-a-bad-idea-in-c) why having `using` statements in header files is bad practice. In brief, it pollutes the global namespace for your users.\r\n\r\n**Suggested enhancement**\r\n\r\nAll `using` statements should be removed from all header files.\r\n\r\n**Pros**\r\n\r\nDon't pollute your users' namespaces, forcing them to change their module names or create namespaces to avoid name collisions with your stuff.\r\n\r\nAlso, this gives users the option of always having namespace prefixes on things if they want it - and having the compiler enforce that - if they find that useful, in whatever situations.\r\n\r\n**Cons**\r\n\r\nGranted, it is a painful change for users who relied on it, so a migration plan is appropriate. e.g. Maybe explain the change in the release notes in mbed-os 5.7 or 5.8 or 6.0 that these `using` statements have been removed, and users can add the statements to their source files if they wish to minimize code changes."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5658",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5658/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5658/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5658/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5658",
    "id": 279439916,
    "number": 5658,
    "title": "Is DEVICE_STDIO_MESSAGES well implemented ?",
    "user": {
      "login": "jeromecoutant",
      "id": 12710147,
      "avatar_url": "https://avatars2.githubusercontent.com/u/12710147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeromecoutant",
      "html_url": "https://github.com/jeromecoutant",
      "followers_url": "https://api.github.com/users/jeromecoutant/followers",
      "following_url": "https://api.github.com/users/jeromecoutant/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeromecoutant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeromecoutant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeromecoutant/subscriptions",
      "organizations_url": "https://api.github.com/users/jeromecoutant/orgs",
      "repos_url": "https://api.github.com/users/jeromecoutant/repos",
      "events_url": "https://api.github.com/users/jeromecoutant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeromecoutant/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 512448248,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20docs",
        "name": "component: docs",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-12-05T16:27:02Z",
    "updated_at": "2017-12-06T22:44:43Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Hi\r\n\r\nI didn't find in handbook what the behavior should be for DEVICE_STDIO_MESSAGES.\r\n\r\nIs it ?\r\n- if DEVICE_STDIO_MESSAGES is defined, then use STDIO_UART_TX and STDIO_UART_RX for default printf\r\n- else, printf becomes a NULL macro\r\n\r\n\r\nSo maybe some code is missing:\r\n\r\nin https://github.com/ARMmbed/mbed-os/blob/2e1c2a1cdf168dd739e777165b21f6cd0509c188/platform/mbed_retarget.cpp#L120\r\n\r\nI would expect:\r\n#if DEVICE_SERIAL && DEVICE_STDIO_MESSAGES\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5655",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5655/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5655/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5655/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/5655",
    "id": 279409109,
    "number": 5655,
    "title": "Deprecate Stream and Serial",
    "user": {
      "login": "kjbracey-arm",
      "id": 11025917,
      "avatar_url": "https://avatars3.githubusercontent.com/u/11025917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kjbracey-arm",
      "html_url": "https://github.com/kjbracey-arm",
      "followers_url": "https://api.github.com/users/kjbracey-arm/followers",
      "following_url": "https://api.github.com/users/kjbracey-arm/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjbracey-arm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kjbracey-arm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjbracey-arm/subscriptions",
      "organizations_url": "https://api.github.com/users/kjbracey-arm/orgs",
      "repos_url": "https://api.github.com/users/kjbracey-arm/repos",
      "events_url": "https://api.github.com/users/kjbracey-arm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kjbracey-arm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 407548740,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/do%20not%20merge",
        "name": "do not merge",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-12-05T15:07:08Z",
    "updated_at": "2018-03-08T07:34:14Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/5655",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/5655",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/5655.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/5655.patch"
    },
    "body": "`Serial` is replaced by `UARTSerial` - this provides the necessary buffers\r\nto use serial reliably for input from non-interrupt contexts, and avoid\r\nexcess spinning waiting for TX buffer space.\r\n\r\n(Historically, anyone using `Serial` but needing input has done so by\r\nbypassing its stdio-based calls, and instead making calls\r\nto the underlying `SerialBase` from interrupt, as the stdio input calls\r\ndo not work reliably from threads due to lack of buffering, and can't\r\nbe used from interrupts. This reliance on the underlying implementation\r\nmeans it wasn't possible to add buffering in a backwards-compatible\r\nfashion, hence the distinct `UARTSerial`).\r\n\r\nBecause it no longer uses `Stream`, use of `UARTSerial` no longer\r\nnecessarily forces pulling in the C library stdio system.\r\n\r\n`Stream` is replaced by drivers implementing `FileHandle` directly, and\r\napplications using `fdopen(FileHandle *)` to get a `FILE *` to use full\r\nC/C++ stream features. This avoids being locked into an odd design\r\npattern whereby the class works at 2 layers:\r\n\r\n   * Application - uses Stream-based driver\r\n   * Stream - uses <stdio.h> `FILE`\r\n   * C library - Implements `FILE`, uses `FileHandle`\r\n   * Stream - implements `FileHandle`, uses virtual `_getc/_putc`\r\n   * Derived-from-Stream (eg Serial) - implements `_getc/_putc`\r\n\r\nStream's implementation of FileHandle on a simple blocking _getc/_putc\r\ncannot be usefully extended to the fuller FileHandle API required for\r\nreal-life use like PPP or `ATCmdParser`.\r\n\r\nThe revised setup now looks like:\r\n\r\n   * Application - uses `FILE`\r\n   * C library - Implements `FILE`, uses `FileHandle`\r\n   * Driver - Implements `FileHandle`\r\n\r\nWhat we lose is the syntactical sugar that allowed you to do\r\n\r\n    Serial serial(RX, TX, 115200);\r\n    serial.printf(\"Hello\");\r\n\r\nInstead, you now must do\r\n\r\n    UARTSerial serial(RX, TX, 115200);\r\n    FILE *out = fdopen(&serial, \"w\");\r\n    fprintf(out, \"Hello\");\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5653",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5653/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5653/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5653/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5653",
    "id": 279298403,
    "number": 5653,
    "title": "remove non empty directory returns inconsistent error codes between LittleFS & FatFS",
    "user": {
      "login": "itayzafrir",
      "id": 30868205,
      "avatar_url": "https://avatars2.githubusercontent.com/u/30868205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/itayzafrir",
      "html_url": "https://github.com/itayzafrir",
      "followers_url": "https://api.github.com/users/itayzafrir/followers",
      "following_url": "https://api.github.com/users/itayzafrir/following{/other_user}",
      "gists_url": "https://api.github.com/users/itayzafrir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/itayzafrir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/itayzafrir/subscriptions",
      "organizations_url": "https://api.github.com/users/itayzafrir/orgs",
      "repos_url": "https://api.github.com/users/itayzafrir/repos",
      "events_url": "https://api.github.com/users/itayzafrir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/itayzafrir/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "geky",
      "id": 1075160,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geky",
      "html_url": "https://github.com/geky",
      "followers_url": "https://api.github.com/users/geky/followers",
      "following_url": "https://api.github.com/users/geky/following{/other_user}",
      "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
      "organizations_url": "https://api.github.com/users/geky/orgs",
      "repos_url": "https://api.github.com/users/geky/repos",
      "events_url": "https://api.github.com/users/geky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geky/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "geky",
        "id": 1075160,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/geky",
        "html_url": "https://github.com/geky",
        "followers_url": "https://api.github.com/users/geky/followers",
        "following_url": "https://api.github.com/users/geky/following{/other_user}",
        "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
        "organizations_url": "https://api.github.com/users/geky/orgs",
        "repos_url": "https://api.github.com/users/geky/repos",
        "events_url": "https://api.github.com/users/geky/events{/privacy}",
        "received_events_url": "https://api.github.com/users/geky/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-12-05T09:12:48Z",
    "updated_at": "2018-04-29T15:06:35Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Attempting to remove/delete a non-empty directory from the FS returns different error codes when using FatFS vs LittleFS\r\n\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Expected behavior**\r\nThe same error code will be returned for both file systems\r\n\r\n**Actual behavior**\r\nWhen trying to remove a non-empty directory using FatFS: error code = EACCES\r\nWhen trying to remove a non-empty directory using LittleFS: error code = EINVAL\r\n\r\n**Steps to reproduce**\r\nremove a non empty directory using FatFS and then using LittleFS\r\n\r\n\r\n@geky \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5647",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5647/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5647/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5647/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5647",
    "id": 278936456,
    "number": 5647,
    "title": "Proper value for SCB_ICSR_RESERVED_BITS_MASK",
    "user": {
      "login": "jrobeson",
      "id": 56908,
      "avatar_url": "https://avatars0.githubusercontent.com/u/56908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrobeson",
      "html_url": "https://github.com/jrobeson",
      "followers_url": "https://api.github.com/users/jrobeson/followers",
      "following_url": "https://api.github.com/users/jrobeson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrobeson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrobeson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrobeson/subscriptions",
      "organizations_url": "https://api.github.com/users/jrobeson/orgs",
      "repos_url": "https://api.github.com/users/jrobeson/repos",
      "events_url": "https://api.github.com/users/jrobeson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrobeson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-12-04T10:04:13Z",
    "updated_at": "2018-03-12T19:23:27Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug?\r\n- Related issue: `#4927`\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nany Nordic NRF52 (and maybe NRF51?)\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**mbed-os sha:**\r\n182bbd51b\r\n\r\nIn #4927 it was mentioned by @pan- and @nvlsianpu that the value of `SCB_ICSR_RESERVED_BITS_MASK` should be something else. Likely `0x94403F03F`.\r\n\r\nI'm opening this as an issue in case it got forgotten due to being in a closed ticket.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5645",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5645/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5645/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5645/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5645",
    "id": 278911019,
    "number": 5645,
    "title": "UBLOX_EVK_ODIN_W2 does not pass Greentea test-case WIFI_SET_CREDENTIAL",
    "user": {
      "login": "jarlamsa",
      "id": 33447468,
      "avatar_url": "https://avatars1.githubusercontent.com/u/33447468?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jarlamsa",
      "html_url": "https://github.com/jarlamsa",
      "followers_url": "https://api.github.com/users/jarlamsa/followers",
      "following_url": "https://api.github.com/users/jarlamsa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jarlamsa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jarlamsa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jarlamsa/subscriptions",
      "organizations_url": "https://api.github.com/users/jarlamsa/orgs",
      "repos_url": "https://api.github.com/users/jarlamsa/repos",
      "events_url": "https://api.github.com/users/jarlamsa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jarlamsa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-12-04T08:31:03Z",
    "updated_at": "2018-03-21T11:29:31Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\narm-none-eabi-g++.exe (GNU Tools for ARM Embedded Processors 6-2017-q2-update) 6.3.1 20170620 (release) [ARM/embedded-6-branch revision 249437]\r\n\r\n**mbed-cli version:** \r\n`1.2.2`\r\n\r\n**mbed-os sha:**\r\n`2e1c2a1cd`\r\n\r\n**DAPLink version:**\r\n`0221`\r\n\r\n**Expected behavior**\r\nWIFI_SET_CREDENTIAL succeeds\r\n\r\n**Actual behavior**\r\nWIFI_SET_CREDENTIAL fails when giving a NULL SSID.\r\nExpected return value is NSAPI_ERROR_PARAMETER\r\n```\r\n[1512374386.53][CONN][RXD] >>> Running case #1: 'WIFI-SET-CREDENTIAL'...\r\n[1512374386.58][CONN][INF] found KV pair in stream: {{__testcase_start;WIFI-SET-CREDENTIAL}},  queued...\r\n[1512374387.63][CONN][RXD] :32::FAIL: Expression Evaluated To FALSE\r\n[1512374387.68][CONN][INF] found KV pair in stream: {{__testcase_finish;WIFI-SET-CREDENTIAL;0;1}}, queued...\r\n[1512374387.77][CONN][RXD] >>> 'WIFI-SET-CREDENTIAL': 0 passed, 1 failed with reason 'Assertion Failed'\r\n[1512374387.77][CONN][RXD]\r\n[1512374387.83][CONN][RXD] >>> Test cases: 0 passed, 1 failed with reason 'Assertion Failed'\r\n```\r\n\r\n\r\n**Steps to reproduce**\r\n```\r\nmbed test --compile -c -t GCC_ARM -m UBLOX_EVK_ODIN_W2 --app-config .\\TESTS\\network\\wifi\\template_mbed_app.txt -n tests-network-wifi\r\nmbedhtrun -f .\\BUILD\\tests\\UBLOX_EVK_ODIN_W2\\GCC_ARM\\TESTS\\network\\wifi\\wifi.bin -d X: -p COMY:9600\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5641",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5641/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5641/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5641/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5641",
    "id": 278763338,
    "number": 5641,
    "title": "Is there an FAQ or TL;DR for bridging various SDK functionalities to mbed  OS?",
    "user": {
      "login": "jrobeson",
      "id": 56908,
      "avatar_url": "https://avatars0.githubusercontent.com/u/56908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrobeson",
      "html_url": "https://github.com/jrobeson",
      "followers_url": "https://api.github.com/users/jrobeson/followers",
      "following_url": "https://api.github.com/users/jrobeson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrobeson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrobeson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrobeson/subscriptions",
      "organizations_url": "https://api.github.com/users/jrobeson/orgs",
      "repos_url": "https://api.github.com/users/jrobeson/repos",
      "events_url": "https://api.github.com/users/jrobeson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrobeson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-12-03T10:54:27Z",
    "updated_at": "2018-01-16T13:52:59Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n\r\n## Question\r\n\r\nI was trying to setup I2S on an NRF52 and mbed provides no nice driver wrapper for it. I was having all sorts of trouble with my application hanging. I was eventually able to figure out that the interrupt vector table was remapped and that all I needed was to grab the I2S drivers from the Nordic SDK (11) wrap it in a `extern \"C\"` (already done in SDK 13) and add `NVIC_SetVector(I2S_IRQn, (uint32_t) I2S_IRQHandler);`  \r\n\r\nIs there a list of issues and answers like this that would help folks who are just playing around with embedded dev and trying to get stuff to work?\r\n\r\nThis issue was specifically with the Nordic SDK, but I assume it'd apply just as well for others."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5640",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5640/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5640/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5640/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5640",
    "id": 278669598,
    "number": 5640,
    "title": "Realtek RTL8195AM - CMSIS-RTOS error: ISR Queue overflow (status: 0x2, task ID: 0x0, object ID: 0x30051484)",
    "user": {
      "login": "JanneKiiskila",
      "id": 21054492,
      "avatar_url": "https://avatars1.githubusercontent.com/u/21054492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JanneKiiskila",
      "html_url": "https://github.com/JanneKiiskila",
      "followers_url": "https://api.github.com/users/JanneKiiskila/followers",
      "following_url": "https://api.github.com/users/JanneKiiskila/following{/other_user}",
      "gists_url": "https://api.github.com/users/JanneKiiskila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JanneKiiskila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JanneKiiskila/subscriptions",
      "organizations_url": "https://api.github.com/users/JanneKiiskila/orgs",
      "repos_url": "https://api.github.com/users/JanneKiiskila/repos",
      "events_url": "https://api.github.com/users/JanneKiiskila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JanneKiiskila/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620926933,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20realtek",
        "name": "devices: realtek",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 22,
    "created_at": "2017-12-02T09:19:21Z",
    "updated_at": "2018-03-02T03:14:45Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker for releasing support for Mbed Cloud Client / mbed-os-example-client\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nREALTEK_RTL8195AM\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\nmbed cli Windows installed toolchain 0.43\r\ngcc_arm - same with Linux as well.\r\n\r\n**mbed-cli version:** \r\n(`mbed --version`)\r\n1.2.2\r\n\r\n**mbed-os sha:**\r\n(`git log -n1 --oneline`)\r\n\r\n2e1c2a1cd (HEAD -> master, origin/master, origin/feature-lorawan, origin/HEAD) Merge pull request #5538 from geky/littlefs-staging\r\n41591eb83 Merge pull request #5602 from artokin/nanostack_release_v704\r\n\r\n\r\n**DAPLink version:**\r\n\r\n241 - this one is also a bit old\r\nIt would be nice if Realtek could update the official  DAPLINK you can download via their website.\r\n\r\n```\r\n=========================================================\r\n\r\nROM Version: 0.3\r\n\r\nBuild ToolChain Version: gcc version 4.8.3 (Realtek ASDK-4.8.3p1 Build 2003)\r\n\r\n=========================================================\r\nCheck boot type form eFuse\r\nSPI Initial\r\nImage1 length: 0x3308, Image Addr: 0x10000bc8\r\nImage1 Validate OK, Going jump to Image1\r\n```\r\n\r\n**Expected behavior**\r\n\r\n`mbed-os-example-client` can run for a very long time.\r\nFor example reference testing was done with K64F, it works fine.\r\n\r\n**Actual behavior**\r\n\r\n```\r\n...\r\nsimulate button_click, new value of counter is 280\r\nsimulate button_click, new value of counter is 281\r\nsimulate button_click, new value of counter is 282\r\nsimulate button_click, new value of counter is 283\r\nCMSIS-RTOS error: ISR Queue overflow (status: 0x2, task ID: 0x0, object ID: 0x30051484)\r\n\r\n[mbed_die]  0x0 die here\r\n```\r\n\r\n**Steps to reproduce**\r\n\r\n```\r\ngit clone mbed-os-example-client\r\nmodify mbed_app.json with a valid SSID/WIFI-passphrase.\r\nset connectivity method to `WIFI_RTW`\r\nmbed compile -m REALTEK_RTL8195AM -t GCC_ARM\r\n```\r\n\r\n(Have not tried other compilers, though).\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5639",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5639/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5639/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5639/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5639",
    "id": 278620615,
    "number": 5639,
    "title": "UART buffer size not accesible in constructor",
    "user": {
      "login": "sarahmarshy",
      "id": 12565767,
      "avatar_url": "https://avatars3.githubusercontent.com/u/12565767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sarahmarshy",
      "html_url": "https://github.com/sarahmarshy",
      "followers_url": "https://api.github.com/users/sarahmarshy/followers",
      "following_url": "https://api.github.com/users/sarahmarshy/following{/other_user}",
      "gists_url": "https://api.github.com/users/sarahmarshy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sarahmarshy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sarahmarshy/subscriptions",
      "organizations_url": "https://api.github.com/users/sarahmarshy/orgs",
      "repos_url": "https://api.github.com/users/sarahmarshy/repos",
      "events_url": "https://api.github.com/users/sarahmarshy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sarahmarshy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-12-01T22:53:25Z",
    "updated_at": "2017-12-14T20:39:55Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n\r\nInspired by - https://os.mbed.com/questions/75881/Asynchronous-serial-read-buffer-size/\r\n\r\nThe current case hides the buffer size from the user using the config system - https://github.com/ARMmbed/mbed-os/blob/master/drivers/UARTSerial.h#L32-L34. Users should be able to specify it in the constructor of the serial object. The default size should be 256. Like so:\r\n```\r\nUARTSerial(PinName tx, PinName rx, int baud = MBED_CONF_PLATFORM_DEFAULT_SERIAL_BAUD_RATE, int buff_size = 256);\r\n```\r\n\r\nIt looks like the buffers are declared statically now -https://github.com/ARMmbed/mbed-os/blob/master/drivers/UARTSerial.h#L235-L236. So, the work will require dynamically allocated these buffers.\r\n\r\nAdditionally, the buffer size is not listed a configurable parameter in the docs - https://os.mbed.com/docs/v5.6/reference/serial.html.\r\n\r\n@kjbracey-arm \r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5632",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5632/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5632/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5632/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5632",
    "id": 278457549,
    "number": 5632,
    "title": "lpc546xx: ISP able pins as gpio",
    "user": {
      "login": "gorazdko",
      "id": 25270775,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25270775?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gorazdko",
      "html_url": "https://github.com/gorazdko",
      "followers_url": "https://api.github.com/users/gorazdko/followers",
      "following_url": "https://api.github.com/users/gorazdko/following{/other_user}",
      "gists_url": "https://api.github.com/users/gorazdko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gorazdko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gorazdko/subscriptions",
      "organizations_url": "https://api.github.com/users/gorazdko/orgs",
      "repos_url": "https://api.github.com/users/gorazdko/repos",
      "events_url": "https://api.github.com/users/gorazdko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gorazdko/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-12-01T12:52:53Z",
    "updated_at": "2018-01-12T21:38:29Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "## Type: Question\r\n\r\n## Abstract\r\n\r\nI configured two pins as outputs - one of them supports ISP mode (P0_13):\r\n```\r\nDigitalOut p1(P0_13);\r\nDigitalOut p4(P0_16);\r\n```\r\n\r\n![iocon](https://user-images.githubusercontent.com/25270775/33482911-85b54d4e-d69b-11e7-824b-ccb2ef572c63.PNG)\r\n\r\n\r\nRunning this code works fine. Both pins are toggling:\r\n```\r\n while (true) {\t\t\t\t\t\t\r\n    p1.write(0);\r\n    p4.write(0);\t  \r\n    wait(0.5);\t\r\n\r\n    p1.write(1);\r\n    p4.write(1);\r\n\r\n    wait(0.5);\t\t\t\r\n    }\r\n```\r\n\r\nThough my debugger is not showing any toggling for P0_13, it cannot be manipulated over debugger nor read correctly (always 0)\r\n\r\n![toggle](https://user-images.githubusercontent.com/25270775/33482936-a1cba79e-d69b-11e7-8308-9eae9881226f.PNG)\r\n\r\nNor can the value be read correctly for P0_13 in code:   `p1.read()`.  *Is this behaviour intentional? Or are there any other registers that need to be configured to be able to read the value correctly?*\r\n\r\nI am asking because programs that use operator overloading (which use gpio read method) dont work correctly for ISP able pins:\r\n\r\n```\r\n while (true) {\t\t\t\t\t\t\r\n        p1 = !p1;      // ISP able;   does not work beacuse the value cannot be read correctly\r\n\tp4 = !p4;     // ISP unable, works fine \r\n        wait(0.5);\t\t\t\r\n    }\r\n```\r\n\r\n*Why are MODE and OD bits missing in PIO013 (first image)?*\r\n\r\n### Remark\r\nAll ISP mode pins are always pulled up\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5615",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5615/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5615/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5615/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5615",
    "id": 277754397,
    "number": 5615,
    "title": "warnings inside mbed-os",
    "user": {
      "login": "netanelgonen",
      "id": 17008964,
      "avatar_url": "https://avatars3.githubusercontent.com/u/17008964?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/netanelgonen",
      "html_url": "https://github.com/netanelgonen",
      "followers_url": "https://api.github.com/users/netanelgonen/followers",
      "following_url": "https://api.github.com/users/netanelgonen/following{/other_user}",
      "gists_url": "https://api.github.com/users/netanelgonen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/netanelgonen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/netanelgonen/subscriptions",
      "organizations_url": "https://api.github.com/users/netanelgonen/orgs",
      "repos_url": "https://api.github.com/users/netanelgonen/repos",
      "events_url": "https://api.github.com/users/netanelgonen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/netanelgonen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-11-29T13:29:00Z",
    "updated_at": "2018-01-08T14:20:13Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\nwe are trying to compile with treat warning as errors and we are facing errors inside mbed-os\r\nwarnings inside the code example:\r\n\r\n        [Error] nsdynmemLIB.c@240,25: comparison between signed and unsigned integer expressions [-Werror=sign-compare]\r\n        [Error] nsdynmemLIB.c@382,31: comparison between signed and unsigned integer expressions [-Werror=sign-compare]\r\n\r\n\r\n- Type: Bug \r\n\r\n- Priority:  Major \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n\r\n**mbed-cli version:** \r\n(`mbed --version`)\r\n\r\n**mbed-os sha:**\r\n(`git log -n1 --oneline`)\r\n\r\n**DAPLink version:**\r\n\r\n**Expected behavior**\r\n\r\n**Actual behavior**\r\n\r\n**Steps to reproduce**\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\n**Suggested enhancement**\r\n\r\n**Pros**\r\n\r\n**Cons**\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**How to?**\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5612",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5612/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5612/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5612/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5612",
    "id": 277641547,
    "number": 5612,
    "title": "Error occurs when export to e2studio by using GR-PEACH board on Online Compiler",
    "user": {
      "login": "TomoYamanaka",
      "id": 9958200,
      "avatar_url": "https://avatars3.githubusercontent.com/u/9958200?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomoYamanaka",
      "html_url": "https://github.com/TomoYamanaka",
      "followers_url": "https://api.github.com/users/TomoYamanaka/followers",
      "following_url": "https://api.github.com/users/TomoYamanaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomoYamanaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomoYamanaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomoYamanaka/subscriptions",
      "organizations_url": "https://api.github.com/users/TomoYamanaka/orgs",
      "repos_url": "https://api.github.com/users/TomoYamanaka/repos",
      "events_url": "https://api.github.com/users/TomoYamanaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomoYamanaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 534372905,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20online%20deployment",
        "name": "type: online deployment",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 28,
    "created_at": "2017-11-29T06:16:14Z",
    "updated_at": "2018-05-21T19:15:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n- Priority: Major \r\n\r\n---------------------------------------------------------------\r\n## Question\r\nWhen exporting the mbed program to Renesas' IDE **e2studio** by using GR-PEACH, the following error is shown on Online Compiler.\r\n\r\n`An error occurred during export. Please contact support`\r\n\r\nThe situation of this issue is the below.\r\n- If my memory serves correctly, there was no problem until beginning of Oct.\r\n- This error occurs even use Mbed OS 5.4.7(GR-PEACH is active as target device).\r\n\r\n<br>\r\nCould you confirm the above?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5603",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5603/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5603/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5603/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5603",
    "id": 277361376,
    "number": 5603,
    "title": "Example for SPI async API for mbed os 5?",
    "user": {
      "login": "jrobeson",
      "id": 56908,
      "avatar_url": "https://avatars0.githubusercontent.com/u/56908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrobeson",
      "html_url": "https://github.com/jrobeson",
      "followers_url": "https://api.github.com/users/jrobeson/followers",
      "following_url": "https://api.github.com/users/jrobeson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrobeson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrobeson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrobeson/subscriptions",
      "organizations_url": "https://api.github.com/users/jrobeson/orgs",
      "repos_url": "https://api.github.com/users/jrobeson/repos",
      "events_url": "https://api.github.com/users/jrobeson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrobeson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-11-28T12:07:51Z",
    "updated_at": "2017-11-28T12:26:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n\r\n## Question\r\n\r\nIs there any more updated example for the SPI async API than https://github.com/ARMmbed/example-asynch-spi/? It's not for mbed-os 5 . I couldn't figure out where the `Buffer` came from in my mbed-os source tree, so perhaps it's related to that. \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5600",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5600/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5600/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5600/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5600",
    "id": 277355845,
    "number": 5600,
    "title": "No driver present which uses TRNG HAL",
    "user": {
      "login": "MikeDK",
      "id": 1184607,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1184607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeDK",
      "html_url": "https://github.com/MikeDK",
      "followers_url": "https://api.github.com/users/MikeDK/followers",
      "following_url": "https://api.github.com/users/MikeDK/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeDK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeDK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeDK/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeDK/orgs",
      "repos_url": "https://api.github.com/users/MikeDK/repos",
      "events_url": "https://api.github.com/users/MikeDK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeDK/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 521940966,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tls",
        "name": "component: tls",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-11-28T11:48:01Z",
    "updated_at": "2017-11-28T12:35:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n\r\n- Type: Enhancement\r\n\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nThere is a well defined HAL API for using TRNG, but there exists no driver which uses it.\r\nThe only place where hal/trng_api.h is included is mbedtls.\r\nBut if someone only needs true random numbers, and no crypto stuff, the only way now is to use the HAL interface directly.\r\n\r\n**Suggested enhancement**\r\nImplement a small driver class with some nice type cast overload operators for...:\r\n- uint8_t\r\n- uint16_t\r\n- uint32_t\r\n- uint64_t\r\n- uint8_t*\r\n- float\r\n- double\r\n- bool (coin flip :) )\r\n\r\n... and functions for getting variable lengths...:\r\n- GetString(std::string& str, const uint32_t& len)\r\n- GetArray(std::vector<uint_8>& array, const uint32_t& len)\r\n- GetArray(uint8_t *array, const uint32_t& len)\r\n\r\n... maybe also some overloaded shift operators (>>) to do it stream-like.\r\n\r\n**Pros**\r\nNo need to use HAL directly, and also the possibility for all kinds of type cast overloads.\r\n\r\n**Cons**\r\nI guess like for CpuUid, I will be the one implementing it ;-)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5582",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5582/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5582/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5582/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5582",
    "id": 276635047,
    "number": 5582,
    "title": "UBLOX_EVK_ODIN_W2 does not pass Greentea testcase WIFI-CONNECT-PARAMS-CHANNEL and WIFI-CONNECT-PARAMS-CHANNEL-FAIL",
    "user": {
      "login": "VeijoPesonen",
      "id": 33285290,
      "avatar_url": "https://avatars1.githubusercontent.com/u/33285290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VeijoPesonen",
      "html_url": "https://github.com/VeijoPesonen",
      "followers_url": "https://api.github.com/users/VeijoPesonen/followers",
      "following_url": "https://api.github.com/users/VeijoPesonen/following{/other_user}",
      "gists_url": "https://api.github.com/users/VeijoPesonen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VeijoPesonen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VeijoPesonen/subscriptions",
      "organizations_url": "https://api.github.com/users/VeijoPesonen/orgs",
      "repos_url": "https://api.github.com/users/VeijoPesonen/repos",
      "events_url": "https://api.github.com/users/VeijoPesonen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VeijoPesonen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-11-24T14:40:09Z",
    "updated_at": "2018-03-21T11:29:54Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\narm-none-eabi-g++.exe (GNU Tools for ARM Embedded Processors 6-2017-q2-update) 6.3.1 20170620 (release) [ARM/embedded-6-branch revision 249437]\r\n**mbed-cli version:** \r\n`1.2.2`\r\n\r\n**mbed-os sha:**\r\n`4e222952d`\r\n\r\n**DAPLink version:**\r\n`0221`\r\n\r\n**Expected behavior**\r\nWIFI-CONNECT-PARAMS-CHANNEL succeeds\r\nWIFI-CONNECT-PARAMS-CHANNEL-FAIL succeeds\r\n\r\n**Actual behavior**\r\n**WIFI-CONNECT-PARAMS-CHANNEL**\r\nExpected **NSAPI_ERROR_OK** Was **NSAPI_ERROR_DEVICE_UNSUPPORTED**\r\n\r\n    [1511534267.07][CONN][INF] found KV pair in stream: {{__testcase_name;WIFI-CONNECT-PARAMS-CHANNEL}}, queued...\r\n    [1511534267.12][CONN][RXD] >>> Running case #1: 'WIFI-CONNECT-PARAMS-CHANNEL'...\r\n    [1511534267.18][CONN][INF] found KV pair in stream: {{__testcase_start;WIFI-CONNECT-PARAMS-CHANNEL}}, queued...\r\n    [1511534268.28][CONN][RXD] :36::FAIL: Expected 0 Was -3002\r\n    [1511534268.34][CONN][INF] found KV pair in stream: {{__testcase_finish;WIFI-CONNECT-PARAMS-CHANNEL;0;1}}, queued...\r\n    [1511534268.43][CONN][RXD] >>> 'WIFI-CONNECT-PARAMS-CHANNEL': 0 passed, 1 failed with reason 'Assertion Failed'\r\n\r\n**WIFI-CONNECT-PARAMS-CHANNEL-FAIL**\r\nExpected **NSAPI_ERROR_CONNECTION_TIMEOUT** or **NSAPI_ERROR_NO_CONNECTION**, no success\r\n\r\n    [1511533689.77][CONN][INF] found KV pair in stream: {{__testcase_name;WIFI-CONNECT-PARAMS-CHANNEL-FAIL}}, queued...\r\n    [1511533689.83][CONN][RXD] >>> Running case #1: 'WIFI-CONNECT-PARAMS-CHANNEL-FAIL'...\r\n    [1511533689.89][CONN][INF] found KV pair in stream: {{__testcase_start;WIFI-CONNECT-PARAMS-CHANNEL-FAIL}}, queued...\r\n    [1511533691.00][CONN][RXD] :36::FAIL: Expression Evaluated To FALSE\r\n    [1511533691.07][CONN][INF] found KV pair in stream: {{__testcase_finish;WIFI-CONNECT-PARAMS-CHANNEL-FAIL;0;1}}, queued...\r\n    [1511533691.16][CONN][RXD] >>> 'WIFI-CONNECT-PARAMS-CHANNEL-FAIL': 0 passed, 1 failed with reason 'Assertion Failed'\r\n\r\n**Steps to reproduce**\r\nCompile and run the test cases separately - in other words comment out other testcases from main() and run one at a time. You also need to work around the issue #5546 .\r\n\r\n    mbed test --compile -c -t GCC_ARM -m UBLOX_EVK_ODIN_W2 --app-config .\\TESTS\\network\\wifi\\template_mbed_app.txt -n tests-network-wifi\r\n    mbedhtrun -f .\\BUILD\\tests\\UBLOX_EVK_ODIN_W2\\GCC_ARM\\TESTS\\network\\wifi\\wifi.bin -d X: -p COMY:9600\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5551",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5551/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5551/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5551/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5551",
    "id": 275916116,
    "number": 5551,
    "title": "retarget: ftell seems to be calling file_seek instead of file_tell",
    "user": {
      "login": "geky",
      "id": 1075160,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geky",
      "html_url": "https://github.com/geky",
      "followers_url": "https://api.github.com/users/geky/followers",
      "following_url": "https://api.github.com/users/geky/following{/other_user}",
      "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
      "organizations_url": "https://api.github.com/users/geky/orgs",
      "repos_url": "https://api.github.com/users/geky/repos",
      "events_url": "https://api.github.com/users/geky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "geky",
      "id": 1075160,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geky",
      "html_url": "https://github.com/geky",
      "followers_url": "https://api.github.com/users/geky/followers",
      "following_url": "https://api.github.com/users/geky/following{/other_user}",
      "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
      "organizations_url": "https://api.github.com/users/geky/orgs",
      "repos_url": "https://api.github.com/users/geky/repos",
      "events_url": "https://api.github.com/users/geky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geky/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "geky",
        "id": 1075160,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/geky",
        "html_url": "https://github.com/geky",
        "followers_url": "https://api.github.com/users/geky/followers",
        "following_url": "https://api.github.com/users/geky/following{/other_user}",
        "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
        "organizations_url": "https://api.github.com/users/geky/orgs",
        "repos_url": "https://api.github.com/users/geky/repos",
        "events_url": "https://api.github.com/users/geky/events{/privacy}",
        "received_events_url": "https://api.github.com/users/geky/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-11-22T01:33:33Z",
    "updated_at": "2018-02-15T23:13:08Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "This is not incorrect behaviour, but is a hit to performance.\r\n\r\nThe seek function can be used to get the needed info for ftell, but a call to seek has a lot more implications since it may change the file position. Most notable caches may end up flushed to disk to prepare for the jump.\r\n\r\nWe have file_tell in the filesystem API, so ftell should be calling that instead. In theory, we just need to look into the standard library to figure our where the correct hook is.\r\n\r\ncc @dannybenor, @davidsaada "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5544",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5544/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5544/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5544/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5544",
    "id": 275661556,
    "number": 5544,
    "title": "Add HAL interface for retrieving Unique Serial Number of CPU",
    "user": {
      "login": "MikeDK",
      "id": 1184607,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1184607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeDK",
      "html_url": "https://github.com/MikeDK",
      "followers_url": "https://api.github.com/users/MikeDK/followers",
      "following_url": "https://api.github.com/users/MikeDK/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeDK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeDK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeDK/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeDK/orgs",
      "repos_url": "https://api.github.com/users/MikeDK/repos",
      "events_url": "https://api.github.com/users/MikeDK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeDK/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-11-21T10:36:04Z",
    "updated_at": "2017-11-22T14:52:41Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n\r\n## Enhancement\r\n\r\n**Reason to enhance**\r\nAs far as I know there is no abstract layer to retrieve a CPU unique serial number which is implemented by nearly all manufacturers.\r\nAt the moment a developer has to write native board/cpu code for getting the unique serial number.\r\n\r\n**Suggested enhancement**\r\nAdd new HAL interface for getting unique serial number, which shall then be implemented by the different board/cpu manufacturers or some other willing persons ;)\r\n\r\nAlso add a new class in drivers, which will use the hal interface.\r\nCan be some very simple class which reads unique serial number via hal, stores it in a byte array of variable length (some manufacturers have 8 byte uid, some have 12 bytes, ...) and some type cast operators which return the uid in different formats (byte array, std::vector<byte>, std::string, const char*, ...)\r\n\r\nI have already implemented such a class, which works with EFM32, STM32, and NRF5x boards/cpus.\r\nBut this class directly calls code provided by the different manufacturer's SDKs.\r\nIt would be more reasonable to implement a real HAL interface for this.\r\n\r\n**Pros**\r\nFor writing portable mbed code which needs some kind of unique device id, this is a must-have.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5542",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5542/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5542/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5542/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5542",
    "id": 275641032,
    "number": 5542,
    "title": "Ethernet driver in mbed/driver does not call ST specific HAL libs?",
    "user": {
      "login": "peeyushpashine",
      "id": 1849556,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1849556?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peeyushpashine",
      "html_url": "https://github.com/peeyushpashine",
      "followers_url": "https://api.github.com/users/peeyushpashine/followers",
      "following_url": "https://api.github.com/users/peeyushpashine/following{/other_user}",
      "gists_url": "https://api.github.com/users/peeyushpashine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peeyushpashine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peeyushpashine/subscriptions",
      "organizations_url": "https://api.github.com/users/peeyushpashine/orgs",
      "repos_url": "https://api.github.com/users/peeyushpashine/repos",
      "events_url": "https://api.github.com/users/peeyushpashine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peeyushpashine/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-11-21T09:31:08Z",
    "updated_at": "2017-11-22T09:39:07Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "\r\n### Description\r\n- Type: Question\r\n\r\n\r\n\r\n**Target**\r\nTARGET_STM\r\n\r\n\r\nEthernet driver in mbed-os/driver does not call ST specific HAL libs while these HAL functions are implemented for other targets.\r\n\r\nI see [here](https://github.com/ARMmbed/mbed-os/tree/c0fe3b510931e2e60fc40b6ccb52a39ba31c5e00/features/FEATURE_LWIP/lwip-interface) EthernetInterface.cpp implements target specific arch based LWIP interface for ST. But what is the reason for keeping driver file here insread of mbed-os/driver ?\r\n@0xc0170 @bcostm @geky \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5537",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5537/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5537/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5537/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5537",
    "id": 275413487,
    "number": 5537,
    "title": "Tools:  multiple region - tools error msg improvement",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-11-20T16:20:19Z",
    "updated_at": "2017-11-22T16:53:09Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Description\r\n- Type: Enhancement \r\n- Related issue: #5021\r\n- Priority:  Minor\r\n\r\nReferenced PR above , there is this request:\r\n\r\nThe problem\r\n\r\n> ELF files containing multiple regions were being converted to a folder with each region as a separate file, this caused the build scripts to fail since the .bin was not created.\r\n\r\nPossibly enhancement\r\n\r\n> Maybe the mbed-os build tools should print a nicely formatted error message if this occurs and there isn't a post build hook for the platform\r\n\r\n@theotherjimmy Please add more information if needed\r\n\r\ncc @chrissnow \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5529",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5529/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5529/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5529/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5529",
    "id": 275140189,
    "number": 5529,
    "title": "tests-mbed_drivers-ticker  tests are failing on KL46Z ",
    "user": {
      "login": "studavekar",
      "id": 25986241,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25986241?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/studavekar",
      "html_url": "https://github.com/studavekar",
      "followers_url": "https://api.github.com/users/studavekar/followers",
      "following_url": "https://api.github.com/users/studavekar/following{/other_user}",
      "gists_url": "https://api.github.com/users/studavekar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/studavekar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/studavekar/subscriptions",
      "organizations_url": "https://api.github.com/users/studavekar/orgs",
      "repos_url": "https://api.github.com/users/studavekar/repos",
      "events_url": "https://api.github.com/users/studavekar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/studavekar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-11-19T07:54:59Z",
    "updated_at": "2017-11-21T14:43:13Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n\r\ntests-mbed_drivers-ticker tests are failing for KL46Z on master \r\n\r\n```\r\n[1511076881.05][CONN][RXD] >>> Running case #9: 'Test multi ticker'...\r\n[1511076881.09][CONN][INF] found KV pair in stream: {{__testcase_start;Test multi ticker}}, queued...\r\n[1511076881.22][CONN][RXD] :195::FAIL: Expected 16 Was 6\r\n[1511076881.28][CONN][INF] found KV pair in stream: {{__testcase_finish;Test multi ticker;0;1}}, queued...\r\n[1511076881.35][CONN][RXD] >>> 'Test multi ticker': 0 passed, 1 failed with reason 'Assertion Failed'\r\n```\r\n\r\n- Type: Bug \r\n\r\n**Target**\r\nKL46Z\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Steps to reproduce**\r\nmbed test -m KL46Z -t GCC_ARM-n tests-mbed_drivers-ticker -vv"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5522",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5522/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5522/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5522/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5522",
    "id": 274860240,
    "number": 5522,
    "title": "thread max_stack() returns always aligned stacksize-4 in rtos5",
    "user": {
      "login": "karsev",
      "id": 15995156,
      "avatar_url": "https://avatars3.githubusercontent.com/u/15995156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karsev",
      "html_url": "https://github.com/karsev",
      "followers_url": "https://api.github.com/users/karsev/followers",
      "following_url": "https://api.github.com/users/karsev/following{/other_user}",
      "gists_url": "https://api.github.com/users/karsev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karsev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karsev/subscriptions",
      "organizations_url": "https://api.github.com/users/karsev/orgs",
      "repos_url": "https://api.github.com/users/karsev/repos",
      "events_url": "https://api.github.com/users/karsev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karsev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345118,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20rtos",
        "name": "component: rtos",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-11-17T13:09:48Z",
    "updated_at": "2017-12-16T16:50:35Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F\r\n\r\n**Toolchain:**\r\nARM\r\n\r\n**Toolchain version:**\r\n5.06\r\n**mbed-cli version:** \r\n1.1.1\r\n\r\n**mbed-os sha:**\r\n78474a512 \r\n\r\n**Expected behavior**\r\nShould return maximum stack memory usage to date\r\n\r\n**Actual behavior**\r\nCalling max_stack() returns: aligned stacksize-4\r\n**Steps to reproduce**\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\n**Suggested enhancement**\r\nthread stack should be filled with the osRtxStackFillPattern pattern instead of hardcoded 0xE25A2EA5U.\r\nrtx_thread.c already sets the first byte to osRtxStackMagicWord (0xE25A2EA5U) and the rest is filled with the osRtxStackFillPattern. \r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5519",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5519/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5519/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5519/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5519",
    "id": 274821137,
    "number": 5519,
    "title": "exporting problem with compiler online",
    "user": {
      "login": "rspelta",
      "id": 3882627,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3882627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rspelta",
      "html_url": "https://github.com/rspelta",
      "followers_url": "https://api.github.com/users/rspelta/followers",
      "following_url": "https://api.github.com/users/rspelta/following{/other_user}",
      "gists_url": "https://api.github.com/users/rspelta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rspelta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rspelta/subscriptions",
      "organizations_url": "https://api.github.com/users/rspelta/orgs",
      "repos_url": "https://api.github.com/users/rspelta/repos",
      "events_url": "https://api.github.com/users/rspelta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rspelta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 534372905,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20online%20deployment",
        "name": "type: online deployment",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "thegecko",
      "id": 61341,
      "avatar_url": "https://avatars1.githubusercontent.com/u/61341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thegecko",
      "html_url": "https://github.com/thegecko",
      "followers_url": "https://api.github.com/users/thegecko/followers",
      "following_url": "https://api.github.com/users/thegecko/following{/other_user}",
      "gists_url": "https://api.github.com/users/thegecko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thegecko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thegecko/subscriptions",
      "organizations_url": "https://api.github.com/users/thegecko/orgs",
      "repos_url": "https://api.github.com/users/thegecko/repos",
      "events_url": "https://api.github.com/users/thegecko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thegecko/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "thegecko",
        "id": 61341,
        "avatar_url": "https://avatars1.githubusercontent.com/u/61341?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/thegecko",
        "html_url": "https://github.com/thegecko",
        "followers_url": "https://api.github.com/users/thegecko/followers",
        "following_url": "https://api.github.com/users/thegecko/following{/other_user}",
        "gists_url": "https://api.github.com/users/thegecko/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/thegecko/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thegecko/subscriptions",
        "organizations_url": "https://api.github.com/users/thegecko/orgs",
        "repos_url": "https://api.github.com/users/thegecko/repos",
        "events_url": "https://api.github.com/users/thegecko/events{/privacy}",
        "received_events_url": "https://api.github.com/users/thegecko/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "theotherjimmy",
        "id": 685409,
        "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theotherjimmy",
        "html_url": "https://github.com/theotherjimmy",
        "followers_url": "https://api.github.com/users/theotherjimmy/followers",
        "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
        "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
        "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
        "repos_url": "https://api.github.com/users/theotherjimmy/repos",
        "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-11-17T10:35:33Z",
    "updated_at": "2017-12-19T20:48:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hello, if I try to export a project, like mbed-os-example-blinky, there is this problem:\r\n\r\n1. I select export, I export all files.\r\n![1](https://user-images.githubusercontent.com/3882627/32942983-f11845a8-cb8a-11e7-99d5-04853987c41c.png)\r\n\r\n2. waiting...\r\n![2](https://user-images.githubusercontent.com/3882627/32943007-076d5f3c-cb8b-11e7-8e15-e00720730e24.png)\r\n\r\n3. error\r\n![3](https://user-images.githubusercontent.com/3882627/32943031-227661f2-cb8b-11e7-8243-b30cf99fce73.png)\r\n\r\nTalking with @MarceloSalazar it seems that the problem happens when we tick the box to “Export All files”. The size of the project with all files is really big, so the task in background is not able to complete; hence the timeout.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5507",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5507/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5507/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5507/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5507",
    "id": 274265427,
    "number": 5507,
    "title": "Align C++ version with compiler supported. ",
    "user": {
      "login": "pan-",
      "id": 409941,
      "avatar_url": "https://avatars3.githubusercontent.com/u/409941?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pan-",
      "html_url": "https://github.com/pan-",
      "followers_url": "https://api.github.com/users/pan-/followers",
      "following_url": "https://api.github.com/users/pan-/following{/other_user}",
      "gists_url": "https://api.github.com/users/pan-/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pan-/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pan-/subscriptions",
      "organizations_url": "https://api.github.com/users/pan-/orgs",
      "repos_url": "https://api.github.com/users/pan-/repos",
      "events_url": "https://api.github.com/users/pan-/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pan-/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 46,
    "created_at": "2017-11-15T18:52:51Z",
    "updated_at": "2018-04-26T20:38:29Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement \r\n- Related issue: #5329 \r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\nMbed OS 5.8 will be a leap forward in compiler supports. ARM compiler v5.06 will be deprecated in favor of v6.7and IAR v7.8 will be deprecated in favor of IAR v8.2. For both of these compilers the major version change induce a change in the version of C++ they support: \r\n\r\n### mbed os 5.6\r\n\r\n|          | C++98 |   C++11   |         C++14         |\r\n|----------|:-----:|:---------:|:---------------------:|\r\n| GCC  6   |   X   |     X     |           X           |\r\n| ARM 5.06 |   X   | ~ partial |           -           |\r\n| IAR 7.80 |   X   |     -     |           -           |\r\n\r\n### mbed-os 5.8\r\n\r\n|          | C++98 |   C++11   |         C++14         |\r\n|----------|:-----:|:---------:|:---------------------:|\r\n| GCC  6   |   X   |     X     |           X           |\r\n| ARMC 6.7 |   X   |     X     | beta |\r\n| IAR 8.2  |   -   |     -     |           X           |\r\n\r\nThe choice of C++98 as the C++ standard supported by mbed was obvious for mbed OS 5.6 but it is not for mbed OS 5.8 because IAR v8.2 only compile in C++ 14 mode and does not provide backward compatibility mode.  \r\n\r\nAs close as they are C++98, C++11 and C++14 standards are not 100% backward compatible. As a consequence an mbed os 5.8 application may compile on one compiler and not the other or act slightly differently. The introduction of new keywords may also breaks existing applications. \r\n\r\n**Suggested enhancement**\r\n\r\nThere is no lowest common denominator between the compiler that mbed OS 5.8 will support. However C++14 is much closer to C++11 than C++98. I'd suggest to define C++11 as the mode used by C++ compilers when they compile an mbed application and use C++14 when the ARM compiler supports it officially (in beta actually). \r\n\r\nFrom my perspective it doesn't mean that our codebase should allow new features of the standards mentioned above. I believe this question should be addressed in a different thread; we can use the CI to ensure that our code base follows our actual guideline.\r\n\r\n## Notes: \r\nBreaking changes introduced by C++11 can be found in the Section C2 of the [C++11 specification](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3485.pdf) and breaking changes introduced by C++14 can be found in the section C3 of the [C++14 specification](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4296.pdf).\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5506",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5506/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5506/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5506/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5506",
    "id": 274119997,
    "number": 5506,
    "title": "MBRBlockDevice::partition - type",
    "user": {
      "login": "JaniSuonpera",
      "id": 24889889,
      "avatar_url": "https://avatars1.githubusercontent.com/u/24889889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JaniSuonpera",
      "html_url": "https://github.com/JaniSuonpera",
      "followers_url": "https://api.github.com/users/JaniSuonpera/followers",
      "following_url": "https://api.github.com/users/JaniSuonpera/following{/other_user}",
      "gists_url": "https://api.github.com/users/JaniSuonpera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JaniSuonpera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JaniSuonpera/subscriptions",
      "organizations_url": "https://api.github.com/users/JaniSuonpera/orgs",
      "repos_url": "https://api.github.com/users/JaniSuonpera/repos",
      "events_url": "https://api.github.com/users/JaniSuonpera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JaniSuonpera/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "geky",
      "id": 1075160,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geky",
      "html_url": "https://github.com/geky",
      "followers_url": "https://api.github.com/users/geky/followers",
      "following_url": "https://api.github.com/users/geky/following{/other_user}",
      "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
      "organizations_url": "https://api.github.com/users/geky/orgs",
      "repos_url": "https://api.github.com/users/geky/repos",
      "events_url": "https://api.github.com/users/geky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geky/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "geky",
        "id": 1075160,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/geky",
        "html_url": "https://github.com/geky",
        "followers_url": "https://api.github.com/users/geky/followers",
        "following_url": "https://api.github.com/users/geky/following{/other_user}",
        "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
        "organizations_url": "https://api.github.com/users/geky/orgs",
        "repos_url": "https://api.github.com/users/geky/repos",
        "events_url": "https://api.github.com/users/geky/events{/privacy}",
        "received_events_url": "https://api.github.com/users/geky/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-11-15T11:16:29Z",
    "updated_at": "2018-02-15T23:38:54Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n\r\n## Question\r\nI am looking documentation https://os.mbed.com/docs/v5.6/mbed-os-api-doxy/class_m_b_r_block_device.html#ace6dd73e8514a0a2afab8f8bc37bada8\r\n\r\nI tried to find supported values/filesystems for type, which is \"8-bit partition type to identitfy partition's contents\". Would you clarity usage of parameter type with MBRBlockDevice::partition? What are supported values? Is it type same than Partition ID in table https://en.wikipedia.org/wiki/Partition_type#List_of_partition_IDs?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5504",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5504/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5504/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5504/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5504",
    "id": 274089729,
    "number": 5504,
    "title": "C++11 format string being used causes warnings in IAR EWARM 7.80.4",
    "user": {
      "login": "gjones1",
      "id": 8822663,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8822663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gjones1",
      "html_url": "https://github.com/gjones1",
      "followers_url": "https://api.github.com/users/gjones1/followers",
      "following_url": "https://api.github.com/users/gjones1/following{/other_user}",
      "gists_url": "https://api.github.com/users/gjones1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gjones1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gjones1/subscriptions",
      "organizations_url": "https://api.github.com/users/gjones1/orgs",
      "repos_url": "https://api.github.com/users/gjones1/repos",
      "events_url": "https://api.github.com/users/gjones1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gjones1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 427713129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/mirrored",
        "name": "mirrored",
        "color": "ededed",
        "default": false
      },
      {
        "id": 426508266,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/tracking",
        "name": "tracking",
        "color": "ededed",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-11-15T09:34:15Z",
    "updated_at": "2017-12-16T16:50:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "The following line us using %hh, this is a C++11 feature.  As I understand (reading the guidelines) the code should be GNU++98 (C++98 with extensions).  IAR7 is C++98 only and emits warnings.  Recommend changing or applying C++98 specific patch.\r\n\r\nhttps://github.com/ARMmbed/mbed-os/blob/1394bf95f19fdb0cbf569359bbac0b02efec5d87/features/netsocket/SocketAddress.cpp#L70"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5501",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5501/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5501/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5501/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/5501",
    "id": 273804514,
    "number": 5501,
    "title": "Ambiguous _tx_callback and _rx_callback complaints in eclipse for SerialBase.",
    "user": {
      "login": "darbyShaw",
      "id": 21097157,
      "avatar_url": "https://avatars2.githubusercontent.com/u/21097157?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darbyShaw",
      "html_url": "https://github.com/darbyShaw",
      "followers_url": "https://api.github.com/users/darbyShaw/followers",
      "following_url": "https://api.github.com/users/darbyShaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/darbyShaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darbyShaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darbyShaw/subscriptions",
      "organizations_url": "https://api.github.com/users/darbyShaw/orgs",
      "repos_url": "https://api.github.com/users/darbyShaw/repos",
      "events_url": "https://api.github.com/users/darbyShaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darbyShaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-11-14T14:07:46Z",
    "updated_at": "2017-12-06T22:25:40Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "\r\n\r\n### Description\r\n- Type: Bug\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO_F401RE\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n6.3.1\r\n\r\n**mbed-cli version:** \r\n1.2.0\r\n\r\n**mbed-os version:**\r\n5.6.4\r\n\r\n**Expected behavior**\r\nNo errors should be present in SerialBase.cpp, there should be no ambiguity.\r\n\r\n**Actual behavior**\r\nErrors:\r\n'_rx_callback' is ambiguous '\r\n'_tx_callback' is ambiguous '\r\nin SerialBase.cpp at:\r\n```\r\nSerialBase::SerialBase(PinName tx, PinName rx, int baud) :\r\n#if DEVICE_SERIAL_ASYNCH\r\n                                                 _thunk_irq(this), _tx_usage(DMA_USAGE_NEVER),\r\n                                                 _rx_usage(DMA_USAGE_NEVER), **_tx_callback**(NULL),\r\n                                                 **_rx_callback**(NULL),\r\n#endif\r\n                                                _serial(), _baud(baud) {\r\n    // No lock needed in the constructor\r\n\r\n    for (size_t i = 0; i < sizeof _irq / sizeof _irq[0]; i++) {\r\n        _irq[i] = NULL;\r\n    }\r\n\r\n    serial_init(&_serial, tx, rx);\r\n    serial_baud(&_serial, _baud);\r\n    serial_irq_handler(&_serial, SerialBase::_irq_handler, (uint32_t)this);\r\n}\r\n\r\n```\r\n\r\n\r\n**Steps to reproduce**\r\nExport a project that uses serial interface from mbed-cli for gnuarmeclipse and compile.\r\n\r\n----------------------------------------------------------------\r\n\r\n## Question\r\nThe binary is compiled fine but eclipse still shows this error. Is this OK?\r\n\r\n"
  }
]
