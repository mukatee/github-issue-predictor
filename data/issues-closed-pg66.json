[
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/71",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/71/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/71/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/71/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/71",
    "id": 19660940,
    "number": 71,
    "title": "Split up source files in groups",
    "user": {
      "login": "jorisa",
      "id": 5098411,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5098411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisa",
      "html_url": "https://github.com/jorisa",
      "followers_url": "https://api.github.com/users/jorisa/followers",
      "following_url": "https://api.github.com/users/jorisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisa/orgs",
      "repos_url": "https://api.github.com/users/jorisa/repos",
      "events_url": "https://api.github.com/users/jorisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-09-18T04:03:49Z",
    "updated_at": "2014-07-13T10:31:25Z",
    "closed_at": "2013-09-19T08:47:08Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/71",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/71",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/71.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/71.patch"
    },
    "body": "**Note: Do not merge**\n\nSplit up source files in three groups to make projects more friendly to use.\n![tree](https://f.cloud.github.com/assets/5098411/1162494/c56b48b2-2015-11e3-8b90-eea4e336b29c.png)\n\nIf this is considered an improvement I will do a proper pull request to master.\nNote that the KL25Z, LPC11U24 and LPC1347 did not have the --c99 setting for c files before, please verify if this is intended or not.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/70",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/70/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/70/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/70/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/70",
    "id": 19657307,
    "number": 70,
    "title": "Replace #ifdef with #if DEVICE_STDIO_MESSAGES",
    "user": {
      "login": "jorisa",
      "id": 5098411,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5098411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisa",
      "html_url": "https://github.com/jorisa",
      "followers_url": "https://api.github.com/users/jorisa/followers",
      "following_url": "https://api.github.com/users/jorisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisa/orgs",
      "repos_url": "https://api.github.com/users/jorisa/repos",
      "events_url": "https://api.github.com/users/jorisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-09-18T01:20:50Z",
    "updated_at": "2013-10-14T12:35:19Z",
    "closed_at": "2013-09-18T10:08:47Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/70",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/70",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/70.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/70.patch"
    },
    "body": "DEVICE_STDIO_MESSAGES is the only #define in device.h that is being used in the library as #ifdef rather than #if. This is misleading since setting it to 0 will not disable including the <stdio.h> libraries.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/69",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/69/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/69/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/69/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/69",
    "id": 19609090,
    "number": 69,
    "title": "Fix _sbrk() implementation for Cortex-M parts.",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-09-17T11:38:32Z",
    "updated_at": "2014-06-19T15:22:38Z",
    "closed_at": "2013-09-17T12:17:28Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/69",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/69",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/69.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/69.patch"
    },
    "body": "A recent commit, 43acaa4166, to get _sbrk() to build successfully for\nLPC2368 broke the Cortex-M implementation.  __get_MSP() isn't ever\ndefined as a macro, it is an inline function.  This means that the\ncode would always be compiled to use SP instead of MSP on Cortex-M\nparts.  I switched the code to instead use the TARGET_ARM7 define\nto choose which stack pointer to utilize.\n\nI tested this fix by making sure that the LPC2368 version of the mbed\nSDK would still build successfully with the Python scripts and that the\nNET1 test still built and ran successfully on my mbed-LPC1768 device.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/68",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/68/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/68/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/68/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/68",
    "id": 19563868,
    "number": 68,
    "title": "Support for USB slave functions on smaller micro's (e.g. LPC11U23)",
    "user": {
      "login": "pbrier",
      "id": 852828,
      "avatar_url": "https://avatars0.githubusercontent.com/u/852828?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pbrier",
      "html_url": "https://github.com/pbrier",
      "followers_url": "https://api.github.com/users/pbrier/followers",
      "following_url": "https://api.github.com/users/pbrier/following{/other_user}",
      "gists_url": "https://api.github.com/users/pbrier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pbrier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pbrier/subscriptions",
      "organizations_url": "https://api.github.com/users/pbrier/orgs",
      "repos_url": "https://api.github.com/users/pbrier/repos",
      "events_url": "https://api.github.com/users/pbrier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pbrier/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345068,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20usb",
        "name": "component: usb",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-09-16T17:13:53Z",
    "updated_at": "2017-10-27T19:04:18Z",
    "closed_at": "2017-10-27T19:04:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "When using smaller microcontrollers, like the LPC11U23, some USB functions take up a considerable amount of memory, and do fit or leave too little memory for useful work (depending on compiler and std. libraries used; KEIL performing better than GCC). One solution is not to include the Stream class, and remove this from the USB classes. Now it does fit (of course you loose the standard Stream functionality on the interface):\n\nFor example: modify line 92 of USBKeyboard.h from:\n\nclass USBKeyboard: public USBHID, public Stream {\n\nto\n\nclass USBKeyboard: public USBHID {\n\nNote: A similar issue is occurs with the Serial() class, you can remove the Stream or access the C-api directly to conserve memory.\n\nQuestion: Can a build option be provided for compilation without Stream classes? \n(e.g. NOCPPSTREAM?)\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/67",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/67/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/67/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/67/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/67",
    "id": 19476069,
    "number": 67,
    "title": "Get USBHost to build and run with GCC_ARM",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-09-13T21:02:02Z",
    "updated_at": "2013-09-17T01:05:17Z",
    "closed_at": "2013-09-16T14:12:44Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/67",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/67",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/67.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/67.patch"
    },
    "body": "I have made one change to this branch since I originally posted a tracking issue for this item.  That change was based on great feedback from Martin.  More information about the commits found in this pull request can be found in the individual commit descriptions.\n\nTesting I have performed on these changes:\n- Made sure the library builds successfully with GCC_ARM using my makefiles and the official mbed python build scripts.\n- Used GCC_ARM to build and test the USBHostMSD_HelloWorld sample found here-> http://mbed.org/handbook/USBHostMSD. It ran successfully.\n- I took my updated USBHost library sources and uploaded then into a USBHostMSD_HelloWorld project on the mbed site. I then built the code using the online compiler and tested the resulting binary.\n- I have used GCC_ARM to build and test USBHostMouse, USBHostKeyboard, USBHostSerial, and USBHostHub samples as found in the mbed Handbook.\n\nThanks for your consideration,\n\nAdam\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/66",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/66/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/66/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/66/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/66",
    "id": 19446500,
    "number": 66,
    "title": "LPC2368 mod",
    "user": {
      "login": "dinau",
      "id": 442455,
      "avatar_url": "https://avatars0.githubusercontent.com/u/442455?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dinau",
      "html_url": "https://github.com/dinau",
      "followers_url": "https://api.github.com/users/dinau/followers",
      "following_url": "https://api.github.com/users/dinau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dinau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dinau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dinau/subscriptions",
      "organizations_url": "https://api.github.com/users/dinau/orgs",
      "repos_url": "https://api.github.com/users/dinau/repos",
      "events_url": "https://api.github.com/users/dinau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dinau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-09-13T13:08:00Z",
    "updated_at": "2013-09-16T15:00:20Z",
    "closed_at": "2013-09-16T15:00:20Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/66",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/66",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/66.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/66.patch"
    },
    "body": "```\n1. LPC2368 [GCC_ARM]: Fixed: Compilation and link errors.\n2.  LPC2368 [GCC_ARM]: Silence some warnings.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/65",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/65/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/65/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/65/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/65",
    "id": 19399450,
    "number": 65,
    "title": "Merge TARGET_LPC11CXX and TARGET_LPC11XX?",
    "user": {
      "login": "jorisa",
      "id": 5098411,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5098411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisa",
      "html_url": "https://github.com/jorisa",
      "followers_url": "https://api.github.com/users/jorisa/followers",
      "following_url": "https://api.github.com/users/jorisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisa/orgs",
      "repos_url": "https://api.github.com/users/jorisa/repos",
      "events_url": "https://api.github.com/users/jorisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-09-12T16:44:41Z",
    "updated_at": "2013-09-27T17:59:01Z",
    "closed_at": "2013-09-27T08:29:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks like the HAL implementation for the LPC11XX and the LPC11CXX are virtually the same, except for:\n- a few extra I/O pins on the LPC11XX\n- the extra can peripheral on the LPC11CXX\n- reserved memory for on chip drivers on the LPC11CXX (0x1000 0050 - 0x1000 00B8)\n\nI noticed that a lot of bugs already got fixed on the LPC11XX leaving both directories out of sync. Would it make sense to use one target folder and just use a few ifdefs for the minor differences?\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/64",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/64/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/64/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/64/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/64",
    "id": 19273518,
    "number": 64,
    "title": "[LPC812] Added RTOS support",
    "user": {
      "login": "ytsuboi",
      "id": 246704,
      "avatar_url": "https://avatars3.githubusercontent.com/u/246704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ytsuboi",
      "html_url": "https://github.com/ytsuboi",
      "followers_url": "https://api.github.com/users/ytsuboi/followers",
      "following_url": "https://api.github.com/users/ytsuboi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ytsuboi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ytsuboi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ytsuboi/subscriptions",
      "organizations_url": "https://api.github.com/users/ytsuboi/orgs",
      "repos_url": "https://api.github.com/users/ytsuboi/repos",
      "events_url": "https://api.github.com/users/ytsuboi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ytsuboi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-09-10T17:32:05Z",
    "updated_at": "2014-08-03T15:37:19Z",
    "closed_at": "2013-09-11T19:10:18Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/64",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/64",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/64.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/64.patch"
    },
    "body": "just tested with \"[ 66] RTOS_1: Basic\"\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/63",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/63/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/63/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/63/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/63",
    "id": 19205857,
    "number": 63,
    "title": "Fix hardfault when attaching callback to CAN2 when CAN1 is not defined",
    "user": {
      "login": "jorisa",
      "id": 5098411,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5098411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisa",
      "html_url": "https://github.com/jorisa",
      "followers_url": "https://api.github.com/users/jorisa/followers",
      "following_url": "https://api.github.com/users/jorisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisa/orgs",
      "repos_url": "https://api.github.com/users/jorisa/repos",
      "events_url": "https://api.github.com/users/jorisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-09-09T16:07:20Z",
    "updated_at": "2014-07-07T17:26:22Z",
    "closed_at": "2013-09-10T10:22:55Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/63",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/63",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/63.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/63.patch"
    },
    "body": "Fault is triggered by trying to read LPC_CAN1->IER when the peripheral is powered off. Fixed by checking the power control register before checking the IER register.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/62",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/62/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/62/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/62/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/62",
    "id": 19192414,
    "number": 62,
    "title": "LPC4088: PIN mode fix, export to external tools and MAC address retrieval",
    "user": {
      "login": "arebert",
      "id": 4437887,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4437887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arebert",
      "html_url": "https://github.com/arebert",
      "followers_url": "https://api.github.com/users/arebert/followers",
      "following_url": "https://api.github.com/users/arebert/following{/other_user}",
      "gists_url": "https://api.github.com/users/arebert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arebert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arebert/subscriptions",
      "organizations_url": "https://api.github.com/users/arebert/orgs",
      "repos_url": "https://api.github.com/users/arebert/repos",
      "events_url": "https://api.github.com/users/arebert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arebert/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-09-09T12:29:34Z",
    "updated_at": "2013-10-11T12:03:16Z",
    "closed_at": "2013-09-13T12:59:14Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/62",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/62",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/62.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/62.patch"
    },
    "body": "- Bugfix: PIN Modes are now set correctly\n- Export to uVision and Red Suite/LPCXpresso now supported\n- MAC address retrieved from on-board eeprom (24AA02E48) \n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/61",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/61/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/61/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/61/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/61",
    "id": 19184041,
    "number": 61,
    "title": "Fixed problem in PWMOUT mapping table",
    "user": {
      "login": "toyowata",
      "id": 4926755,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4926755?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toyowata",
      "html_url": "https://github.com/toyowata",
      "followers_url": "https://api.github.com/users/toyowata/followers",
      "following_url": "https://api.github.com/users/toyowata/following{/other_user}",
      "gists_url": "https://api.github.com/users/toyowata/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toyowata/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toyowata/subscriptions",
      "organizations_url": "https://api.github.com/users/toyowata/orgs",
      "repos_url": "https://api.github.com/users/toyowata/repos",
      "events_url": "https://api.github.com/users/toyowata/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toyowata/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-09-09T09:17:09Z",
    "updated_at": "2013-09-19T07:19:23Z",
    "closed_at": "2013-09-09T15:22:11Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/61",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/61",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/61.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/61.patch"
    },
    "body": "Fixed problem in PWMOUT output issue.\nStartup code cean-up (correced exception names).\nCorrected test cases.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/60",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/60/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/60/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/60/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/60",
    "id": 19172631,
    "number": 60,
    "title": "Fix MASKED_ACCESS bug in gpio_init",
    "user": {
      "login": "jorisa",
      "id": 5098411,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5098411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisa",
      "html_url": "https://github.com/jorisa",
      "followers_url": "https://api.github.com/users/jorisa/followers",
      "following_url": "https://api.github.com/users/jorisa/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisa/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisa/orgs",
      "repos_url": "https://api.github.com/users/jorisa/repos",
      "events_url": "https://api.github.com/users/jorisa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-09-09T02:01:29Z",
    "updated_at": "2014-06-18T13:37:06Z",
    "closed_at": "2013-09-09T08:07:04Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/60",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/60",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/60.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/60.patch"
    },
    "body": "Now same as LPC11xx (Also use PIN_SHIFT instead of magic number 8 in gpio_set)\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/59",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/59/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/59/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/59/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/59",
    "id": 19140468,
    "number": 59,
    "title": "Does serial_clear() disable the FIFO?",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-09-07T08:33:31Z",
    "updated_at": "2013-09-09T09:22:07Z",
    "closed_at": "2013-09-09T09:22:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "As I was code reviewing the serial_api.c source code for the LPC176X port, I noticed the following code in serial_clear():\n\n``` c\nvoid serial_clear(serial_t *obj) {\n    obj->uart->FCR = 1 << 1  // rx FIFO reset\n                   | 1 << 2  // tx FIFO reset\n                   | 0 << 6; // interrupt depth\n}\n```\n\nI never see this API being called from any code in the mbed SDK but if it was called, wouldn't it end up disabling the FIFO as it does not keep bit 0, the FIFO enable bit, set high?\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/58",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/58/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/58/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/58/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/58",
    "id": 19140273,
    "number": 58,
    "title": "serial_putc() to make better use of Tx FIFO",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-09-07T08:26:57Z",
    "updated_at": "2014-06-18T06:58:51Z",
    "closed_at": "2013-10-25T12:46:00Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/58",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/58",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/58.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/58.patch"
    },
    "body": "If don't know if this is an issue that anyone cares about.  I am also\nnot sure what the best way to solve it is either.  I just thought I\nwould issue a pull request with this commit to bring the issue to light\nand show a possible solution that I have tested on my mbed-1768 device.\n\nPreviously the serial_putc() API didn't make any use of the Tx FIFO\nsince the serial_writable() API it utilizes only returns true when the\nFIFO is completely empty.  This is due to the fact that the THRE bit of\nthe UART's LSR (Line Status Register) only goes high when the whole\nFIFO is empty.\n\nI noticed this when doing some performance testing with the network\nstack.  I went from calling printf() to output 3 bytes every 10 seconds\n(with packet drop stats) to instead output 4 bytes every 10 seconds.\nI thought these should easily fit in the 16 byte FIFO but outputting\none extra byte caused an additional three 550 byte UDP packets to be\ndropped.  This should only happen if the additional character being\nsent to the UART was taking away extra CPU cycles from the network\nstack.\n\nMy solution is to keep track of the number of bytes that have been\nplaced in the Tx FIFO since it was last detected as being completely\nempty (via the THRE bit).  Only once this count hits 16 does the code\nthen block, waiting for the THRE bit to go high.  Each time the THRE\nbit does go high, the count is reset to 0 again and it is incremented\nfor each byte that is loaded into the THR.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/57",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/57/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/57/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/57/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/57",
    "id": 19140258,
    "number": 57,
    "title": "serial_putc() can cause rx bytes to be dropped",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-09-07T08:26:25Z",
    "updated_at": "2014-07-01T12:11:39Z",
    "closed_at": "2013-09-09T08:19:30Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/57",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/57",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/57.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/57.patch"
    },
    "body": "While fixing this issue in the various LPC\\* ports, I noticed a comment\npointing to this mbed forum post which summarizes this bug quite well:\n  https://mbed.org/forum/bugs-suggestions/topic/4473/\n\nThis bug was introduced in the following commit:\nhttps://github.com/mbedmicro/mbed/commit/2662e105c43c93986d52713234375b7910acf297\n\nThe following code was added to serial_putc() as part of this commit:\n    uint32_t lsr = obj->uart->LSR;\n    lsr = lsr;\n    uint32_t thr = obj->uart->THR;\n    thr = thr;\n\nAs the forum post indicates, this causes the serial_putc() routine to\nactually eat an inbound received byte if it exists since reading THR is\nreally reading the RBR, the Receiver Buffer Register.  This code looks\nlike code that was probably added so that the developer could take a\nsnapshot of these registers and look at them in the debugger.  It\nprobably got committed in error.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/56",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/56/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/56/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/56/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/56",
    "id": 19122128,
    "number": 56,
    "title": "LPC1768: Attaching callback with only one CAN interface defined causes hardfault",
    "user": {
      "login": "ral613",
      "id": 4238655,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4238655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ral613",
      "html_url": "https://github.com/ral613",
      "followers_url": "https://api.github.com/users/ral613/followers",
      "following_url": "https://api.github.com/users/ral613/following{/other_user}",
      "gists_url": "https://api.github.com/users/ral613/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ral613/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ral613/subscriptions",
      "organizations_url": "https://api.github.com/users/ral613/orgs",
      "repos_url": "https://api.github.com/users/ral613/repos",
      "events_url": "https://api.github.com/users/ral613/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ral613/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-09-06T18:55:11Z",
    "updated_at": "2013-09-11T11:49:48Z",
    "closed_at": "2013-09-11T11:49:48Z",
    "author_association": "NONE",
    "body": "## The Environment\n- Mbed LPC1768 on an Embedded Artists base board.\n- LPCXpresso v5.2.4 [Build 2122].\n- Using CAN2, LEDs and serial I/O interfaces.\n## The Problem\n\nHardfault interrupt on LPC1768 when attaching a callback function to a CAN object and only one CAN object is defined.\n## How to Reproduce\n\nRun the following app on an mbed LPC1768 . Note the blue LEDs of death as HardFault_Handler() is called.\n\n<pre>\n#include \"mbed.h\"\n\nBusOut myleds(LED1, LED2, LED3, LED4);\nCAN can2(p30, p29);\nbool got_message = false;\n\nextern \"C\" void HardFault_Handler ()\n{\n    error(\"Hit HardFault handler!\\r\\n\");\n}\n\nvoid can_callback()\n{\n    got_message = true;\n}\n\nint main()\n{\n    CANMessage msg;\n\n    printf(\"main()\\n\");\n    can2.attach(can_callback, CAN::RxIrq);\n    int i = 0;\n    while(1) {\n        printf(\"loop()\\n\");\n        if (got_message)\n        {\n            got_message = false;\n            can2.read(msg);\n            printf(\"Message received: %d\\n\", msg.data[0]);\n        }\n        wait(0.2);\n        myleds = i++;\n        i %= 16;\n    }\n}\n</pre>\n\n## The Workaround\n\nCreate a second unused CAN object\n\n<pre>\nCAN can1(p9, p10);\n</pre>\n\nand run the app again. The app now works OK.\n## The Cause\n\nChecking IER on both CAN peripheral modules when only one of them is enabled causes a hard fault.\n\nThe error is in function can_irq_set(), at line 167 of file […/mbed/targets/hal/TARGET_NXP/TARGET_LPC176x/can_api.c](https://github.com/mbedmicro/mbed/blob/master/libraries/mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/can_api.c).\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/55",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/55/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/55/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/55/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/55",
    "id": 19070068,
    "number": 55,
    "title": "added extra label because USB device compilation failed, for the target LPC11U24_301",
    "user": {
      "login": "FrankBuss",
      "id": 1707296,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1707296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FrankBuss",
      "html_url": "https://github.com/FrankBuss",
      "followers_url": "https://api.github.com/users/FrankBuss/followers",
      "following_url": "https://api.github.com/users/FrankBuss/following{/other_user}",
      "gists_url": "https://api.github.com/users/FrankBuss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FrankBuss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FrankBuss/subscriptions",
      "organizations_url": "https://api.github.com/users/FrankBuss/orgs",
      "repos_url": "https://api.github.com/users/FrankBuss/repos",
      "events_url": "https://api.github.com/users/FrankBuss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FrankBuss/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-09-05T19:37:18Z",
    "updated_at": "2014-06-23T04:17:52Z",
    "closed_at": "2013-09-06T09:20:50Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/55",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/55",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/55.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/55.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/54",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/54/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/54/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/54/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/54",
    "id": 19022129,
    "number": 54,
    "title": "Added LPC810 support",
    "user": {
      "login": "ytsuboi",
      "id": 246704,
      "avatar_url": "https://avatars3.githubusercontent.com/u/246704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ytsuboi",
      "html_url": "https://github.com/ytsuboi",
      "followers_url": "https://api.github.com/users/ytsuboi/followers",
      "following_url": "https://api.github.com/users/ytsuboi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ytsuboi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ytsuboi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ytsuboi/subscriptions",
      "organizations_url": "https://api.github.com/users/ytsuboi/orgs",
      "repos_url": "https://api.github.com/users/ytsuboi/repos",
      "events_url": "https://api.github.com/users/ytsuboi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ytsuboi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-09-05T04:05:50Z",
    "updated_at": "2014-06-14T16:30:46Z",
    "closed_at": "2013-09-05T14:00:17Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/54",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/54",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/54.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/54.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/53",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/53/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/53/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/53/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/53",
    "id": 18860177,
    "number": 53,
    "title": "USB Serial constructor blocking",
    "user": {
      "login": "larsgk",
      "id": 1014678,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1014678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/larsgk",
      "html_url": "https://github.com/larsgk",
      "followers_url": "https://api.github.com/users/larsgk/followers",
      "following_url": "https://api.github.com/users/larsgk/following{/other_user}",
      "gists_url": "https://api.github.com/users/larsgk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/larsgk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/larsgk/subscriptions",
      "organizations_url": "https://api.github.com/users/larsgk/orgs",
      "repos_url": "https://api.github.com/users/larsgk/repos",
      "events_url": "https://api.github.com/users/larsgk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/larsgk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345068,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20usb",
        "name": "component: usb",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-09-02T11:14:56Z",
    "updated_at": "2017-10-27T19:03:56Z",
    "closed_at": "2017-10-27T19:03:56Z",
    "author_association": "NONE",
    "body": "Because of a blocking connect function in USBDevice ( https://github.com/mbedmicro/mbed/blob/master/libraries/USBDevice/USBDevice/USBDevice.cpp#L711 ) called from the USBCDC constructor ( https://github.com/mbedmicro/mbed/blob/master/libraries/USBDevice/USBSerial/USBCDC.cpp#L34 ), instatiating USB Serial with nothing connected on the actual port blocks execution.\n\nI tried just commenting the while loop out and everything seems to run fine (connect/disconnect and CDC/serial communication with a host computer.\n\nMaybe this should be solved in a different way - but especially when running on battery on KL25Z, this is a problem (the blocking).\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/52",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/52/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/52/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/52/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/52",
    "id": 18833307,
    "number": 52,
    "title": "Using newlib-nano libraries with LPCXpresso",
    "user": {
      "login": "dinau",
      "id": 442455,
      "avatar_url": "https://avatars0.githubusercontent.com/u/442455?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dinau",
      "html_url": "https://github.com/dinau",
      "followers_url": "https://api.github.com/users/dinau/followers",
      "following_url": "https://api.github.com/users/dinau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dinau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dinau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dinau/subscriptions",
      "organizations_url": "https://api.github.com/users/dinau/orgs",
      "repos_url": "https://api.github.com/users/dinau/repos",
      "events_url": "https://api.github.com/users/dinau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dinau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-09-01T07:06:13Z",
    "updated_at": "2014-03-19T11:45:32Z",
    "closed_at": "2014-03-19T11:45:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, all\n\nI've been successful to use the newlib-nano libraries with LPCXpresso compiler (GCC_CR).\nThis is highly experimental,\nbut some simple example programs (\"ticker\" and \"basic\") work well at this moment.\n1. First, needed for the newlib-nano libraries included in \n   Launchpad GCC \n   https://launchpad.net/gcc-arm-embedded\n   I'm using Ver.4.7-2013q2.\n2. Copy the newlib-nano libraries to the library folder of LPCXpresso.\n   Assume that Launchpad GCC root folder name is \"launchpad-gcc-root\" and\n   LPCXpresso root folder name is \"lpxpresso-root\".\n\n(1) nano.specs file\n**[copy]**  launchpad-gcc-root/arm-none-eabi/armv7-m/nano.specs\n**[to]**    lpcxpresso-root/lpcxpresso/tools/arm-none-eabi/lib/\n\n(2) Each libraries\ni.e. for Cortex-M3 micros\n**[copy]**  launchpad-gcc-root/arm-none-eabi/lib/armv7-m/*_s.a\n__[to]__    lpcxpresso-root/lpcxpresso/tools/arm-none-eabi/lib/armv7-m/\n\ni.e. for Cortex-M0 micros\n**[copy]**  launchpad-gcc-root/arm-none-eabi/lib/armv6-m/*_s.a\n__[to]__    lpcxpresso-root/lpcxpresso/tools/arm-none-eabi/lib/armv6-m/\n### Adding \"--specs=nano.specs\" option to the linker script option.\n\n[workspace_tools/toolchains/gcc.py]:\n\n```\n    class GCC_CR(GCC):\n        def __init__(self, target, options=None, notify=None):\n            GCC.__init__(self, target, options, notify, GCC_CR_PATH)\n\n            additional_compiler_flags = [\n                \"-D__NEWLIB__\", \"-D__CODE_RED\", \"-D__USE_CMSIS\", \"-DCPP_USE_HEAP\",\n            ]\n            self.cc += additional_compiler_flags\n            self.cppc += additional_compiler_flags\n            if \"nanolib\" in self.options:\n                # Use latest gcc nanolib\n                self.ld.append(\"--specs=nano.specs\")\n                if target.name in [\"LPC1768\"]:\n                    self.ld.extend([\"-u\", \"_printf_float\", \"-u\", \"_scanf_float\"])\n            self.ld += [\"-nostdlib\"]\n```\n#### Building \"basic\" test program with newlib-nano libraries\n\n```\n    $ workspace_tools/build.py -m LPC1768 -t GCC_CR\n    $ workspace_tools/make.py  -m LPC1768 -t GCC_CR -d. -p 0 -o nanolib\n```\n\ndinau\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/51",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/51/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/51/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/51/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/51",
    "id": 18818911,
    "number": 51,
    "title": "Asm versions of netstack memcpy() and lwip_standard_chksum()",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-08-31T06:06:46Z",
    "updated_at": "2013-09-02T15:48:35Z",
    "closed_at": "2013-09-02T11:05:56Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/51",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/51",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/51.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/51.patch"
    },
    "body": "I just targeted the GCC_ARM toolchain with these changes to minimize\nrisk.  For the same reason, I only targeted this memcpy() to be used by\nthe network stack.\n\nFor tests such as TCPEchoServer\n(http://mbed.org/users/emilmont/notebook/networking-libraries-benchmark/)\nthis change showed a 28% improvement (14Mbps to 18Mbps) when the echo\ntest was modified to instead use 1K data buffers.\n\nI targetted these two functions based on manual profiling samples which\nshowed that a great deal of time was being spent in these two functions\nwhen the network stack was being slammed with UDP packets.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/50",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/50/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/50/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/50/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/50",
    "id": 18818279,
    "number": 50,
    "title": "LPC2368 [GCC_ARM, GCC_CR]: Startup codes",
    "user": {
      "login": "dinau",
      "id": 442455,
      "avatar_url": "https://avatars0.githubusercontent.com/u/442455?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dinau",
      "html_url": "https://github.com/dinau",
      "followers_url": "https://api.github.com/users/dinau/followers",
      "following_url": "https://api.github.com/users/dinau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dinau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dinau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dinau/subscriptions",
      "organizations_url": "https://api.github.com/users/dinau/orgs",
      "repos_url": "https://api.github.com/users/dinau/repos",
      "events_url": "https://api.github.com/users/dinau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dinau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-08-31T04:42:39Z",
    "updated_at": "2013-09-02T10:43:52Z",
    "closed_at": "2013-09-02T10:43:52Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/50",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/50",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/50.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/50.patch"
    },
    "body": "1. Added: GCC_CR toolchain ID for LPC2368. (targets.py)\n2. Modified: Startup codes for GCC_ARM and GCC_CR toolchain.\n3. Verified: \"ticker\" and \"basic\" test program work well, so far.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/49",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/49/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/49/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/49/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/49",
    "id": 18817338,
    "number": 49,
    "title": "Fixed: [GCC_ARM : LPC1768] Issue ignored the linker option for _print_fl...",
    "user": {
      "login": "dinau",
      "id": 442455,
      "avatar_url": "https://avatars0.githubusercontent.com/u/442455?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dinau",
      "html_url": "https://github.com/dinau",
      "followers_url": "https://api.github.com/users/dinau/followers",
      "following_url": "https://api.github.com/users/dinau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dinau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dinau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dinau/subscriptions",
      "organizations_url": "https://api.github.com/users/dinau/orgs",
      "repos_url": "https://api.github.com/users/dinau/repos",
      "events_url": "https://api.github.com/users/dinau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dinau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-31T02:44:10Z",
    "updated_at": "2013-09-02T10:14:11Z",
    "closed_at": "2013-09-02T10:14:11Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/49",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/49",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/49.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/49.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/48",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/48/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/48/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/48/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/48",
    "id": 18816697,
    "number": 48,
    "title": "gcc: Provide _sbrk implementation compatible with RTX",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-08-31T01:40:11Z",
    "updated_at": "2014-06-26T23:32:32Z",
    "closed_at": "2013-09-04T08:12:32Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/48",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/48",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/48.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/48.patch"
    },
    "body": "I verified that the hang issue I was seeing when building and running\nthe mbed official networking tests with GCC_ARM was related to this\nissue reported on the mbed forums:\n    http://mbed.org/forum/mbed/topic/3803/?page=1#comment-18934\n\nIf you are using the 4.7 2013q1 update of GCC_ARM or newer then it\nwill have a _sbrk() implementation which checks the new top of heap\npointer against the current thread SP, stack pointer.\nSee this GCC_ARM related thread for more information:\n    https://answers.launchpad.net/gcc-arm-embedded/+question/218972\nWhen using RTX RTOS threads, the thread's stack pointer can easily\npoint to an address which is below the current top of heap so this\ncheck will incorrectly fail the allocation.\n\nI have added a _sbrk() implementation to the mbed SDK which checks the\nheap pointer against the MSP instead of the current thread SP.  I have\nonly enabled this for TOOLCHAIN_GCC_ARM as this is the only GCC based\ntoolchain that I am sure requires this.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/47",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/47/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/47/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/47/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/47",
    "id": 18773293,
    "number": 47,
    "title": "Get USBHost to build and run with GCC_ARM",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-08-30T06:44:22Z",
    "updated_at": "2013-09-14T00:31:50Z",
    "closed_at": "2013-09-13T19:22:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have made some changes to the USBHost code to get it building with GCC_ARM but I am not confident enough in the changes to issue a pull request.  Instead, I would really appreciate a code review of the changes which can be viewed at the following link: https://github.com/adamgreen/mbed/compare/master...gccFixUSBHost  The commit descriptions contain more details about each of my changes.\n\nWhat I have done for testing so far:\n- Made sure the library builds successfully with GCC_ARM using my makefiles and the official mbed python build scripts.\n- Used GCC_ARM to build and test the USBHostMSD_HelloWorld sample found here-> http://mbed.org/handbook/USBHostMSD.  It ran successfully.\n- I took my updated USBHost library sources and uploaded then into a USBHostMSD_HelloWorld project on the mbed site.  I then built the code using the online compiler and tested the resulting binary.\n- I have used GCC_ARM to build and test USBHostMouse, USBHostKeyboard, USBHostSerial, and USBHostHub samples as found in the mbed Handbook.\n\nThanks and I look forward to your feedback.\n\n-Adam\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/46",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/46/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/46/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/46/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/46",
    "id": 18714007,
    "number": 46,
    "title": "Robustness fixes for netstack",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-08-29T06:24:15Z",
    "updated_at": "2014-08-14T22:34:57Z",
    "closed_at": "2013-08-30T11:47:16Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/46",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/46",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/46.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/46.patch"
    },
    "body": "It turns out that my previous concern about my semaphore token count overflow was well founded.  Pablo was running a HTTP server with those changes and it performed horribly.  It turned out that his server was hosting content from the LocalFileSystem.  The semihost requests to the mbed interface chip for these LocalFileSystem calls halt the CPU and cause it to miss some ethernet interrupts.  With my previous fix attempt this led to the semaphore not being signaled enough times and in the end the ethernet driver started to perform as though it only had once packet receive buffer.  The final result was increased packet loss.  I have removed the semaphore from the receive path in the ethernet driver and switched to a signal.  I also pulled the loop back into packet_rx() which will loop through all available packets when it is awaken by the signal.\n\nThe other changes include:\n- Fully disable LWIP_ASSERTs by defining LWIP_NOASSERT macro in lwipopts.h\n- Reset pbuf length when re-queueing on error. Previously the re-queued buffer size would have been adjusted to the size of the previously received packet instead of the full allocated size of the pbuf object.\n- Enable the SYS_LIGHTWEIGHT_PROT macro in lwipopts.h. This is also a very big change! It turns out that a lot of the global data structures in lwIP weren't being protected by synchronization objects and therefore were not thread safe.\n  Please refer to the commit descriptions for more details on each of those changes.\n\nPablo Gindel has buddy tested these changes with the TCP/UDP code that he is developing.  I have also tested these networking changes with a few samples that I have building with gcc4mbed and also the NET_1 test built and tested with the Python scripts in the mbed tree itself. I would run more of the tests from the mbed build system but they don't seem to work with GCC_ARM due to what I believe is a _sbrk() issue.\n\nThanks for considering these changes!\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/45",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/45/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/45/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/45/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/45",
    "id": 18673202,
    "number": 45,
    "title": "Fixed: The issue of interrupt vector remapping for GCC_ARM LPC1114",
    "user": {
      "login": "dinau",
      "id": 442455,
      "avatar_url": "https://avatars0.githubusercontent.com/u/442455?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dinau",
      "html_url": "https://github.com/dinau",
      "followers_url": "https://api.github.com/users/dinau/followers",
      "following_url": "https://api.github.com/users/dinau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dinau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dinau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dinau/subscriptions",
      "organizations_url": "https://api.github.com/users/dinau/orgs",
      "repos_url": "https://api.github.com/users/dinau/repos",
      "events_url": "https://api.github.com/users/dinau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dinau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-08-28T14:36:27Z",
    "updated_at": "2013-09-13T04:38:37Z",
    "closed_at": "2013-08-29T14:28:17Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/45",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/45",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/45.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/45.patch"
    },
    "body": "Fixed: The issue of interrupt vector remapping for GCC_ARM LPC1114\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/44",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/44/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/44/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/44/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/44",
    "id": 18527032,
    "number": 44,
    "title": "Robustness fixes for netstack",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-08-25T21:22:52Z",
    "updated_at": "2013-08-28T06:53:12Z",
    "closed_at": "2013-08-26T07:42:55Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/44",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/44",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/44.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/44.patch"
    },
    "body": "I welcome feedback on all of the updates included in this request but I would really like to get opinions on one in particular.  Commit 4813d58 contains a fix for an issue that I saw where the maximum token count was exceeded on the semaphore used to communicate between the ethernet ISR and the packet_rx() thread.  My current fix is to have packet_rx() consume only one packet per semaphore signal event instead of multiple as it did before.  I wonder if it would be better to keep the original loop to handle all received packets when the packet_rx() thread is awaken but to use a Signal instead of a Semaphore.  Thoughts?\n\nThe other changes include:\n- Fully disable LWIP_ASSERTs by defining LWIP_NOASSERT macro in lwipopts.h\n- Reset pbuf length when re-queueing on error.  Previously the re-queued buffer size would have been adjusted to the size of the previously received packet instead of the full allocated size of the pbuf object.\n- Enable the SYS_LIGHTWEIGHT_PROT macro in lwipopts.h.  This is also a very big change!  It turns out that a lot of the global data structures in lwIP weren't being protected by synchronization objects and therefore were not thread safe.\n\nPlease refer to the commit descriptions for more details on each of these changes.\n\nI have tested these networking changes with a few samples that I have building with gcc4mbed and also the NET_1 test built and tested with the Python scripts in the mbed tree itself.  I would run more of the tests from the mbed build system but they don't seem to work with GCC_ARM due to what I believe is a _sbrk() issue.\n\nThanks for considering these changes!\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/43",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/43/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/43/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/43/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/43",
    "id": 18449166,
    "number": 43,
    "title": "Updates to GCC warning level flags",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-08-23T01:10:57Z",
    "updated_at": "2013-08-23T17:59:13Z",
    "closed_at": "2013-08-23T09:30:09Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/43",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/43",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/43.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/43.patch"
    },
    "body": "In gcc4mbed, I have been running with \"-Wall -Wextra\" and then\ndisabling a couple of noisy warnings that result.  In particular, I\ndisable the unused-parameter and missing-field-initializers warnings.\nThe first commonly goes off for implementation of virtual methods or\nother overridable functions where not all parameters are required for\nevery override.  I don't find the second warning to be all that useful\nanyway since missing structure field initializers will be set to 0\naccording to the C language specification.  The RTOS code uses this\nlanguage feature and I see no reason that it shouldn't :)\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/42",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/42/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/42/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/42/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/42",
    "id": 18396732,
    "number": 42,
    "title": "USBDevice: Silence GCC warning",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-08-22T06:24:48Z",
    "updated_at": "2014-06-20T23:21:56Z",
    "closed_at": "2013-08-22T08:54:24Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/42",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/42",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/42.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/42.patch"
    },
    "body": "The following line in USBHAL_KL25Z.cpp would generate a warning in GCC\nbecause of a potential operator precendence issue:\n    return((USB0->FRMNUML | (USB0->FRMNUMH << 8) & 0x07FF));\n\nThis would have been interpreted as:\n    return((USB0->FRMNUML | ((USB0->FRMNUMH << 8) & 0x07FF)));\nsince & has higher precedence than |\n\nI switched it to be:\n    return((USB0->FRMNUML | (USB0->FRMNUMH << 8)) & 0x07FF);\nSince it makes more sense to & with 0x7FF after having merged the lower\nand upper bytes together rather than just the upper byte.  It should\nhave resulted in the same value either way.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/41",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/41/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/41/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/41/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/41",
    "id": 18349379,
    "number": 41,
    "title": "[LPC1114] fixed to use IRC and System PLL clock",
    "user": {
      "login": "ytsuboi",
      "id": 246704,
      "avatar_url": "https://avatars3.githubusercontent.com/u/246704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ytsuboi",
      "html_url": "https://github.com/ytsuboi",
      "followers_url": "https://api.github.com/users/ytsuboi/followers",
      "following_url": "https://api.github.com/users/ytsuboi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ytsuboi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ytsuboi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ytsuboi/subscriptions",
      "organizations_url": "https://api.github.com/users/ytsuboi/orgs",
      "repos_url": "https://api.github.com/users/ytsuboi/repos",
      "events_url": "https://api.github.com/users/ytsuboi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ytsuboi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-21T11:51:10Z",
    "updated_at": "2014-07-24T01:29:01Z",
    "closed_at": "2013-08-21T12:25:51Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/41",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/41",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/41.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/41.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/40",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/40/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/40/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/40/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/40",
    "id": 18332061,
    "number": 40,
    "title": "Fixed error handling and cleanup",
    "user": {
      "login": "toyowata",
      "id": 4926755,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4926755?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toyowata",
      "html_url": "https://github.com/toyowata",
      "followers_url": "https://api.github.com/users/toyowata/followers",
      "following_url": "https://api.github.com/users/toyowata/following{/other_user}",
      "gists_url": "https://api.github.com/users/toyowata/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toyowata/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toyowata/subscriptions",
      "organizations_url": "https://api.github.com/users/toyowata/orgs",
      "repos_url": "https://api.github.com/users/toyowata/repos",
      "events_url": "https://api.github.com/users/toyowata/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toyowata/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-21T01:49:21Z",
    "updated_at": "2014-07-03T17:18:56Z",
    "closed_at": "2013-08-21T08:57:52Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/40",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/40",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/40.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/40.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/39",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/39/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/39/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/39/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/39",
    "id": 18279139,
    "number": 39,
    "title": "fs: Silence GCC signed/unsigned warnings",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-20T05:55:33Z",
    "updated_at": "2014-06-01T22:52:52Z",
    "closed_at": "2013-08-20T07:36:08Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/39",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/39",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/39.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/39.patch"
    },
    "body": "The SDFileSystem class contained a few routines which compared a signed\ninteger loop index to an unsigned integer length/size.  I switched the\nloop index to be uint32_t as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/38",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/38/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/38/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/38/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/38",
    "id": 18155019,
    "number": 38,
    "title": "Added LPC1114 support and fixed hard fault",
    "user": {
      "login": "ytsuboi",
      "id": 246704,
      "avatar_url": "https://avatars3.githubusercontent.com/u/246704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ytsuboi",
      "html_url": "https://github.com/ytsuboi",
      "followers_url": "https://api.github.com/users/ytsuboi/followers",
      "following_url": "https://api.github.com/users/ytsuboi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ytsuboi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ytsuboi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ytsuboi/subscriptions",
      "organizations_url": "https://api.github.com/users/ytsuboi/orgs",
      "repos_url": "https://api.github.com/users/ytsuboi/repos",
      "events_url": "https://api.github.com/users/ytsuboi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ytsuboi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-16T12:53:39Z",
    "updated_at": "2013-09-19T07:19:23Z",
    "closed_at": "2013-08-16T12:59:41Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/38",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/38",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/38.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/38.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/37",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/37/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/37/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/37/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/37",
    "id": 18154496,
    "number": 37,
    "title": "Added LPC1114 support and fixed hard fault",
    "user": {
      "login": "ytsuboi",
      "id": 246704,
      "avatar_url": "https://avatars3.githubusercontent.com/u/246704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ytsuboi",
      "html_url": "https://github.com/ytsuboi",
      "followers_url": "https://api.github.com/users/ytsuboi/followers",
      "following_url": "https://api.github.com/users/ytsuboi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ytsuboi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ytsuboi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ytsuboi/subscriptions",
      "organizations_url": "https://api.github.com/users/ytsuboi/orgs",
      "repos_url": "https://api.github.com/users/ytsuboi/repos",
      "events_url": "https://api.github.com/users/ytsuboi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ytsuboi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-08-16T12:38:48Z",
    "updated_at": "2014-06-19T02:07:20Z",
    "closed_at": "2013-08-16T12:52:08Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/37",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/37",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/37.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/37.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/36",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/36/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/36/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/36/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/36",
    "id": 18139939,
    "number": 36,
    "title": "A better way to find and save mbed hid devices",
    "user": {
      "login": "TerryGuo",
      "id": 1544365,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1544365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TerryGuo",
      "html_url": "https://github.com/TerryGuo",
      "followers_url": "https://api.github.com/users/TerryGuo/followers",
      "following_url": "https://api.github.com/users/TerryGuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/TerryGuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TerryGuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TerryGuo/subscriptions",
      "organizations_url": "https://api.github.com/users/TerryGuo/orgs",
      "repos_url": "https://api.github.com/users/TerryGuo/repos",
      "events_url": "https://api.github.com/users/TerryGuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TerryGuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-16T03:30:08Z",
    "updated_at": "2013-08-16T08:59:11Z",
    "closed_at": "2013-08-16T08:59:11Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/36",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/36",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/36.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/36.patch"
    },
    "body": "Previously we remove non-mbed devices from result array while iterating it. The logic is correct, but the iteration and removal can't happen to an array simultaneously in Python. This new approach finds mbed devices and save them into a new array.\n\nPlease help to review and let me know anything that needs further changes. Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/35",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/35/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/35/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/35/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/35",
    "id": 18138593,
    "number": 35,
    "title": "Don't dereference NULL ipaddr in netif_set_ipaddr()",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-08-16T02:20:56Z",
    "updated_at": "2013-08-16T08:23:09Z",
    "closed_at": "2013-08-16T07:27:25Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/35",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/35",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/35.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/35.patch"
    },
    "body": "The code in netif_set_ipaddr would read the memory pointed to by its\nipaddr parameter, even if it was NULL on this line:\n  if ((ip_addr_cmp(ipaddr, &(netif->ip_addr))) == 0) {\nOn the Cortex-M3, it is typically OK to read from address 0 so this\ncode will actually compare the reset stack pointer value to the\ncurrent value in netif->ip_addr.\n\nLater in the code, this same pointer will be used for a second read:\n  ip_addr_set(&(netif->ip_addr), ipaddr);\n\nThe ip_addr_set call will first check to see if the ipaddr is NULL and\nif so, treats it like IP_ADDR_ANY (4 bytes of 0).\n    /*\\* Safely copy one IP address to another (src may be NULL) */\n    #define ip_addr_set(dest, src) ((dest)->addr = \\\n                                        ((src) == NULL ? 0 : \\\n                                        (src)->addr))\n\nThe issue here is that when GCC optimizes this code, it assumes that\nthe first dereference of ipaddr would have thrown an invalid memory\naccess exception and execution would never make it to this second\ndereference.  Therefore it optimizes out the NULL check in ip_addr_set.\n\nThe -fno-delete-null-pointer-checks will disable this optimization and\nis a good thing to use with GCC in general on Cortex-M parts.  I will\nlet the mbed guys make that change to their build system.\n\nI have however corrected the code so that the intent of how to handle a\nNULL ipaddr is more obvious and gets rid of the potential NULL\ndereference.\n\nBy the way, this bug caused connect() to fail in obtaining an\naddress from DHCP.  If I recall correctly from when I first debugged\nthis issue (late last year), I actually saw the initial value of the\nstack pointer being used in the DHCP request as an IP address which\ncaused it to be rejected.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/34",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/34/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/34/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/34/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/34",
    "id": 18116875,
    "number": 34,
    "title": "Added LPC1114 and target for some test cases, Removed SWCLK and SWDIO pins from pinmap",
    "user": {
      "login": "ytsuboi",
      "id": 246704,
      "avatar_url": "https://avatars3.githubusercontent.com/u/246704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ytsuboi",
      "html_url": "https://github.com/ytsuboi",
      "followers_url": "https://api.github.com/users/ytsuboi/followers",
      "following_url": "https://api.github.com/users/ytsuboi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ytsuboi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ytsuboi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ytsuboi/subscriptions",
      "organizations_url": "https://api.github.com/users/ytsuboi/orgs",
      "repos_url": "https://api.github.com/users/ytsuboi/repos",
      "events_url": "https://api.github.com/users/ytsuboi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ytsuboi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-15T17:42:44Z",
    "updated_at": "2013-09-19T07:19:23Z",
    "closed_at": "2013-08-16T08:57:39Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/34",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/34",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/34.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/34.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/33",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/33/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/33/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/33/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/33",
    "id": 18101808,
    "number": 33,
    "title": "Fixups to network code after recent merges.",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-08-15T11:49:35Z",
    "updated_at": "2013-08-15T12:36:44Z",
    "closed_at": "2013-08-15T12:18:14Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/33",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/33",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/33.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/33.patch"
    },
    "body": "Peter's and my changes to LPC1768.ld ended up adding the same AHBSRAM0\nand AHBSRAM1 section clauses to the script twice.  I removed one copy.\n\nI also pulled Peter's define of the ETHMEM_SECTION macro up into the\nprevious nested #if so that the preprocessor wouldn't spit out a\nredefined macro warning.\n\nI verified that building the code clean before and after these changes\nstill results in the same .bin file but now without warnings and/or\nduplicate code.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/32",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/32/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/32/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/32/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/32",
    "id": 18098921,
    "number": 32,
    "title": "Updates to network code to improve performance/robustness",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-08-15T10:12:42Z",
    "updated_at": "2013-08-15T11:50:02Z",
    "closed_at": "2013-08-15T10:51:47Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/32",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/32",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/32.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/32.patch"
    },
    "body": "I started out looking at some UDP receive code that was only able to\nhandle 3 inbound 550 byte datagrams out of 16 when sent in quick\nsuccession.  I stepped through the ethernet driver code and it\nseemed to work as expected but it just couldn't queue up more than\n3 PBUFs for each burst.  It was almost like it was being starved of\nCPU cycles.  Based on that observation, I looked up the thread\npriorities for the receive ethernet thread and found the following\nclose to the top of the lpc17_emac.c source file:\n    #define RX_PRIORITY   (osPriorityNormal)\nThis got me to thinking, what is the priority of the tcp thead?  It\nturns out that it gets its priority from the following line in\nlwipopts.h:\n    #define TCPIP_THREAD_PRIO           1\nInteresting!  What priority is 1?  It turns out that it corresponds\nto osPriorityAboveNormal.  This means that while the tcp thread is\nhandling one packet that has been posted to its mailbox from the\nethernet receive thread, the receive thread is starved from processing\nany more inbound ethernet packets.\n\nWhat happens if we set TCP_IP_THREAD_PRIO to osPriorityNormal?  Crash!\nThe ethernet driver ends up crashing in lpc_low_level_input() when\nit tries to set p->len on a NULL p pointer.  The p pointer ended up\nbeing NULL because an earlier call to pbuf_alloc() in lpc_rx_queue()\nfailed its allocation (I will have more to say about this failed\nallocation later since that is caused by yet another bug).  I pulled a\nfix from http://lpcware.com/content/bugtrackerissue/lpc17xx-mac-bugs to\nremedy this issue.  When the pbuf allocation fails, it discards the\ninbound packet in the pbuf and just puts it back into the rx queue.\nThis means we never end up with a NULL pointer in that queue to\ndereference and crash on.\n\nWith that bug fixed, the application would just appear to hang after\nreceiving and processing a few datagrams.  I could place breakpoints in\nthe packet_rx() thread function and found that it was being signalled\nby the ethernet ISR but it was always failing to allocate new PBUFs,\nwhich is what led to our previous crash.  This means that the new\ncrash prevention code was just discarding every packet that arrived.\n\nWhy are these allocations failing?  In my opinion, this was the most\ninteresting bug to track down.  Is there a memory leak somewhere in\nthe code which maybe only triggers in low memory situations?  I\nfigured the easiest way to determine that would be to learn a bit\nabout the format of the lwIP heap from which the PBUF was failing to\nbe allocated.  I started by just stepping into the failing lwIP memory\nallocator, mem_malloc().  The loop which search the free list starts\nwith this code:\n    for (ptr = (mem_size_t)((u8_t *)lfree - ram);\nThis loop didn't even go through one iteration and when I looked at the\ninitial ptr value it contained a really large value.  It turns out that\nlfree was actually lower than ram.  At this point I figured that lfree\nhad probably been corrupted during a free operation after one of the\nheap allocations had been underflowed/overflowed to cause the metadata\nfor an allocation to be corrupted.  As I started thinking about how to\ntrack that kind of bug down, I noticed that the ram variable might be\ntoo large (0x20080a68).  I restarted the debugger and looked at the\ninitial value.  It was at a nice even address (0x2007c000) and\ncertainly nothing like what I saw when the allocations were failing.\nThis global variable shouldn't change at all during the execution of\nthe program.  I placed a memory access watchpoint on this ram variable\nand it fired very quickly inside of the rt_mbx_send() function.  The\nram variable was being changed by this line in rt_mbx_send():\n    p_MCB->msg[p_MCB->first] = p_msg;\n\nWhat the what?  Why does writing to the mailbox queue overwrite the\nram global variable?  Let's start by looking at the data structure used\nin the lwIP port to target RTX (defined in sys_arch.h):\n// === MAIL BOX ===\n\ntypedef struct {\n    osMessageQId    id;\n    osMessageQDef_t def;\n    uint32_t        queue[MB_SIZE];\n} sys_mbox_t;\n\nCompare that to the utility macro that RTX defines to help setup one of\nthese mailboxes with queue:\n    #define osMessageQDef(name, queue_sz, type)   \\\n    uint32_t os_messageQ_q_##name[4+(queue_sz)]; \\\n    osMessageQDef_t os_messageQ_def_##name = \\\n    { (queue_sz), (os_messageQ_q_##name) }\nNote the 4+(queue_sz) used in the definition of the message queue\narray.  What a hack!  The RTX OS requires an extra 16 bytes to contain\nits OS_MCB header and this is how it adds it in.  Obviously the\nsys_mbox_t structure used in the lwIP OS targetting code doesn't have\nthis.  Without it, the RTX mailbox routines end up scribbling on\nmemory following the structure in memory.  Adding 4 in that structure\nfixes the memory allocation failure that I was seeing and now the network\nstack can handle between 7 and 10 datagrams within a burst.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/31",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/31/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/31/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/31/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/31",
    "id": 18089779,
    "number": 31,
    "title": "Update LPC1768 linker script and silence GNU warnings in network stack",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-08-15T03:55:44Z",
    "updated_at": "2014-06-14T14:31:07Z",
    "closed_at": "2013-08-15T09:55:51Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/31",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/31",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/31.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/31.patch"
    },
    "body": "I updated the LPC1768 linker script to place AHBSRAM0 and AHBSRAM1 sections of data into the correct regions of memory.  Without these changes, the networking code would try to place all of the lwIP data in the lower 32K and fail to link due to overflow.\n\nI also made a few changes to the networking code to silence various GCC warnings which were emitted at -Wall -Wextra level.  I broke these changes down into separate commits and give more description for each of them in their associated commit descriptions.\n\nPlease let me know if there is anything you would like me to modify and I can issue a new pull request with the desired modifications.\n\nThanks,\n\nAdam\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/30",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/30/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/30/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/30/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/30",
    "id": 18076559,
    "number": 30,
    "title": "Experimental fix for issue #29 ",
    "user": {
      "login": "pbrier",
      "id": 852828,
      "avatar_url": "https://avatars0.githubusercontent.com/u/852828?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pbrier",
      "html_url": "https://github.com/pbrier",
      "followers_url": "https://api.github.com/users/pbrier/followers",
      "following_url": "https://api.github.com/users/pbrier/following{/other_user}",
      "gists_url": "https://api.github.com/users/pbrier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pbrier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pbrier/subscriptions",
      "organizations_url": "https://api.github.com/users/pbrier/orgs",
      "repos_url": "https://api.github.com/users/pbrier/repos",
      "events_url": "https://api.github.com/users/pbrier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pbrier/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-08-14T20:59:56Z",
    "updated_at": "2013-08-15T10:24:36Z",
    "closed_at": "2013-08-15T10:24:36Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/30",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/30",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/30.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/30.patch"
    },
    "body": "Experimental fix for Issue #29 \"Network is not supported by GCC_ARM toolchain\"\nThis adds the required RAM segment, the gnu++11 compiler flag (and a minor change to \"libraries/tests/mbed/env/test_env.cpp\" not to break compilation). \n\nNetwork tests (Test 77...) are confirmed to work on original MBED device.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/29",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/29/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/29/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/29/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/29",
    "id": 18076306,
    "number": 29,
    "title": "Network is not supported by GCC_ARM toolchain",
    "user": {
      "login": "pbrier",
      "id": 852828,
      "avatar_url": "https://avatars0.githubusercontent.com/u/852828?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pbrier",
      "html_url": "https://github.com/pbrier",
      "followers_url": "https://api.github.com/users/pbrier/followers",
      "following_url": "https://api.github.com/users/pbrier/following{/other_user}",
      "gists_url": "https://api.github.com/users/pbrier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pbrier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pbrier/subscriptions",
      "organizations_url": "https://api.github.com/users/pbrier/orgs",
      "repos_url": "https://api.github.com/users/pbrier/repos",
      "events_url": "https://api.github.com/users/pbrier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pbrier/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-08-14T20:54:47Z",
    "updated_at": "2013-08-15T11:27:15Z",
    "closed_at": "2013-08-15T11:27:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Compilation of the network library (e.g. for LPC1768) is not possible with the GCC_ARM compiler, due to code incompatibilities (required gnu++11) and missing ETH ram segment in linker script\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/28",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/28/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/28/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/28/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/28",
    "id": 18061912,
    "number": 28,
    "title": "Chaining in Ticker - switched arguments [fix]",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-14T16:24:01Z",
    "updated_at": "2015-06-09T11:48:16Z",
    "closed_at": "2013-08-15T07:36:59Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/28",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/28",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/28.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/28.patch"
    },
    "body": "Ticker - switched arguments fix\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/27",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/27/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/27/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/27/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/27",
    "id": 18060518,
    "number": 27,
    "title": "Fixed some problem around LPC1114 porting",
    "user": {
      "login": "ytsuboi",
      "id": 246704,
      "avatar_url": "https://avatars3.githubusercontent.com/u/246704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ytsuboi",
      "html_url": "https://github.com/ytsuboi",
      "followers_url": "https://api.github.com/users/ytsuboi/followers",
      "following_url": "https://api.github.com/users/ytsuboi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ytsuboi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ytsuboi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ytsuboi/subscriptions",
      "organizations_url": "https://api.github.com/users/ytsuboi/orgs",
      "repos_url": "https://api.github.com/users/ytsuboi/repos",
      "events_url": "https://api.github.com/users/ytsuboi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ytsuboi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-14T15:59:24Z",
    "updated_at": "2013-09-19T07:19:23Z",
    "closed_at": "2013-08-14T16:05:52Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/27",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/27",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/27.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/27.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/26",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/26/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/26/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/26/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/26",
    "id": 18035896,
    "number": 26,
    "title": "Eth static mac address",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-14T05:36:08Z",
    "updated_at": "2015-06-09T11:50:13Z",
    "closed_at": "2013-08-14T10:16:35Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/26",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/26",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/26.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/26.patch"
    },
    "body": "Hello,\n\nhere's the mac static address implementation. There is MBED_MAC_ADDRESS_SUM which is a summatory of the entire mac address, if it's zero then use uid interface mac adress, otherwise set the one which is defined by macros MBED_MAC_ADDR_x .\n\nRegards,\n0xc0170\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/25",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/25/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/25/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/25/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/25",
    "id": 17989767,
    "number": 25,
    "title": "RTOS does not honour SystemCoreClock and related CMSIS clocking setup",
    "user": {
      "login": "hugovincent",
      "id": 208043,
      "avatar_url": "https://avatars1.githubusercontent.com/u/208043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugovincent",
      "html_url": "https://github.com/hugovincent",
      "followers_url": "https://api.github.com/users/hugovincent/followers",
      "following_url": "https://api.github.com/users/hugovincent/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugovincent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugovincent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugovincent/subscriptions",
      "organizations_url": "https://api.github.com/users/hugovincent/orgs",
      "repos_url": "https://api.github.com/users/hugovincent/repos",
      "events_url": "https://api.github.com/users/hugovincent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugovincent/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-08-13T10:39:29Z",
    "updated_at": "2013-08-15T16:43:14Z",
    "closed_at": "2013-08-15T16:43:14Z",
    "author_association": "NONE",
    "body": "The mbed-rtos library does not use or honour SystemCoreClock and is not responsive to changes in SystemCoreClock at run time. To change the core frequency, you must first change the registers and call SystemCoreClockUpdate() mechanism, but then you must update #define OS_CLOCK in mbed-rtos/rtx/RTX_Conf_CM.c. Obviously the later can't be done by code at run time, and this makes run-time clock changes impossible. This furthermore makes the RTOS almost impossible to use in a energy-constrained application. I realise fixing this properly is non-trivial, but I would urge you to find a good solution rather than a quick one. \n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/24",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/24/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/24/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/24/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/24",
    "id": 17986627,
    "number": 24,
    "title": "Update mbed SDK sources to silence GCC warnings",
    "user": {
      "login": "adamgreen",
      "id": 1060664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1060664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreen",
      "html_url": "https://github.com/adamgreen",
      "followers_url": "https://api.github.com/users/adamgreen/followers",
      "following_url": "https://api.github.com/users/adamgreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreen/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreen/orgs",
      "repos_url": "https://api.github.com/users/adamgreen/repos",
      "events_url": "https://api.github.com/users/adamgreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-13T09:17:15Z",
    "updated_at": "2013-08-14T03:32:00Z",
    "closed_at": "2013-08-13T10:04:43Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/24",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/24",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/24.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/24.patch"
    },
    "body": "When building the GNU tools for ARM Embedded toolchain, I use the -Wall -Wextra flags.  This was causing a few warnings to be emitted when building the mbed SDK sources.  I have gone through the code and eliminated these warnings when building it for LPC176X, LPC11UXX, and KL25Z.\n\nMost of the changes were related to two issues:\n- Enumerations (ie. ADCName, PinName, etc) would be compared to constants that had been cast to uint32_t instead of the correct enumeration type.  These enumerations can be smaller than 32-bit when compiled by GCC so a warning was thrown.  Were these cast to uint32_t to satisfy another compiler?\n- GCC throws warnings when there is a mismatch between the signs of the values used within a comparison.  In most of these cases, I cast the signed integer to be unsigned.  Someone more familiar with the code should probably check to see if this results in the expected behaviour.\n- Added .DS_Store to .gitignore so that it would ignore the files that OS X drops in every directory that I happen to open up in the Finder.\n\nI have more information in the individual commit descriptions themselves.\n\nLet me know if you want me to modify anything in these commits and I will resubmit with the requested modifications.\n\n-Adam\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/23",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/23/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/23/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/23/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/23",
    "id": 17805461,
    "number": 23,
    "title": "Updated pin mapping and CAN HAL impl for LPC4088 target",
    "user": {
      "login": "arebert",
      "id": 4437887,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4437887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arebert",
      "html_url": "https://github.com/arebert",
      "followers_url": "https://api.github.com/users/arebert/followers",
      "following_url": "https://api.github.com/users/arebert/following{/other_user}",
      "gists_url": "https://api.github.com/users/arebert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arebert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arebert/subscriptions",
      "organizations_url": "https://api.github.com/users/arebert/orgs",
      "repos_url": "https://api.github.com/users/arebert/repos",
      "events_url": "https://api.github.com/users/arebert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arebert/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-08T13:09:51Z",
    "updated_at": "2014-08-16T12:17:08Z",
    "closed_at": "2013-08-08T13:53:34Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/23",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/23",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/23.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/23.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/22",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/22/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/22/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/22/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/22",
    "id": 17736047,
    "number": 22,
    "title": "PWM Patch Pull Request",
    "user": {
      "login": "matthewelse",
      "id": 759697,
      "avatar_url": "https://avatars0.githubusercontent.com/u/759697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewelse",
      "html_url": "https://github.com/matthewelse",
      "followers_url": "https://api.github.com/users/matthewelse/followers",
      "following_url": "https://api.github.com/users/matthewelse/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewelse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewelse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewelse/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewelse/orgs",
      "repos_url": "https://api.github.com/users/matthewelse/repos",
      "events_url": "https://api.github.com/users/matthewelse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewelse/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-07T08:46:02Z",
    "updated_at": "2014-07-24T11:58:38Z",
    "closed_at": "2013-08-07T09:20:51Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/22",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/22",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/22.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/22.patch"
    },
    "body": "Hi Emilio,\n\nHere's a PWM update to the LPC1114 and the LPC11C24 that makes it work better :)\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/21",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/21/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/21/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/21/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/21",
    "id": 17709819,
    "number": 21,
    "title": "KL25Z adc channels A",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-06T19:33:12Z",
    "updated_at": "2015-06-09T11:48:35Z",
    "closed_at": "2013-08-07T09:14:36Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/21",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/21",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/21.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/21.patch"
    },
    "body": "The bonus point pull request :-)\n\nRegards,\n0xc0170\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/20",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/20/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/20/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/20/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/20",
    "id": 17691517,
    "number": 20,
    "title": "CAN-Related Pull Request",
    "user": {
      "login": "matthewelse",
      "id": 759697,
      "avatar_url": "https://avatars0.githubusercontent.com/u/759697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewelse",
      "html_url": "https://github.com/matthewelse",
      "followers_url": "https://api.github.com/users/matthewelse/followers",
      "following_url": "https://api.github.com/users/matthewelse/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewelse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewelse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewelse/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewelse/orgs",
      "repos_url": "https://api.github.com/users/matthewelse/repos",
      "events_url": "https://api.github.com/users/matthewelse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewelse/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-06T14:01:49Z",
    "updated_at": "2014-07-05T02:35:30Z",
    "closed_at": "2013-08-06T14:15:15Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/20",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/20",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/20.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/20.patch"
    },
    "body": "Hi Emilio,\n\nThis pull request includes:\n- Refactored CAN code (by Joris)\n- Basic support for the LPC11C24 (Not yet including CAN)\n\nIf you don't yet want to include the LPC11C24 (it does work, just not with CAN), I think `git cherrypick` may be \nthe one you want to use. The most important parts are the changes from the following commits:\n1. 2c45596: Initial refactoring of CAN HAL\n2. bf02700: Includes the refactoring of CAN HAL\n3. 6cf35db: CAN Test 30 Fix\n4. 714daff: CAN Test 31 Fix\n\nAs these include the refactoring of the CAN HAL, as well as the tests that Joris added (and my edit to make them work :wink:)\n\nIf the order makes a difference, they should each be added in the order listed.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/19",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/19/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/19/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/19/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/19",
    "id": 17668890,
    "number": 19,
    "title": "RAM too big with LPC11U24.ld linker file",
    "user": {
      "login": "FrankBuss",
      "id": 1707296,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1707296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FrankBuss",
      "html_url": "https://github.com/FrankBuss",
      "followers_url": "https://api.github.com/users/FrankBuss/followers",
      "following_url": "https://api.github.com/users/FrankBuss/following{/other_user}",
      "gists_url": "https://api.github.com/users/FrankBuss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FrankBuss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FrankBuss/subscriptions",
      "organizations_url": "https://api.github.com/users/FrankBuss/orgs",
      "repos_url": "https://api.github.com/users/FrankBuss/repos",
      "events_url": "https://api.github.com/users/FrankBuss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FrankBuss/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2013-08-06T01:22:46Z",
    "updated_at": "2013-08-12T08:12:56Z",
    "closed_at": "2013-08-09T16:31:11Z",
    "author_association": "NONE",
    "body": "I've modified targets.py so that I can compile the mbed libraries with ARM GCC for my LPC11U24 microcontroller. There was a problem in the LPC11U24.ld linker script, which caused interesting problems. I have the LPC11U24FBD48/301 microcontroller. Note the \"/301\" and see the datasheet (UM10462, Rev. 4.1 — 19 July 2013, page 15). It has 6 kB SRAM, starting at 0x1000 0000. The datasheet says the /401 version has 8 kB SRAM, starting at 0x1000 1800. Maybe would be good if I could specify this for the \"-m\" parameter for the make.py and build.py scripts.\nThe new line in LPC11U24.ld, which seems to work (at least no funny 0-bytes anymore when trying a printf(\"%i\", 123)) :\nRAM (rwx) : ORIGIN = 0x100000C0, LENGTH = 0x1740\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/18",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/18/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/18/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/18/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/18",
    "id": 17646202,
    "number": 18,
    "title": "Kl25z arm gcc",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-05T17:12:46Z",
    "updated_at": "2015-06-09T11:48:25Z",
    "closed_at": "2013-08-05T18:21:28Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/18",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/18",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/18.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/18.patch"
    },
    "body": "Hello guys,\n\nplease review my branch and if possible merge it into master.\n\nThere are 2 features:\n1. GCC ARM for KL25Z\n2. KL25Z all available mux options added to drivers (as requested in the mbed bug section)\n\nRegards,\n0xc0170\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/17",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/17/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/17/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/17/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/17",
    "id": 17554688,
    "number": 17,
    "title": "LPC1114 Port Pull Request",
    "user": {
      "login": "matthewelse",
      "id": 759697,
      "avatar_url": "https://avatars0.githubusercontent.com/u/759697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewelse",
      "html_url": "https://github.com/matthewelse",
      "followers_url": "https://api.github.com/users/matthewelse/followers",
      "following_url": "https://api.github.com/users/matthewelse/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewelse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewelse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewelse/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewelse/orgs",
      "repos_url": "https://api.github.com/users/matthewelse/repos",
      "events_url": "https://api.github.com/users/matthewelse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewelse/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-08-02T10:55:32Z",
    "updated_at": "2014-07-10T01:48:41Z",
    "closed_at": "2013-08-02T15:56:44Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/17",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/17",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/17.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/17.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/16",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/16/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/16/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/16/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/16",
    "id": 17203611,
    "number": 16,
    "title": "Issue building the SD Card test in ARM toolchain",
    "user": {
      "login": "matthewelse",
      "id": 759697,
      "avatar_url": "https://avatars0.githubusercontent.com/u/759697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewelse",
      "html_url": "https://github.com/matthewelse",
      "followers_url": "https://api.github.com/users/matthewelse/followers",
      "following_url": "https://api.github.com/users/matthewelse/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewelse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewelse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewelse/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewelse/orgs",
      "repos_url": "https://api.github.com/users/matthewelse/repos",
      "events_url": "https://api.github.com/users/matthewelse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewelse/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-25T10:08:06Z",
    "updated_at": "2013-07-25T10:23:16Z",
    "closed_at": "2013-07-25T10:23:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is a problem building the SD Card test using:\n\n```\npython workspace_tools\\make.py -t ARM -m LPC1768 -n MBED_A12\n```\n\nWhen I compile this in ARM, it throws up lots of errors,\n\n```\n[ERROR] Error: L6218E: Undefined symbol gpio_init (referred from test_env.o).\nError: L6218E: Undefined symbol wait (referred from test_env.o).\nError: L6218E: Undefined symbol mbed::SPI::write(int) (referred from SDFileSyste\nm.o).\nError: L6218E: Undefined symbol mbed::SPI::frequency(int) (referred from SDFileS\nystem.o).\nError: L6218E: Undefined symbol mbed::SPI::SPI(PinName, PinName, PinName) (refer\nred from SDFileSystem.o).\nError: L6218E: Undefined symbol wait_ms (referred from SDFileSystem.o).\nError: L6218E: Undefined symbol typeinfo for mbed::FileSystemLike (referred from\n FATFileSystem.o).\nError: L6218E: Undefined symbol mbed::FileHandle::~FileHandle__sub_object() (ref\nerred from FATFileHandle.o).\nError: L6218E: Undefined symbol typeinfo for mbed::FileHandle (referred from FAT\nFileHandle.o).\nError: L6218E: Undefined symbol vtable for mbed::FileHandle (referred from FATFi\nleHandle.o).\nError: L6218E: Undefined symbol mbed::FileSystemLike::FileSystemLike__sub_object\n(const char*) (referred from FATFileSystem.o).\nError: L6218E: Undefined symbol mbed::FileSystemLike::~FileSystemLike__sub_objec\nt() (referred from FATFileSystem.o).\n```\n\nOn the other hand, when I use GCC_ARM, there are no errors when building for the LPC1768\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/15",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/15/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/15/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/15/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/15",
    "id": 17201459,
    "number": 15,
    "title": "ARM and uARM will conflict with build.py",
    "user": {
      "login": "ytsuboi",
      "id": 246704,
      "avatar_url": "https://avatars3.githubusercontent.com/u/246704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ytsuboi",
      "html_url": "https://github.com/ytsuboi",
      "followers_url": "https://api.github.com/users/ytsuboi/followers",
      "following_url": "https://api.github.com/users/ytsuboi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ytsuboi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ytsuboi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ytsuboi/subscriptions",
      "organizations_url": "https://api.github.com/users/ytsuboi/orgs",
      "repos_url": "https://api.github.com/users/ytsuboi/repos",
      "events_url": "https://api.github.com/users/ytsuboi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ytsuboi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-07-25T09:24:41Z",
    "updated_at": "2013-07-25T16:51:59Z",
    "closed_at": "2013-07-25T16:51:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Issue #14 was not solved.\nHere is procedure.\n1. workspace_tools\\build.py --clean -r -m xxxx -t ARM\n2. workspace_tools\\build.py --clean -r -m xxxx -t uARM\n3. make.py -m xxxx -t uARM -p 32\n4. make.py -m xxxx -t ARM -p 32\n\nSo, you will get error message like this.\n\n```\nBuild Options: debug-info\n\n>>> BUILD PROJECT: BASIC (xxxx, ARM)\nLink: basic\n[ERROR] Error: L6267E: Input objects request both standardlib and microlib. Please choose using the --library_type option.\nFinished: 0 information, 0 warning and 1 error messages.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/14",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/14/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/14/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/14/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/14",
    "id": 17159298,
    "number": 14,
    "title": "ARM and uARM will conflict with build.py",
    "user": {
      "login": "ytsuboi",
      "id": 246704,
      "avatar_url": "https://avatars3.githubusercontent.com/u/246704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ytsuboi",
      "html_url": "https://github.com/ytsuboi",
      "followers_url": "https://api.github.com/users/ytsuboi/followers",
      "following_url": "https://api.github.com/users/ytsuboi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ytsuboi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ytsuboi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ytsuboi/subscriptions",
      "organizations_url": "https://api.github.com/users/ytsuboi/orgs",
      "repos_url": "https://api.github.com/users/ytsuboi/repos",
      "events_url": "https://api.github.com/users/ytsuboi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ytsuboi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-07-24T14:16:07Z",
    "updated_at": "2013-07-25T09:24:41Z",
    "closed_at": "2013-07-24T16:41:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "1)\nARM and uARM shares same directory to store temporary object files for target specific APIs. Therefore, we have to clean binaries (trash \"build\" folder manually) before change to another target touching.\n\n2)\nWe want \"trash build folder\" option for build.py\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/13",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/13/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/13/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/13/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/13",
    "id": 16471141,
    "number": 13,
    "title": "building problem",
    "user": {
      "login": "mbambagini",
      "id": 3033251,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3033251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mbambagini",
      "html_url": "https://github.com/mbambagini",
      "followers_url": "https://api.github.com/users/mbambagini/followers",
      "following_url": "https://api.github.com/users/mbambagini/following{/other_user}",
      "gists_url": "https://api.github.com/users/mbambagini/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mbambagini/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mbambagini/subscriptions",
      "organizations_url": "https://api.github.com/users/mbambagini/orgs",
      "repos_url": "https://api.github.com/users/mbambagini/repos",
      "events_url": "https://api.github.com/users/mbambagini/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mbambagini/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-07-08T13:33:53Z",
    "updated_at": "2013-07-08T15:03:29Z",
    "closed_at": "2013-07-08T15:03:29Z",
    "author_association": "NONE",
    "body": "Hi,\nI would like to report the problem I had during the building:\nTraceback (most recent call last):\n  File \"workspace_tools/build.py\", line 14, in <module>\n    from workspace_tools.targets import TARGET_NAMES, TARGET_MAP\n  File \"/home/mario/mbed/mbed/workspace_tools/targets.py\", line 176, in <module>\n    LPC4330(),\nNameError: name 'LPC4330' is not defined\n\nAfter commenting line 176 in target.py, the building works.\n\nThanks\n\nbye\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/12",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/12/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/12/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/12/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/12",
    "id": 16453983,
    "number": 12,
    "title": "Update targets and pins for LPC43xx",
    "user": {
      "login": "micromint",
      "id": 4627366,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4627366?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micromint",
      "html_url": "https://github.com/micromint",
      "followers_url": "https://api.github.com/users/micromint/followers",
      "following_url": "https://api.github.com/users/micromint/following{/other_user}",
      "gists_url": "https://api.github.com/users/micromint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micromint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micromint/subscriptions",
      "organizations_url": "https://api.github.com/users/micromint/orgs",
      "repos_url": "https://api.github.com/users/micromint/repos",
      "events_url": "https://api.github.com/users/micromint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micromint/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-07-08T03:39:48Z",
    "updated_at": "2014-06-23T22:15:37Z",
    "closed_at": "2013-07-08T08:09:58Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/12",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/12",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/12.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/12.patch"
    },
    "body": "Hi,Emilio.\n\nThis pull request updates the target and pin names for the LPC43xx port. Only two files were updated:\n\nworkspace_tools/targets.py: Substituted LPC4330 for LPC4330_M4, LPC4330_M0 and LPC1800. Support for M0 and M3 targets is still in development.\n\nlibraries/mbed/targets/hal/TARGET_NXP/TARGET_LPC43XX/PinNames.h: Corrected 3 MCU pin identifiers and added alternate GPIO pin names (GPIOx_yy) to the enumeration. MCU and GPIO pins are not equivalent on this processor family.\n\nThanks,\nJesus Alvarez\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/11",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/11/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/11/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/11/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/11",
    "id": 16374306,
    "number": 11,
    "title": "Freedom kl05",
    "user": {
      "login": "0xc0170",
      "id": 2963726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2963726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xc0170",
      "html_url": "https://github.com/0xc0170",
      "followers_url": "https://api.github.com/users/0xc0170/followers",
      "following_url": "https://api.github.com/users/0xc0170/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xc0170/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xc0170/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xc0170/subscriptions",
      "organizations_url": "https://api.github.com/users/0xc0170/orgs",
      "repos_url": "https://api.github.com/users/0xc0170/repos",
      "events_url": "https://api.github.com/users/0xc0170/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xc0170/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-04T16:14:40Z",
    "updated_at": "2015-06-09T11:48:43Z",
    "closed_at": "2013-07-04T16:29:56Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/11",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/11",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/11.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/11.patch"
    },
    "body": "Hello,\n\nplease merge a branch freedomKL05. It contains KL05Z target for Freedom KL05 board. Thank you.\n\nc0170\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/10",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/10/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/10/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/10/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/10",
    "id": 16314831,
    "number": 10,
    "title": "Add debug-info option",
    "user": {
      "login": "oampo",
      "id": 623112,
      "avatar_url": "https://avatars0.githubusercontent.com/u/623112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oampo",
      "html_url": "https://github.com/oampo",
      "followers_url": "https://api.github.com/users/oampo/followers",
      "following_url": "https://api.github.com/users/oampo/following{/other_user}",
      "gists_url": "https://api.github.com/users/oampo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oampo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oampo/subscriptions",
      "organizations_url": "https://api.github.com/users/oampo/orgs",
      "repos_url": "https://api.github.com/users/oampo/repos",
      "events_url": "https://api.github.com/users/oampo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oampo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-03T12:21:22Z",
    "updated_at": "2013-07-03T13:40:42Z",
    "closed_at": "2013-07-03T13:40:42Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/10",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/10",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/10.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/10.patch"
    },
    "body": "Generates debug information when compiling the libraries.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/9",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/9/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/9/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/9/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/9",
    "id": 16255843,
    "number": 9,
    "title": "Fix setting STM32 GPIO input/output mode.",
    "user": {
      "login": "oampo",
      "id": 623112,
      "avatar_url": "https://avatars0.githubusercontent.com/u/623112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oampo",
      "html_url": "https://github.com/oampo",
      "followers_url": "https://api.github.com/users/oampo/followers",
      "following_url": "https://api.github.com/users/oampo/following{/other_user}",
      "gists_url": "https://api.github.com/users/oampo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oampo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oampo/subscriptions",
      "organizations_url": "https://api.github.com/users/oampo/orgs",
      "repos_url": "https://api.github.com/users/oampo/repos",
      "events_url": "https://api.github.com/users/oampo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oampo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-02T09:40:41Z",
    "updated_at": "2014-08-04T02:13:59Z",
    "closed_at": "2013-07-02T09:44:29Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/9",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/9",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/9.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/9.patch"
    },
    "body": "Tiny fix so the previous changes to remove target dependant code in the core work correctly.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/8",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/8/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/8/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/8/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/8",
    "id": 16031696,
    "number": 8,
    "title": "Start to STM32F4XX port",
    "user": {
      "login": "oampo",
      "id": 623112,
      "avatar_url": "https://avatars0.githubusercontent.com/u/623112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oampo",
      "html_url": "https://github.com/oampo",
      "followers_url": "https://api.github.com/users/oampo/followers",
      "following_url": "https://api.github.com/users/oampo/following{/other_user}",
      "gists_url": "https://api.github.com/users/oampo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oampo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oampo/subscriptions",
      "organizations_url": "https://api.github.com/users/oampo/orgs",
      "repos_url": "https://api.github.com/users/oampo/repos",
      "events_url": "https://api.github.com/users/oampo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oampo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-06-26T13:38:51Z",
    "updated_at": "2014-06-15T08:43:43Z",
    "closed_at": "2013-06-26T14:14:50Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/8",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/8",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/8.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/8.patch"
    },
    "body": "Initial porting includes:\n- GPIOs\n- Port APIs\n- Analog In\n- SPI master/slave\n- I2C Master\n- wait()\n\nThere are a couple of potentially iffy bits here which I'll do my best to draw attention to:\n1. I don't have any hardware to test SPI slave with, but it's pretty much zero extra code, so I've included it here as I think that there's a fair chance that it will just work.\n2. The way pins work on the STM32FXXX chips is slightly different to the way they do on the LPC1768 (which I've been using as reference).  Pins have both a mode (input, output, analog etc), and an alternative function which selects which peripheral they are controlling.  In order to accommodate this I've had to add an #ifdefed field and function in the core pinmap code, which is pretty ugly.\n3. I'm using __builtin_ffs in the SPI code, which I guess will break for non-GCC compilers.  What's the correct way to do this?\n4. The startup code comes from STM, under a funky license.  I would learn/rewrite this, but I don't really fancy spending days bricking and unbricking devices by messing up the PLL settings.  Perhaps a nicely worded email to STM would suffice?\n5. The startup code assumes an 8Mhz crystal, which I guess should be an option somewhere.\n\nOn second glance, that's starting to look like quite a long list of iffy bits :grinning:.  Anyway, this should at least act as a jumping off point for getting this merged.\n\nJoe\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/7",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/7/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/7/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/7/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/7",
    "id": 15936837,
    "number": 7,
    "title": "LPC43xx port from Micromint",
    "user": {
      "login": "micromint",
      "id": 4627366,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4627366?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micromint",
      "html_url": "https://github.com/micromint",
      "followers_url": "https://api.github.com/users/micromint/followers",
      "following_url": "https://api.github.com/users/micromint/following{/other_user}",
      "gists_url": "https://api.github.com/users/micromint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micromint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micromint/subscriptions",
      "organizations_url": "https://api.github.com/users/micromint/orgs",
      "repos_url": "https://api.github.com/users/micromint/repos",
      "events_url": "https://api.github.com/users/micromint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micromint/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-06-24T17:31:48Z",
    "updated_at": "2014-06-14T10:15:29Z",
    "closed_at": "2013-06-25T09:47:10Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/7",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/7",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/7.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/7.patch"
    },
    "body": "This is an mbed port to the LPC43xx tested with the Micromint Bambino 200. Some details are available in the README file\n\nmbed/libraries/mbed/vendor/NXP/LPC43XX/README.txt\n\nThis port is still in development. Besides bug fixes there are two major changes planned for the next few weeks:\n1. Support for Ethernet, USB and microSD filesystems when the Bambino 200E is shipping.\n2. Use the mbed SDK with the slave M0 core.We can build mbed M0 binaries (using an external project file) but some changes are required in the startup so they can be started from the master M4 core.\n\nRegards,\nJesus Alvarez\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6",
    "id": 15742264,
    "number": 6,
    "title": "Use correct setting for -mfpu when building for Cortex-M4 targets, and add a setting for using hard or soft floating point.",
    "user": {
      "login": "oampo",
      "id": 623112,
      "avatar_url": "https://avatars0.githubusercontent.com/u/623112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oampo",
      "html_url": "https://github.com/oampo",
      "followers_url": "https://api.github.com/users/oampo/followers",
      "following_url": "https://api.github.com/users/oampo/following{/other_user}",
      "gists_url": "https://api.github.com/users/oampo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oampo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oampo/subscriptions",
      "organizations_url": "https://api.github.com/users/oampo/orgs",
      "repos_url": "https://api.github.com/users/oampo/repos",
      "events_url": "https://api.github.com/users/oampo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oampo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-06-19T12:40:40Z",
    "updated_at": "2013-07-02T09:47:53Z",
    "closed_at": "2013-06-19T12:57:28Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6.patch"
    },
    "body": "Change discussed in https://groups.google.com/forum/#!topic/mbed-devel/didoeCqf3fI\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/5/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/5",
    "id": 14393017,
    "number": 5,
    "title": "Add support for NXP LPC4088",
    "user": {
      "login": "arebert",
      "id": 4437887,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4437887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arebert",
      "html_url": "https://github.com/arebert",
      "followers_url": "https://api.github.com/users/arebert/followers",
      "following_url": "https://api.github.com/users/arebert/following{/other_user}",
      "gists_url": "https://api.github.com/users/arebert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arebert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arebert/subscriptions",
      "organizations_url": "https://api.github.com/users/arebert/orgs",
      "repos_url": "https://api.github.com/users/arebert/repos",
      "events_url": "https://api.github.com/users/arebert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arebert/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-16T06:59:45Z",
    "updated_at": "2018-04-24T10:04:16Z",
    "closed_at": "2013-05-21T17:14:03Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/5",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/5",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/5.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/5.patch"
    },
    "body": "Support has been added for the NXP LPC4088. This has been tested on Embedded Artists LPC4088 Developer's Kit.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/4/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/4",
    "id": 14381728,
    "number": 4,
    "title": "FAO Emilio",
    "user": {
      "login": "jasongaunt",
      "id": 2588259,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2588259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongaunt",
      "html_url": "https://github.com/jasongaunt",
      "followers_url": "https://api.github.com/users/jasongaunt/followers",
      "following_url": "https://api.github.com/users/jasongaunt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongaunt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongaunt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongaunt/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongaunt/orgs",
      "repos_url": "https://api.github.com/users/jasongaunt/repos",
      "events_url": "https://api.github.com/users/jasongaunt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongaunt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-15T22:05:00Z",
    "updated_at": "2014-07-17T04:17:03Z",
    "closed_at": "2013-05-22T10:01:07Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/4",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/4",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/4.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/4.patch"
    },
    "body": "Note! There are a lot of assumptions and bad coding ahoy, review\nthoroughly and expect not to be complete!\n\nThis version has most of the core files updates to support the LPC1788\nand appears to compile with both mbed python scripts and Keil uVision\nset to use the ARM-EABI-NONE- toolchain (although only with a lot of\nwrestling), however it fails the basic test with Keil (Hard Fault when\ncalling wait_usec), I suspect this is an issue with the JTAG interface\nas it only simulates Timers 0 and 1, whereas wait uses Timer 3. The\nbinary compiled with the mbed python scripts just appears to hang doing\nnothing.\n\nHopefully Emilio and the team can make more sense of this.\n- Jason\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/3/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/3",
    "id": 13576879,
    "number": 3,
    "title": "Fix NXP unfiltered analog in compile error.",
    "user": {
      "login": "oampo",
      "id": 623112,
      "avatar_url": "https://avatars0.githubusercontent.com/u/623112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oampo",
      "html_url": "https://github.com/oampo",
      "followers_url": "https://api.github.com/users/oampo/followers",
      "following_url": "https://api.github.com/users/oampo/following{/other_user}",
      "gists_url": "https://api.github.com/users/oampo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oampo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oampo/subscriptions",
      "organizations_url": "https://api.github.com/users/oampo/orgs",
      "repos_url": "https://api.github.com/users/oampo/repos",
      "events_url": "https://api.github.com/users/oampo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oampo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-04-24T08:59:34Z",
    "updated_at": "2013-07-02T09:48:17Z",
    "closed_at": "2013-04-24T12:48:54Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/3",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/3",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/3.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/3.patch"
    },
    "body": "There is a typo which prevents the NXP analog in from compiling when median filtering is disabled.  This is a quick one-liner to fix that.\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/2/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/2",
    "id": 13087715,
    "number": 2,
    "title": "Gcc arm fix for USB device library",
    "user": {
      "login": "pbrier",
      "id": 852828,
      "avatar_url": "https://avatars0.githubusercontent.com/u/852828?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pbrier",
      "html_url": "https://github.com/pbrier",
      "followers_url": "https://api.github.com/users/pbrier/followers",
      "following_url": "https://api.github.com/users/pbrier/following{/other_user}",
      "gists_url": "https://api.github.com/users/pbrier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pbrier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pbrier/subscriptions",
      "organizations_url": "https://api.github.com/users/pbrier/orgs",
      "repos_url": "https://api.github.com/users/pbrier/repos",
      "events_url": "https://api.github.com/users/pbrier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pbrier/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-04-11T20:31:59Z",
    "updated_at": "2014-07-07T08:53:14Z",
    "closed_at": "2013-04-16T09:42:31Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/2",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/2",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/2.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/2.patch"
    },
    "body": "fixes USB device library. (Does not yet fix USBHost drivers)\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/1/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/1",
    "id": 12878008,
    "number": 1,
    "title": "Build USB libs with GCC_ARM",
    "user": {
      "login": "pbrier",
      "id": 852828,
      "avatar_url": "https://avatars0.githubusercontent.com/u/852828?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pbrier",
      "html_url": "https://github.com/pbrier",
      "followers_url": "https://api.github.com/users/pbrier/followers",
      "following_url": "https://api.github.com/users/pbrier/following{/other_user}",
      "gists_url": "https://api.github.com/users/pbrier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pbrier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pbrier/subscriptions",
      "organizations_url": "https://api.github.com/users/pbrier/orgs",
      "repos_url": "https://api.github.com/users/pbrier/repos",
      "events_url": "https://api.github.com/users/pbrier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pbrier/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-04-06T13:52:58Z",
    "updated_at": "2013-08-14T20:52:16Z",
    "closed_at": "2013-04-16T09:38:16Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/1",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/1",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/1.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/1.patch"
    },
    "body": "build USB libs with GCC_ARM\n"
  }
]
