[
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6811",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6811/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6811/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6811/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6811",
    "id": 320099091,
    "number": 6811,
    "title": "mbed-block Equivalent?",
    "user": {
      "login": "AGlass0fMilk",
      "id": 350500,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AGlass0fMilk",
      "html_url": "https://github.com/AGlass0fMilk",
      "followers_url": "https://api.github.com/users/AGlass0fMilk/followers",
      "following_url": "https://api.github.com/users/AGlass0fMilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/AGlass0fMilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AGlass0fMilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AGlass0fMilk/subscriptions",
      "organizations_url": "https://api.github.com/users/AGlass0fMilk/orgs",
      "repos_url": "https://api.github.com/users/AGlass0fMilk/repos",
      "events_url": "https://api.github.com/users/AGlass0fMilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AGlass0fMilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-05-03T22:16:56Z",
    "updated_at": "2018-05-04T15:33:23Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n---------------------------------------------------------------\r\n## Question\r\n\r\nThis concerns the now 3-year-old mbed-block module (https://github.com/ARMmbed/mbed-block). I like the idea of shared pointers and dynamically allocated memory blocks that deallocate themselves when lost. This is what I assume the library takes care of. I'm currently reading through the ble-ancs-client example (https://github.com/ARMmbed/ble-ancs-client) and it makes use of this library. It seams really useful for creating portable BLE services.\r\n\r\nIs there any equivalent currently being used in mbed-os officially?\r\n\r\n@marcuschangarm \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6804",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6804/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6804/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6804/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6804",
    "id": 319928960,
    "number": 6804,
    "title": "[NRF52] implicit functions delcarations `app_util_disable_irq` cluttering compilation",
    "user": {
      "login": "drahnr",
      "id": 667047,
      "avatar_url": "https://avatars1.githubusercontent.com/u/667047?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drahnr",
      "html_url": "https://github.com/drahnr",
      "followers_url": "https://api.github.com/users/drahnr/followers",
      "following_url": "https://api.github.com/users/drahnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/drahnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drahnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drahnr/subscriptions",
      "organizations_url": "https://api.github.com/users/drahnr/orgs",
      "repos_url": "https://api.github.com/users/drahnr/repos",
      "events_url": "https://api.github.com/users/drahnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drahnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-05-03T13:49:40Z",
    "updated_at": "2018-05-04T15:48:52Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNRF52\r\n\r\n```\r\n[Warning] nordic_critical.c@38,5: implicit declaration of function 'app_util_disable_irq'; did you mean '__disable_irq'? [-Wimplicit-function-declaration]\r\n[Warning] nordic_critical.c@52,5: implicit declaration of function 'app_util_enable_irq'; did you mean '__enable_irq'? [-Wimplicit-function-declaration]\r\n[Error] nordic_critical.c@59,13: 'state_saved' undeclared (first use in this function)\r\n[Warning] nordic_critical.c@60,1: control reaches end of non-void function [-Wreturn-type]\r\n[ERROR] ./mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/nordic_critical.c: In function 'hal_critical_section_enter':\r\n./mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/nordic_critical.c:38:5: warning: implicit declaration of function 'app_util_disable_irq'; did you mean '__disable_irq'? [-Wimplicit-function-declaration]\r\n     app_util_disable_irq();\r\n     ^~~~~~~~~~~~~~~~~~~~\r\n     __disable_irq\r\n./mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/nordic_critical.c: In function 'hal_critical_section_exit':\r\n./mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/nordic_critical.c:52:5: warning: implicit declaration of function 'app_util_enable_irq'; did you mean '__enable_irq'? [-Wimplicit-function-declaration]\r\n     app_util_enable_irq();\r\n     ^~~~~~~~~~~~~~~~~~~\r\n     __enable_irq\r\n./mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/nordic_critical.c: In function 'hal_in_critical_section':\r\n./mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/nordic_critical.c:59:13: error: 'state_saved' undeclared (first use in this function)\r\n     return (state_saved != 0);\r\n             ^~~~~~~~~~~\r\n./mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/nordic_critical.c:59:13: note: each undeclared identifier is reported only once for each function it appears in\r\n./mbed-os/targets/TARGET_NORDIC/TARGET_NRF5/nordic_critical.c:60:1: warning: control reaches end of non-void function [-Wreturn-type]\r\n }\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6803",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6803/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6803/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6803/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6803",
    "id": 319919965,
    "number": 6803,
    "title": "Wise 1510 uart config",
    "user": {
      "login": "chuanga",
      "id": 29720664,
      "avatar_url": "https://avatars2.githubusercontent.com/u/29720664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chuanga",
      "html_url": "https://github.com/chuanga",
      "followers_url": "https://api.github.com/users/chuanga/followers",
      "following_url": "https://api.github.com/users/chuanga/following{/other_user}",
      "gists_url": "https://api.github.com/users/chuanga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chuanga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chuanga/subscriptions",
      "organizations_url": "https://api.github.com/users/chuanga/orgs",
      "repos_url": "https://api.github.com/users/chuanga/repos",
      "events_url": "https://api.github.com/users/chuanga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chuanga/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147112891,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20review",
        "name": "needs: review",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-05-03T13:26:20Z",
    "updated_at": "2018-05-25T09:35:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6803",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6803",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6803.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6803.patch"
    },
    "body": "### Description\r\n\r\n<!-- \r\n    make console uart port configurable via mbed_app.json file\r\n-->\r\n\r\n\r\n### Pull request type\r\n\r\n<!-- \r\n    \r\n-->\r\n    [X] Fix\r\n    [ ] Refactor\r\n    [ ] New target\r\n    [ ] Feature\r\n    [ ] Breaking change\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6802",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6802/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6802/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6802/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6802",
    "id": 319918091,
    "number": 6802,
    "title": "[NRF52] rng does not build for non softdevice target",
    "user": {
      "login": "drahnr",
      "id": 667047,
      "avatar_url": "https://avatars1.githubusercontent.com/u/667047?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drahnr",
      "html_url": "https://github.com/drahnr",
      "followers_url": "https://api.github.com/users/drahnr/followers",
      "following_url": "https://api.github.com/users/drahnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/drahnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drahnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drahnr/subscriptions",
      "organizations_url": "https://api.github.com/users/drahnr/orgs",
      "repos_url": "https://api.github.com/users/drahnr/repos",
      "events_url": "https://api.github.com/users/drahnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drahnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-05-03T13:21:46Z",
    "updated_at": "2018-05-09T18:29:05Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Bug\r\n- Related issue: `#abc`\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNRF52_DK without SOFTDEVICE\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Expected behavior**\r\n\r\nThere is no \r\n#include \"app_fifo.h\"\r\nin the file tree, while it is still included here:\r\nhttps://github.com/ARMmbed/mbed-os/blob/ed1703392869441f779d203d834eded987747164/targets/TARGET_NORDIC/TARGET_NRF5/TARGET_SDK11/drivers_nrf/rng/nrf_drv_rng.c#L26\r\n\r\n**Actual behavior**\r\n\r\nShould just compile.\r\n\r\n**Steps to reproduce**\r\n\r\nUpdate from 5.7.4 to 5.8.3"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6790",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6790/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6790/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6790/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6790",
    "id": 319490297,
    "number": 6790,
    "title": "EasyCellularConnection fails to connect without debugging",
    "user": {
      "login": "vidavidorra",
      "id": 12871315,
      "avatar_url": "https://avatars1.githubusercontent.com/u/12871315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vidavidorra",
      "html_url": "https://github.com/vidavidorra",
      "followers_url": "https://api.github.com/users/vidavidorra/followers",
      "following_url": "https://api.github.com/users/vidavidorra/following{/other_user}",
      "gists_url": "https://api.github.com/users/vidavidorra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vidavidorra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vidavidorra/subscriptions",
      "organizations_url": "https://api.github.com/users/vidavidorra/orgs",
      "repos_url": "https://api.github.com/users/vidavidorra/repos",
      "events_url": "https://api.github.com/users/vidavidorra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vidavidorra/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-05-02T10:04:55Z",
    "updated_at": "2018-05-22T08:52:05Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n\r\n**Target**\r\nCustom target for STM32F205RG (see [here](https://github.com/withthegrid/mbed-os/tree/wtg-mbed-os/targets/TARGET_STM/TARGET_STM32F2/TARGET_STM32F205RG)\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n7.2.1 20170904\r\n\r\n**mbed-cli version:** \r\n1.5.0\r\n\r\n**mbed-os sha:**\r\nFork from mbed-os (192a8e5094bf5eb2ecebc8c0dc5470bb157c790f)\r\nActual used sha from the fork ([9f3347e](https://github.com/withthegrid/mbed-os/tree/9f3347ee258e67eee88fa3f1066098e1dc8b974e))\r\n\r\n**Expected behavior**\r\nLike EasyCellularConnection, connection in around 20 seconds or giving an error return after around 60 seconds if I recall the behaviour correctly.\r\n\r\n**Actual behavior**\r\nUsing the `EasyCellularConnection`, because the `OnboardCellularInterface` is going to be deprecated in 5.9.0. When using the OnboardCellularInterface, making the connection generally takes around 20 seconds but with the EasyCellularConnection this takes somewhere between 40 and 120 seconds or does not connect at all without any apparent reason. When it does not connect at all, it blocks the program without returning anything.\r\nThe strangest thing is that when I initialise EasyCellularConnection with debugging on (passing `true` as argument to the constructor) the connection is repeatedly made in around 20 seconds, the same behaviour as when I use OnboardCellularInterface.\r\nSince this only happens when I don't use the debugging, I cannot really add any logging here about the behaviour when it doesn't connect and blocks.\r\n\r\nI've added the debug log of EasyCellularConnection with debugging on in case that might be any help. The `onboard_modem...` and `CellularModem` are debugging I've added in the low-level cellular implementation of our target and shows the same behaviour as when I use OnboardCellularInterface. \r\n\r\n```\r\n[Connection] Creating cellular interface...\r\nEasyCellularConnection::connect()\r\n . onboard_modem_init()\r\n    CellularModemInit()\r\n    CellularModemPowerEnable()\r\n . onboard_modem_power_up()\r\n    CellularModemPulsePowerOn()\r\n\r\n----------readable----------: 1\r\n¸\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\nA\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\nA\r\n----------buff----------\r\n\r\n----------readable----------: 5\r\nATE0A\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\nA\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\nA\r\n----------buff----------\r\n\r\n----------readable----------: 2\r\nAT\r\n----------readable----------\r\n\r\n----------readable----------: 3\r\nATE\r\n----------readable----------\r\n\r\n----------readable----------: 5\r\nATE0\r\n----------readable----------\r\n\r\n----------readable----------: 14\r\nATE0\r\n\r\nERROR\r\n\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 6\r\n\r\nOK\r\n\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 6\r\n\r\nOK\r\n\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 16\r\n\r\nu-blox\r\n\r\nOK\r\n\r\n----------readable----------\r\n\r\n----------read_string buff:----------\r\nu-blox\r\n\r\nOK\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 13\r\n\r\nSARA-G350\r\n\r\n----------readable----------\r\n\r\n----------read_string buff:----------\r\nSARA-G350\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 6\r\n\r\nOK\r\n\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 15\r\n\r\n08.90\r\n\r\nOK\r\n\r\n----------readable----------\r\n\r\n----------read_string buff:----------\r\n08.90\r\n\r\nOK\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 16\r\n\r\n+CPIN: READY\r\n\r\n----------readable----------\r\n\r\n----------read_string buff:----------\r\nREADY\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 6\r\n\r\nOK\r\n\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 6\r\n\r\nOK\r\n\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 16\r\n\r\n+CGREG: 2,5,\"0\r\n----------readable----------\r\n\r\n----------read_string buff:----------\r\n2,5,\"0\r\n----------buff----------\r\n\r\n----------read_string buff:----------\r\n5,\"0\r\n----------buff----------\r\n\r\n----------read_string buff:----------\r\n\"0\r\n----------buff----------\r\n\r\n----------readable----------: 16\r\n0DE\",\"F544\"\r\n\r\nO\r\n----------readable----------\r\n\r\n----------read_string buff:----------\r\n\"F544\"\r\n\r\nO\r\n----------buff----------\r\n\r\n----------readable----------: 3\r\nK\r\n\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 6\r\n\r\nOK\r\n\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 16\r\n\r\n+CGATT: 1\r\n\r\nO\r\n----------readable----------\r\n\r\n----------read_string buff:----------\r\n1\r\n\r\nO\r\n----------buff----------\r\n\r\n----------readable----------: 3\r\nK\r\n\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 6\r\n\r\nOK\r\n\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 6\r\n\r\nOK\r\n\r\n----------readable----------\r\n\r\n----------readable----------: 1\r\n\r\n----------readable----------\r\n\r\n----------resp buff:----------\r\n\r\n----------buff----------\r\n\r\n----------readable----------: 11\r\n\r\nCONNECT\r\n\r\n----------readable----------\r\n    stack ( start: 20009848 end: 2000C848 size: 00003000 used: 00000890 ) thread ( id: 2000C89C entry: 08063819 name: main_thread )\r\n    stack ( start: 20004280 end: 20004480 size: 00000200 used: 00000070 ) thread ( id: 200041EC entry: 0806395D name: unknown )\r\n    stack ( start: 2000F210 end: 20010210 size: 00001000 used: 00000378 ) thread ( id: 2000140C entry: 080187D9 name: tcpip_thread )\r\n    stack ( start: 20004480 end: 20004780 size: 00000300 used: 00000098 ) thread ( id: 20004234 entry: 08068805 name: unknown )\r\n    stack ( start: 200103B0 end: 200109B0 size: 00000600 used: 00000278 ) thread ( id: 20010360 entry: 08068D3B name: application_unnamed_thread )\r\n    stack ( start: 2000E1E0 end: 2000F1E0 size: 00001000 used: 00000C80 ) thread ( id: 2000E190 entry: 08068D3B name: application_unnamed_thread )\r\n     heap ( start: 2000CB5C end: 2001FC00 size: 000130A4 used: 00000000 )  alloc ( ok: 00000000  fail: 00000000 )\r\nisr_stack ( start: 2001FC00 end: 20020000 size: 00000400 used: 00000400 )\r\n[Connection] Connected to Network successfully\r\n[Connection] IP address 10.9.115.62\r\n```\r\n\r\n**Steps to reproduce**\r\nI've added the code here. Note that I use the `OnboardCellularInterface` here, which is a typedef to `EasyCellularConnection` because I have `CELLULAR_DEVICE` defined as `UBLOX_PPP` in `features/cellular/framework/common/CellularTargets.h`\r\n\r\n```c++\r\n#include \"mbed.h\"\r\n#include \"OnboardCellularInterface.h\"\r\n\r\nint main() {\r\n    OnboardCellularInterface cellular(false);\r\n//    EasyCellularConnection cellular;\r\n\r\n    PRINTF(\"[Connection] Creating cellular interface...\\n\");\r\n    cellular.set_sim_pin(MBED_CONF_APP_CELLULAR_SIM_PIN);\r\n    cellular.set_credentials(MBED_CONF_APP_CELLULAR_APN, MBED_CONF_APP_CELLULAR_USERNAME, MBED_CONF_APP_CELLULAR_PASSWORD);\r\n\r\n    int connect_success = cellular.connect();\r\n    NetworkInterface* network_interface = &cellular;\r\n\r\n    if(connect_success == 0) {\r\n        printf(\"[Connection] Connected to Network successfully\\n\");\r\n\r\n        const char *ip_addr  = network_interface->get_ip_address();\r\n        if (ip_addr == NULL) {\r\n            printf(\"[Connection] ERROR - No IP address\\n\");\r\n        } else {\r\n            printf(\"[Connection] IP address %s\\n\", ip_addr);\r\n        }\r\n    } else {\r\n        printf(\"[Connection] Connection to Network Failed %d!\\n\", connect_success);\r\n    }\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6789",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6789/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6789/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6789/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6789",
    "id": 319480436,
    "number": 6789,
    "title": "create core dump when crashed ",
    "user": {
      "login": "netanelgonen",
      "id": 17008964,
      "avatar_url": "https://avatars3.githubusercontent.com/u/17008964?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/netanelgonen",
      "html_url": "https://github.com/netanelgonen",
      "followers_url": "https://api.github.com/users/netanelgonen/followers",
      "following_url": "https://api.github.com/users/netanelgonen/following{/other_user}",
      "gists_url": "https://api.github.com/users/netanelgonen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/netanelgonen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/netanelgonen/subscriptions",
      "organizations_url": "https://api.github.com/users/netanelgonen/orgs",
      "repos_url": "https://api.github.com/users/netanelgonen/repos",
      "events_url": "https://api.github.com/users/netanelgonen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/netanelgonen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-05-02T09:34:37Z",
    "updated_at": "2018-05-07T13:43:19Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement \r\n- Priority: Major \r\n\r\n## Enhancement\r\nif the application that runs mbed-os crashes it will be great if mbed-os will create a full core dump.\r\nincluding the memory map and full stack. as close as possible to what is availbe in Linux\r\nhttps://wiki.archlinux.org/index.php/Core_dump\r\n \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6782",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6782/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6782/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6782/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6782",
    "id": 319177208,
    "number": 6782,
    "title": "Update SPI hal API",
    "user": {
      "login": "ithinuel",
      "id": 4605303,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4605303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ithinuel",
      "html_url": "https://github.com/ithinuel",
      "followers_url": "https://api.github.com/users/ithinuel/followers",
      "following_url": "https://api.github.com/users/ithinuel/following{/other_user}",
      "gists_url": "https://api.github.com/users/ithinuel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ithinuel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ithinuel/subscriptions",
      "organizations_url": "https://api.github.com/users/ithinuel/orgs",
      "repos_url": "https://api.github.com/users/ithinuel/repos",
      "events_url": "https://api.github.com/users/ithinuel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ithinuel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 144902129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20work",
        "name": "needs: work",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 24,
    "created_at": "2018-05-01T11:35:52Z",
    "updated_at": "2018-05-21T09:59:44Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6782",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6782",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6782.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6782.patch"
    },
    "body": "### Description\r\n\r\nThis PR bring a new and *well defined* SPI api at HAL level.\r\n\r\nThis disables SPI for all targets as tests needs to be added & all low-level drivers needs to be re-qualified against these tests.\r\n\r\n### Pull request type\r\n\r\n    [ ] Fix\r\n    [ ] Refactor\r\n    [ ] New target\r\n    [x] Feature\r\n    [ ] Breaking change\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6770",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6770/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6770/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6770/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6770",
    "id": 318623461,
    "number": 6770,
    "title": "Support the KW40Z by back porting the KW41Z?",
    "user": {
      "login": "tesseract241",
      "id": 15526505,
      "avatar_url": "https://avatars3.githubusercontent.com/u/15526505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tesseract241",
      "html_url": "https://github.com/tesseract241",
      "followers_url": "https://api.github.com/users/tesseract241/followers",
      "following_url": "https://api.github.com/users/tesseract241/following{/other_user}",
      "gists_url": "https://api.github.com/users/tesseract241/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tesseract241/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tesseract241/subscriptions",
      "organizations_url": "https://api.github.com/users/tesseract241/orgs",
      "repos_url": "https://api.github.com/users/tesseract241/repos",
      "events_url": "https://api.github.com/users/tesseract241/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tesseract241/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-04-28T10:25:02Z",
    "updated_at": "2018-05-04T13:57:51Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "\r\n- Type: Enhancement | Question\r\n\r\nThe KW40Z is a fundamental part of the HEXIWEAR module, providing it with bluetooth functionality and touch buttons, its only physical input, but is only supported right now through a binary built in IAR Embedded Workbench for ARM that provides pre-determined functionalities.\r\nThe KW41Z is a (partly) supported component by mbed-os which shares many hardware features with the KW40Z.\r\n\r\nIs it possible to make use of the KW41Z target as a starting point to add a KW40Z target?\r\n\r\nIf it's easy enough and there's a guide for it, I might even attempt it myself, but I've never touched mbed or rtos internal code.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6767",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6767/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6767/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6767/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6767",
    "id": 318410918,
    "number": 6767,
    "title": "missed out on \"fire_interrupt\"",
    "user": {
      "login": "maciejbocianski",
      "id": 17130713,
      "avatar_url": "https://avatars0.githubusercontent.com/u/17130713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maciejbocianski",
      "html_url": "https://github.com/maciejbocianski",
      "followers_url": "https://api.github.com/users/maciejbocianski/followers",
      "following_url": "https://api.github.com/users/maciejbocianski/following{/other_user}",
      "gists_url": "https://api.github.com/users/maciejbocianski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maciejbocianski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maciejbocianski/subscriptions",
      "organizations_url": "https://api.github.com/users/maciejbocianski/orgs",
      "repos_url": "https://api.github.com/users/maciejbocianski/repos",
      "events_url": "https://api.github.com/users/maciejbocianski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maciejbocianski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-04-27T13:32:11Z",
    "updated_at": "2018-05-18T06:46:05Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Bug catched while #6515 testing on NUCLEO_F746ZG and ARM compiler on CI\r\n\r\nThe problem arises from different time base used in our hal and target implementation.\r\nHAL ticker `hal/mbed_ticker_api.c` use `[us]` while target implementation `targets/TARGET_STM/lp_ticker.c` use `[ticks]` (on this target `1[tick] == 61[us]`)\r\n\r\nFails catched in #6515 is the case when we try to set interrupt with time `now + 3[tick]`. \r\nDue to interrupt setting last `3[tick]` it's not fired. But hopefully `_ticker_match_interval_passed`\r\nshould catch this but it doesn't\r\n\r\nWhile comparing `cur_tick >= match_tick` in `_ticker_match_interval_passed` in `us` it fails.\r\nTime read from `ticker->interface->read()` is count in 61us intervals thus the problem.\r\n\r\nSo when ticker frequency is much less then 1MHz the then `cur_tick != match_tick` will be almost always true and `_ticker_match_interval_passed` won't trigger off\r\n```\r\nprev_tick ==10306438[us]\r\ncur_tick==10306621[us]\r\nmatch_tick==10306642[us]\r\n\r\n10306621[us] == 168961[tick]\r\n10306642[us] == 168961[tick]\r\n```\r\n\r\nThis problem is not present in new HAL API since it use ticks instead us.\r\n\r\nhttps://github.com/ARMmbed/mbed-os/blob/c8d72c524dd7ac1b537bd5fe230572cb703f0532/hal/mbed_ticker_api.c#L246-L251\r\n\r\nPotential fix, add additional check `((match_tick - cur_tick) <= lp_TickPeriod_us)`:\r\n```cpp\r\nuint32_t lp_TickPeriod_us;\r\nint _ticker_match_interval_passed(timestamp_t prev_tick, timestamp_t cur_tick, timestamp_t match_tick)\r\n{\r\n    if (match_tick > prev_tick) {\r\n        return (cur_tick >= match_tick) || ((match_tick - cur_tick) <= lp_TickPeriod_us) || (cur_tick < prev_tick);\r\n    } else {\r\n        return (cur_tick < prev_tick) && (cur_tick >= match_tick);\r\n    }\r\n}\r\n```\r\n\r\n### Description\r\n- Type: Bug\r\n- Related issue: `#6515`\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO_F746ZG|likely all\r\n\r\n**Toolchain:**\r\nARM\r\n\r\n**Toolchain version:**\r\n\r\n**mbed-cli version:** \r\n1.2.0\r\n\r\n**mbed-os sha:**\r\n8b660eb3e Ticker test: Add ticker_irq_handler call because the time reaching the previous interrupt_timestamp would have triggered one anyway\r\nbfb28a7a8 Only schedule mbed_ticker interrupt if queue->head is changed\r\n6634e4606 (origin/master, origin/HEAD, master) Merge pull request #6547 from marcuschangarm/feature-nrf52\r\nb964420bb Reorganize targets.json for NRF52 based targets\r\n\r\n**DAPLink version:**\r\n\r\n**Expected behavior**\r\ntest_multi_ticker should pass\r\n\r\n**Actual behavior**\r\ntest_multi_ticker test is failing\r\n\r\n**Steps to reproduce**\r\n\r\nGet mbed master and Apply #6515\r\nthen run: \r\nmbed test -t ARM -m NUCLEO_F746ZG -n tests-mbed_drivers-lp_ticker -vv --profile develop_ci\r\nwhere `develop_ci` is `develop` profile plus flags used on CI: `\"-DMBED_TRAP_ERRORS_ENABLED=1\",\r\n                   \"-DMBED_HEAP_STATS_ENABLED=1\", \"-DMBED_STACK_STATS_ENABLED=1\"`\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6766",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6766/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6766/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6766/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6766",
    "id": 318391043,
    "number": 6766,
    "title": "HardFault while connecting with ESP8266(mbed Client example)",
    "user": {
      "login": "prvthkr",
      "id": 31398919,
      "avatar_url": "https://avatars2.githubusercontent.com/u/31398919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prvthkr",
      "html_url": "https://github.com/prvthkr",
      "followers_url": "https://api.github.com/users/prvthkr/followers",
      "following_url": "https://api.github.com/users/prvthkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/prvthkr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prvthkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prvthkr/subscriptions",
      "organizations_url": "https://api.github.com/users/prvthkr/orgs",
      "repos_url": "https://api.github.com/users/prvthkr/repos",
      "events_url": "https://api.github.com/users/prvthkr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prvthkr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-04-27T12:28:06Z",
    "updated_at": "2018-05-22T12:49:44Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Question\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Question\r\n\r\n**Target**\r\nK64F |  Custom target\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n6.3.1 20170215 (release) [ARM/embedded-6-branch revision 245512]\r\n\r\n**mbed-cli version:** \r\n1.5.1\r\n\r\n**Expected behavior**\r\nESP8266 should be connect to network.\r\n\r\n**Actual behavior**\r\nHardFault is happing while calling easy_connect function.\r\n\r\n`Starting mbed Client example\r\n[EasyConnect] IPv4 mode\r\n[EasyConnect] Using WiFi (ESP8266)\r\n[EasyConnect] Connecting to WiFi W03_48765\r\n\r\n```\r\nStarting mbed Client example\r\n[EasyConnect] IPv4 mode\r\n[EasyConnect] Using WiFi (ESP8266)\r\n[EasyConnect] Connecting to WiFi W03_48765\r\n\r\n++ MbedOS Fault Handler ++\r\n\r\nFaultType: HardFault\r\n\r\nContext:\r\nR0   : 200011D4\r\nR1   : FFFFFFFF\r\nR2   : 00000001\r\nR3   : 20000478\r\nR4   : 200011D4\r\nR5   : FFFFFFFF\r\nR6   : 00000001\r\nR7   : 20000FB8\r\nR8   : 00000008\r\nR9   : 20007677\r\nR10  : 00000005\r\nR11  : 00035AB6\r\nR12  : 00023D05\r\nSP   : 2002FFC0\r\nLR   : 00022A1D\r\nPC   : 200011D4\r\nxPSR : 810E600B\r\nPSP  : 200075B0\r\nMSP  : 2002FFA0\r\nCPUID: 410FC241\r\nHFSR : 40000000\r\nMMFSR: 00000000\r\nBFSR : 00000000\r\nUFSR : 00000002\r\nDFSR : 00000008\r\nAFSR : 00000000\r\nSHCSR: 00000080\r\nMode : Handler\r\nPriv : Privileged\r\nStack: MSP\r\n\r\nThread Info:\r\nCurrent:\r\nState: 00000002 EntryFn: 000227BD Stack Size: 00001000 Mem: 200068E0 SP: 20007558\r\nNext:\r\nState: 00000002 EntryFn: 000227BD Stack Size: 00001000 Mem: 200068E0 SP: 20007558\r\nWait Threads:\r\nState: 00000083 EntryFn: 00025211 Stack Size: 00000300 Mem: 20005C70 SP: 20005F08\r\n```\r\n\r\n**Steps to reproduce**\r\nSame code I'm using with K64F. Everything is working properly.\r\nlike I'm able to connect with network ticker is incrementing etc.\r\n \r\nBut in my target it's giving hardfault. only thing I changed that is pin no. of UART pins.\r\nMy target has 192KB : RAM and 512KB : ROM.\r\n\r\nIs this application is possible with this much of RAM(192KB) and ROM(512KB)?\r\n\r\nAnd I'm  trying to connect with the [mbed connector](https://connector.mbed.com)."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6759",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6759/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6759/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6759/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6759",
    "id": 318126033,
    "number": 6759,
    "title": "EventQueue Background Example",
    "user": {
      "login": "AGlass0fMilk",
      "id": 350500,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AGlass0fMilk",
      "html_url": "https://github.com/AGlass0fMilk",
      "followers_url": "https://api.github.com/users/AGlass0fMilk/followers",
      "following_url": "https://api.github.com/users/AGlass0fMilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/AGlass0fMilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AGlass0fMilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AGlass0fMilk/subscriptions",
      "organizations_url": "https://api.github.com/users/AGlass0fMilk/orgs",
      "repos_url": "https://api.github.com/users/AGlass0fMilk/repos",
      "events_url": "https://api.github.com/users/AGlass0fMilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AGlass0fMilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345536,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20events",
        "name": "component: events",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-04-26T17:27:00Z",
    "updated_at": "2018-05-02T08:58:53Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n------------------------------------\r\n## Question\r\n\r\nHow does one effectively use the EventQueue.background method? What does the passed in update function have to handle and what is the significance of the int argument?\r\n\r\nAn official example of this functionality would be helpful!\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6755",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6755/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6755/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6755/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6755",
    "id": 318108575,
    "number": 6755,
    "title": "[exporter] cmake-gcc-arm doesn't include FEATURE_LWIP",
    "user": {
      "login": "yennster",
      "id": 6963725,
      "avatar_url": "https://avatars2.githubusercontent.com/u/6963725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yennster",
      "html_url": "https://github.com/yennster",
      "followers_url": "https://api.github.com/users/yennster/followers",
      "following_url": "https://api.github.com/users/yennster/following{/other_user}",
      "gists_url": "https://api.github.com/users/yennster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yennster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yennster/subscriptions",
      "organizations_url": "https://api.github.com/users/yennster/orgs",
      "repos_url": "https://api.github.com/users/yennster/repos",
      "events_url": "https://api.github.com/users/yennster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yennster/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-04-26T16:34:11Z",
    "updated_at": "2018-04-27T22:53:02Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "## Bug\r\n\r\n**Target**\r\nLPC1768\r\n\r\n**Toolchain:**\r\nOnline Compiler, CMake-GCC-ARM\r\n\r\n**mbed-os sha:**\r\nRevision: 4127:f9ee4e8\r\n\r\n**Expected behavior**\r\nExporting mbed-os-example-blinky with LPC1768 and CMake-GCC-ARM does not include references to the FEATURE_LWIP files in CMakeLists.txt under `ADD_EXECUTABLE(...` or grabs the FEATURE_LWIP folder in the mbed-os/features directory\r\n\r\n**Actual behavior**\r\nThe exporter generates a .zip file for CMake-GCC-ARM but the CMakeLists.txt includes references to the FEATURE_LWIP directory which causes cmake build errors because the FEATURE_LWIP folder does not exist within the mbed-os/features directory\r\n\r\n**Steps to reproduce**\r\n1. Add the board to your online compiler: https://os.mbed.com/platforms/mbed-LPC1768/\r\n1. Import Blinky into the online compiler with the latest version of Mbed OS: https://os.mbed.com/compiler/#import:/teams/mbed-os-examples/code/mbed-os-example-blinky/\r\n1. Right click program name, \"Export Program...\", select LPC1768 and CMake-GCC-ARM, download .zip file, extract, see mbed-os/features folder and CMakeLists.txt file\r\n\r\nQuestion for reference: https://os.mbed.com/questions/81034/How-can-I-use-mbed-1768-on-CLion/#answer14504"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6754",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6754/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6754/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6754/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6754",
    "id": 318088658,
    "number": 6754,
    "title": "Tests failing on EFM32GG_STK3700",
    "user": {
      "login": "bulislaw",
      "id": 107253,
      "avatar_url": "https://avatars2.githubusercontent.com/u/107253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bulislaw",
      "html_url": "https://github.com/bulislaw",
      "followers_url": "https://api.github.com/users/bulislaw/followers",
      "following_url": "https://api.github.com/users/bulislaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/bulislaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bulislaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bulislaw/subscriptions",
      "organizations_url": "https://api.github.com/users/bulislaw/orgs",
      "repos_url": "https://api.github.com/users/bulislaw/repos",
      "events_url": "https://api.github.com/users/bulislaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bulislaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 441187721,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20silicon%20labs",
        "name": "devices: silicon labs",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-04-26T15:43:26Z",
    "updated_at": "2018-05-22T12:51:36Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "\r\n### Description\r\n- Type: Bug \r\n- Priority:  Major\r\n- Mbed OS: `675528b6c`\r\n\r\nCC: @ARMmbed/team-silabs \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nEFM32GG_STK3700\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Expected behavior**\r\nAll tests pass.\r\n\r\n**Actual behavior**\r\nFails:\r\n```\r\nfeatures-nvstore-tests-nvstore-functionality\r\ntests-mbed_drivers-timerevent\r\ntests-mbed_platform-system_reset\r\n```\r\n\r\n**Steps to reproduce**\r\n`mbed test`"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6752",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6752/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6752/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6752/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6752",
    "id": 317949583,
    "number": 6752,
    "title": "IAR: Fixed #6670",
    "user": {
      "login": "TTornblom",
      "id": 31439781,
      "avatar_url": "https://avatars3.githubusercontent.com/u/31439781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TTornblom",
      "html_url": "https://github.com/TTornblom",
      "followers_url": "https://api.github.com/users/TTornblom/followers",
      "following_url": "https://api.github.com/users/TTornblom/following{/other_user}",
      "gists_url": "https://api.github.com/users/TTornblom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TTornblom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TTornblom/subscriptions",
      "organizations_url": "https://api.github.com/users/TTornblom/orgs",
      "repos_url": "https://api.github.com/users/TTornblom/repos",
      "events_url": "https://api.github.com/users/TTornblom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TTornblom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-04-26T09:34:22Z",
    "updated_at": "2018-05-25T08:15:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6752",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6752",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6752.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6752.patch"
    },
    "body": "### Description\r\n\r\n<!-- \r\n    Required\r\n    Add here detailed changes summary, testing results, dependencies \r\n    Good example: https://os.mbed.com/docs/latest/reference/workflow.html (Pull request template)\r\n-->\r\nThis fix implements preprocessing of assembler files similar to the ARM toolchain.\r\n\r\nThe fix has been tested on the mbed-os-example-blinky example, with the same configuration\r\nchanges as described in #6670.\r\n\r\n### Pull request type\r\n\r\n<!-- \r\n    Required\r\n    Please add only one X to one of the following types. Do not fill multiple types (split the pull request otherwise).\r\n    Please note this is not a GitHub task list, indenting the boxes or changing the format to add a '.' or '*' in front\r\n    of them would change the meaning incorrectly. The only changes to be made are to add a description text under the\r\n    description heading and to add a 'x' to the correct box.\r\n-->\r\n    [x] Fix\r\n    [ ] Refactor\r\n    [ ] New target\r\n    [ ] Feature\r\n    [ ] Breaking change\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6738",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6738/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6738/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6738/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6738",
    "id": 317497855,
    "number": 6738,
    "title": "EFM32: GPIO Irq not working as expected since mbed-os 5.8.1",
    "user": {
      "login": "MikeDK",
      "id": 1184607,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1184607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeDK",
      "html_url": "https://github.com/MikeDK",
      "followers_url": "https://api.github.com/users/MikeDK/followers",
      "following_url": "https://api.github.com/users/MikeDK/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeDK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeDK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeDK/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeDK/orgs",
      "repos_url": "https://api.github.com/users/MikeDK/repos",
      "events_url": "https://api.github.com/users/MikeDK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeDK/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 441187721,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20silicon%20labs",
        "name": "devices: silicon labs",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-25T06:47:26Z",
    "updated_at": "2018-05-02T11:43:49Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Related issue: `#6205`\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nobserved on an EFM32PG12 (probably all EFM32)\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\narm-none-eabi-gcc (15:5.4.1+svn241155-1) 5.4.1 20160919\r\n\r\n**mbed-cli version:** \r\n1.2.0\r\n\r\n**mbed-os sha:**\r\nb033a6e42\r\n\r\n**Expected behavior**\r\nI wrote a class for debouncing a button. It uses an InterruptIn object, where I register callback functions for both InterruptIn::rise() and InterruptIn::fall().\r\nWhen button is pressed, the fall callback gets called, and when button is released, the rise callback will be called.\r\n\r\n**Actual behavior**\r\nOnly the fall callback function is called for both rising and falling edge since mbed-os release 5.8.1. It was working with 5.8.0 and before.\r\n\r\nI found out that commit 2a3d6d4349a5a32693edf92223ee008b5b9e8a4b from `#6315` is causing the problem.\r\nIf I revert this commit, everything is working again.\r\n\r\n**Steps to reproduce**\r\nOn an EFM32PG12, create an InterruptIn object on pin BUTTON1 or BUTTON2, and register both rise and fall callback with different functions. Push the button -> fall callback function gets called ... Release the button again -> fall callback function gets called again instead of the rise callback.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6732",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6732/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6732/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6732/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6732",
    "id": 317280086,
    "number": 6732,
    "title": "NRF52_DK: Not all callbacks called when multiple Timeout objects scheduled one by one",
    "user": {
      "login": "fkjagodzinski",
      "id": 26014847,
      "avatar_url": "https://avatars0.githubusercontent.com/u/26014847?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fkjagodzinski",
      "html_url": "https://github.com/fkjagodzinski",
      "followers_url": "https://api.github.com/users/fkjagodzinski/followers",
      "following_url": "https://api.github.com/users/fkjagodzinski/following{/other_user}",
      "gists_url": "https://api.github.com/users/fkjagodzinski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fkjagodzinski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fkjagodzinski/subscriptions",
      "organizations_url": "https://api.github.com/users/fkjagodzinski/orgs",
      "repos_url": "https://api.github.com/users/fkjagodzinski/repos",
      "events_url": "https://api.github.com/users/fkjagodzinski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fkjagodzinski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-04-24T15:30:16Z",
    "updated_at": "2018-05-23T14:07:59Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n**Target**\r\nNRF52_DK\r\n\r\n**Toolchain:**\r\nARM, IAR\r\n\r\n**Toolchain version:**\r\nARM `5.24 (Flex) ARM Compiler 5.06 update 5 (build 528)`,\r\nIAR `ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM`\r\n\r\n**mbed-cli version:** \r\n`1.5.0`\r\n\r\n**mbed-os sha:**\r\n42d77ecd1\r\n\r\n**Code**\r\n```cpp\r\n#include \"mbed.h\"\r\n\r\n#define VERBOSE 0\r\n\r\n#define NUM_TIMEOUTS 16\r\n#define TEST_DELAY_US 10000ULL\r\n\r\nvoid cnt_callback(volatile uint32_t *cnt)\r\n{\r\n    (*cnt)++;\r\n}\r\n\r\nint main()\r\n{\r\n    const ticker_data_t * const us_ticker = get_us_ticker_data();\r\n    const ticker_event_queue_t *ticker_event_q = us_ticker->queue;\r\n\r\n    uint32_t cnt1 = 0;\r\n    do {\r\n#if VERBOSE\r\n        us_timestamp_t event_timestamps[NUM_TIMEOUTS] = { 0 };\r\n#endif\r\n        us_timestamp_t ts0, ts1, ts2, end_ts, head_ts1, head_ts2;\r\n        volatile uint32_t callback_count = 0;\r\n        Timeout timeouts[NUM_TIMEOUTS];\r\n\r\n        for (size_t i = 0; i < NUM_TIMEOUTS; i++) {\r\n            timeouts[i].attach_us(mbed::callback(cnt_callback, &callback_count), TEST_DELAY_US);\r\n        }\r\n        ts0 = ticker_read_us(us_ticker);\r\n#if VERBOSE\r\n        ticker_event_t *te = ticker_event_q->head;\r\n        int i = 0;\r\n        while (te != NULL) {\r\n            event_timestamps[i] = te->timestamp;\r\n            i++;\r\n            te = te->next;\r\n        }\r\n#endif\r\n\r\n        end_ts = ts0 + TEST_DELAY_US;\r\n        while (ticker_read_us(us_ticker) < end_ts) {\r\n        };\r\n        // At this point all callbacks should have been called,\r\n        // so expected values are:\r\n        // cnt1 == NUM_TIMEOUTS\r\n        // ticker_event_q-> head == NULL\r\n        cnt1 = callback_count;\r\n        ts1 = ticker_read_us(us_ticker);\r\n        head_ts1 = (ticker_event_q->head == NULL) ? 0 : ticker_event_q->head->timestamp;\r\n\r\n        // Wait more to check if any callback was late.\r\n        end_ts += 2 * TEST_DELAY_US;\r\n        while (callback_count < NUM_TIMEOUTS && ticker_read_us(us_ticker) < end_ts) {\r\n        };\r\n        uint32_t cnt2 = callback_count;\r\n        ts2 = ticker_read_us(us_ticker);\r\n        head_ts2 = (ticker_event_q->head == NULL) ? 0 : ticker_event_q->head->timestamp;\r\n\r\n#if VERBOSE\r\n        us_timestamp_t prev_ts = event_timestamps[0];\r\n        for (size_t i = 0; i < NUM_TIMEOUTS; i++) {\r\n            printf(\"ts[%02i]=%llu, delta=%03llu\\r\\n\", i, event_timestamps[i], event_timestamps[i] - prev_ts);\r\n            prev_ts = event_timestamps[i];\r\n        }\r\n#endif\r\n        printf(\"ts0=%llu, ts1=%llu, ts2=%llu, ts2-ts0=%llu, \"\r\n                \"cnt1=%lu, cnt2=%lu, head_ts1=%llu, head_ts2=%llu\\r\\n\", ts0, ts1, ts2, ts2 - ts0, cnt1, cnt2, head_ts1,\r\n                head_ts2);\r\n    } while (cnt1 == NUM_TIMEOUTS);\r\n    printf(\"gotcha!\\r\\n\");\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nWhen multiple `Timeout` objects are scheduled one by one, all callbacks are called after given delay.\r\n\r\n**Actual behavior**\r\nWith multiple repetitions it is possible to catch a case where not all the callbacks are called. The ticker event queue is not empty and still contains outdated events.\r\n\r\n**Steps to reproduce**\r\n`mbed compile -t ARM -m NRF52_DK -f`\r\n\r\n```\r\nts0=732, ts1=10803, ts2=10833, ts2-ts0=10101, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=103119, ts1=113128, ts2=113128, ts2-ts0=10009, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=210632, ts1=220642, ts2=220642, ts2-ts0=10010, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=318176, ts1=328186, ts2=348205, ts2-ts0=30029, cnt1=15, cnt2=15, head_ts1=328145, head_ts2=328145\r\ngotcha!\r\n\r\n# RESET button pressed\r\nts0=732, ts1=10742, ts2=10742, ts2-ts0=10010, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=103180, ts1=113189, ts2=113189, ts2-ts0=10009, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=210663, ts1=220703, ts2=220703, ts2-ts0=10040, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=318298, ts1=328308, ts2=328308, ts2-ts0=10010, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=425872, ts1=435882, ts2=455902, ts2-ts0=30030, cnt1=3, cnt2=3, head_ts1=435323, head_ts2=435323\r\ngotcha!\r\n\r\n# RESET button pressed\r\nts0=732, ts1=10742, ts2=10742, ts2-ts0=10010, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=103210, ts1=113220, ts2=113220, ts2-ts0=10010, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=210754, ts1=220825, ts2=220825, ts2-ts0=10071, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=318451, ts1=328460, ts2=328460, ts2-ts0=10009, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=426025, ts1=436035, ts2=436035, ts2-ts0=10010, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=533600, ts1=543640, ts2=543640, ts2-ts0=10040, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=641143, ts1=651153, ts2=671173, ts2-ts0=30030, cnt1=12, cnt2=12, head_ts1=650991, head_ts2=650991\r\ngotcha!\r\n\r\n# RESET button pressed\r\nts0=732, ts1=10742, ts2=10742, ts2-ts0=10010, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=103180, ts1=113189, ts2=113189, ts2-ts0=10009, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=210724, ts1=220733, ts2=220733, ts2-ts0=10009, cnt1=16, cnt2=16, head_ts1=0, head_ts2=0\r\nts0=318329, ts1=328338, ts2=348358, ts2-ts0=30029, cnt1=13, cnt2=13, head_ts1=328237, head_ts2=328237\r\ngotcha!\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6730",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6730/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6730/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6730/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6730",
    "id": 317225304,
    "number": 6730,
    "title": "Target support for Infineon's XMC 4XXX family.",
    "user": {
      "login": "mbed-Infineon-XMC",
      "id": 30082981,
      "avatar_url": "https://avatars3.githubusercontent.com/u/30082981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mbed-Infineon-XMC",
      "html_url": "https://github.com/mbed-Infineon-XMC",
      "followers_url": "https://api.github.com/users/mbed-Infineon-XMC/followers",
      "following_url": "https://api.github.com/users/mbed-Infineon-XMC/following{/other_user}",
      "gists_url": "https://api.github.com/users/mbed-Infineon-XMC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mbed-Infineon-XMC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mbed-Infineon-XMC/subscriptions",
      "organizations_url": "https://api.github.com/users/mbed-Infineon-XMC/orgs",
      "repos_url": "https://api.github.com/users/mbed-Infineon-XMC/repos",
      "events_url": "https://api.github.com/users/mbed-Infineon-XMC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mbed-Infineon-XMC/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 144902129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20work",
        "name": "needs: work",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 450730565,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/scope:%20new-target",
        "name": "scope: new-target",
        "color": "c2e0c6",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 17,
    "created_at": "2018-04-24T13:26:47Z",
    "updated_at": "2018-05-23T01:08:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6730",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6730",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6730.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6730.patch"
    },
    "body": "### Description\r\n\r\nAdd target support for Infineon's XMC 4XXX MCU familiy.\r\n\r\nTested with the XMC 4500 Relax Kit development board and the ARM GCC toolchain.\r\nTested serveral examples which are available here: https://github.com/mbed-Infineon-XMC\r\n\r\n### Pull request type\r\n\r\n    [ ] Fix\r\n    [ ] Refactor\r\n    [x] New target\r\n    [ ] Feature\r\n    [ ] Breaking change\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6722",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6722/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6722/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6722/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6722",
    "id": 317028108,
    "number": 6722,
    "title": "TARGET_STM/gpio_irq_api.c does not need to guess which port generated the interrupt",
    "user": {
      "login": "michaelVisimid",
      "id": 23128804,
      "avatar_url": "https://avatars0.githubusercontent.com/u/23128804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelVisimid",
      "html_url": "https://github.com/michaelVisimid",
      "followers_url": "https://api.github.com/users/michaelVisimid/followers",
      "following_url": "https://api.github.com/users/michaelVisimid/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelVisimid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelVisimid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelVisimid/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelVisimid/orgs",
      "repos_url": "https://api.github.com/users/michaelVisimid/repos",
      "events_url": "https://api.github.com/users/michaelVisimid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelVisimid/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-04-24T00:28:30Z",
    "updated_at": "2018-04-24T14:16:05Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement (bug if you are feeling contrarian)\r\n\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nAll STM devices\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\nThere seems to be some misconceptions about STM32 devices and more than one pin using the interrupt lines. The microcontroller will provide both which pin and which port generated the interrupt request.\r\n\r\n**Suggested enhancement**\r\n\r\nReferencing STM RM0090 STM32F405/415, STM32F407/417, STM32F427/437 and\r\nSTM32F429/439 advanced ARM®-based 32-bit MCUs Section 9.3.3 - 9.3.6, though this information is valid regardless of the Fx or Lx part number, SYSCFG_EXTICRx register has the information as to which port generated.\r\n\r\nI recommend in the handle_interrupt_in function to use the LL macro LL_SYSCFG_GetEXTISource to determine which port has generated the interrupt. Line 86 would be a good place for this change. Then the pins can be converted to the mbed format and passed to the irq_handler functions.\r\n\r\nIs there a reason to store the pin mask in the gpio_channel struct? Is this faster than getting the same data from the microcontroller's registers? Seems a trivial amount of memory could be saved by getting rid of the pin mask and switching the pin and port arrays to mbed pin types.\r\n\r\n**Pros**\r\n\r\nAllows more than one exti line to be used. That is to say both PA_0 and PB_0 can have external interrupts. They're multiplexed and not OR'd after all. There is no reason to not just ask the microcontroller which port generated the interrupt via checking the multiplexor's control bits.\r\n\r\nRelatively few changes. \r\n\r\n\r\n**Cons**\r\n\r\nI realized this fix in a project I started based on some STM32 cube example code which has the same undesirable behavior. That is what led me to check and see if the mBed code base has this same quirk and / or bug. This means someone else would have to make the changes as I am pretty swamped right now.\r\n\r\nIt will require a bit of thought and likely some discussion to determine the best way to handle the changes that will need to be made so that each pin on each port can have its own call back. \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6716",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6716/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6716/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6716/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6716",
    "id": 317009227,
    "number": 6716,
    "title": "Wrong #define macro name in tls unit test",
    "user": {
      "login": "Alex-EEE",
      "id": 25935093,
      "avatar_url": "https://avatars2.githubusercontent.com/u/25935093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Alex-EEE",
      "html_url": "https://github.com/Alex-EEE",
      "followers_url": "https://api.github.com/users/Alex-EEE/followers",
      "following_url": "https://api.github.com/users/Alex-EEE/following{/other_user}",
      "gists_url": "https://api.github.com/users/Alex-EEE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Alex-EEE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Alex-EEE/subscriptions",
      "organizations_url": "https://api.github.com/users/Alex-EEE/orgs",
      "repos_url": "https://api.github.com/users/Alex-EEE/repos",
      "events_url": "https://api.github.com/users/Alex-EEE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Alex-EEE/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 521940966,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tls",
        "name": "component: tls",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-04-23T22:45:47Z",
    "updated_at": "2018-04-24T14:16:41Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug \r\n\r\nIn the unit test for mbedtls ( mbed-os\\TESTS\\mbedtls\\selftest\\main.cpp ), the test refers to the mbed tls config file by the wrong name.  It is currently coded as:\r\n#if !defined(MBEDTLS_CONFIG_FILE)\r\n#include \"mbedtls/config.h\"\r\n#else\r\n#include MBEDTLS_CONFIG_FILE\r\n#endif\r\n\r\n****** It should be MBEDTLS_USER_CONFIG_FILE  *************\r\n\r\nGreentea currently fails like so:\r\n\r\n* K64F::IAR::MBED-MBED-OS-TESTS-MBEDTLS-SELFTEST\r\n        Building project selftest (K64F, IAR)\r\n        Scan: IAR\r\n        Scan: selftest\r\n        Scan: FEATURE_LWIP\r\n        Scan: FEATURE_COMMON_PAL\r\n        Scan: FEATURE_STORAGE\r\n        Compile [100.0%]: main.cpp\r\n        [Warning] main.cpp@71,7: [Pe035]: #error directive: \"MBEDTLS_SELF_TEST not enabled\"\r\n        [Error] main.cpp@74,30: [Pe1345]: an empty initializer is invalid for an array with unspecified bound\r\n        [Error] main.cpp@97,0: [Pe289]: no instance of constructor \"utest::v1::Specification::Specification\" matches the argument list\r\n\r\n**Target**\r\nK64F\r\n\r\n**Toolchain:**\r\nIAR"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6714",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6714/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6714/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6714/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6714",
    "id": 316973702,
    "number": 6714,
    "title": "ISR Queue overflow when signalling from CAN RX ISR",
    "user": {
      "login": "rutgervandenberg",
      "id": 5656556,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5656556?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rutgervandenberg",
      "html_url": "https://github.com/rutgervandenberg",
      "followers_url": "https://api.github.com/users/rutgervandenberg/followers",
      "following_url": "https://api.github.com/users/rutgervandenberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rutgervandenberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rutgervandenberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rutgervandenberg/subscriptions",
      "organizations_url": "https://api.github.com/users/rutgervandenberg/orgs",
      "repos_url": "https://api.github.com/users/rutgervandenberg/repos",
      "events_url": "https://api.github.com/users/rutgervandenberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rutgervandenberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-23T20:37:12Z",
    "updated_at": "2018-05-03T08:43:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Related issue: ARM-software/CMSIS_5#283\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO_F767ZI\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**                                                                                                                                                 \r\narm-none-eabi-g++ (GNU Tools for ARM Embedded Processors 6-2017-q2-update) 6.3.1 20170620 (release) [ARM/embedded-6-branch revision 249437]\r\n\r\n**mbed-cli version:** \r\nmbed --version\r\n1.2.2                                                                                                                                                                                                                                      \r\n\r\n**mbed-os sha:**\r\nf9ee4e8 Merge pull request #6579 from ARMmbed/release-candidate\r\n\r\n**Expected behavior**\r\nThe program keeps running.\r\n**Actual behavior**\r\nThe program crashes with the message `CMSIS-RTOS error: ISR Queue overflow (status: 0x2, task ID: 0x0, object ID: 0x20001014)`\r\n\r\n\r\n**Steps to reproduce**\r\nI've connected a [Peak PCAN USB](https://www.peak-system.com/PCAN-USB.199.0.html?&L=1) through a [TJA1051T/3](https://www.nxp.com/docs/en/data-sheet/TJA1051.pdf) with proper termination on both ends. I'm periodically sending dummy messages using the PCAN. I've tried frequencies as low as 10hz. \r\n\r\nI've looked at the trace and the error happens inside the `isrRtxThreadFlagsSet` function.\r\n\r\nI've sporadically run into this or a very similar issue (the ISR queue overflow) in the past when signaling/releasing a semaphore/inserting into a queue, but was never able to consistently reproduce it before. \r\n```\r\n#include \"mbed.h\"\r\n\r\nstatic const uint32_t READ_IRQ = \t1 << 0;\r\nCAN bus(PB_5, PB_6, 500000);\r\n\r\nrtos::Thread thread;\r\nvoid read_isr() {\r\n\tthread.signal_set(READ_IRQ);\r\n}\r\n\r\nvoid can_main() {\r\n\tCANMessage canmsg;\r\n\twhile(true) {\r\n\t\tosEvent evt = rtos::Thread::signal_wait(READ_IRQ);\r\n\t\twhile (bus.read(canmsg)) {\r\n\t\t}\r\n\t\tbreak;\r\n\t\tthread.signal_clr(READ_IRQ);\r\n\t}\r\n}\r\n\r\n// main() runs in its own thread in the OS\r\nint main() {\r\n\tprintf(\"Starting\\r\\n\\n\");\r\n\tthread.start(can_main);\r\n\twait_ms(10);\r\n\tbus.attach(read_isr, CAN::RxIrq);\r\n    while (true) {\r\n        wait(100);\r\n    }\r\n}\r\n\r\n\r\n\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6706",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6706/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6706/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6706/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6706",
    "id": 316791029,
    "number": 6706,
    "title": "NVStore call crashes when compiled with ARMCC",
    "user": {
      "login": "romkuz01",
      "id": 23612933,
      "avatar_url": "https://avatars2.githubusercontent.com/u/23612933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/romkuz01",
      "html_url": "https://github.com/romkuz01",
      "followers_url": "https://api.github.com/users/romkuz01/followers",
      "following_url": "https://api.github.com/users/romkuz01/following{/other_user}",
      "gists_url": "https://api.github.com/users/romkuz01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/romkuz01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/romkuz01/subscriptions",
      "organizations_url": "https://api.github.com/users/romkuz01/orgs",
      "repos_url": "https://api.github.com/users/romkuz01/repos",
      "events_url": "https://api.github.com/users/romkuz01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/romkuz01/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-04-23T12:30:09Z",
    "updated_at": "2018-05-10T10:52:01Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Use the following main.cpp to reproduce the crash:\r\n\r\n```\r\n#include \"nvstore.h\"\r\n\r\nconst uint8_t global_buffer[91] = {0}; // doesn't crash without \"const\"\r\n\r\nint main()\r\n{\r\n     NVStore &nvstore = NVStore::get_instance();\r\n\r\n     printf(\"Trying to reproduce NVStore crash...\\n\");\r\n     nvstore.set(10, sizeof(global_buffer), global_buffer);\r\n     printf(\"NVStore didn't crash...\\n\");\r\n}\r\n```\r\n\r\nCompile and run with:\r\n`mbed compile -t ARM -m K64F --profile debug -f`\r\n\r\nThe failure was detected with ARMCC version: \r\n`ARM Compiler 5.06 update 3 (build 300)`\r\n\r\nSome observations:\r\n\r\n- Crashes only with --profile set to \"debug\" or \"release\", doesn't crash with \"develop\" \r\n- Passes when \"const\" removed from array definition\r\n- Passes if array is defined as uint32_t (change in data alignment?)"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6699",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6699/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6699/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6699/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6699",
    "id": 316454009,
    "number": 6699,
    "title": "Change \"macros\" in module.json?",
    "user": {
      "login": "pingdan32",
      "id": 5608066,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5608066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pingdan32",
      "html_url": "https://github.com/pingdan32",
      "followers_url": "https://api.github.com/users/pingdan32/followers",
      "following_url": "https://api.github.com/users/pingdan32/following{/other_user}",
      "gists_url": "https://api.github.com/users/pingdan32/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pingdan32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pingdan32/subscriptions",
      "organizations_url": "https://api.github.com/users/pingdan32/orgs",
      "repos_url": "https://api.github.com/users/pingdan32/repos",
      "events_url": "https://api.github.com/users/pingdan32/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pingdan32/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 19,
    "created_at": "2018-04-21T02:27:09Z",
    "updated_at": "2018-05-22T22:39:03Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Question\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\nI'm sorry to post a question via `issue` because I can't find some content elsewhere. \r\n\r\nHow can I modify the value of macros defined in `module.json`? For example, the default value of `NRF_SDH_BLE_GATT_MAX_MTU_SIZE` (defined in `TARGET_NORDIC/TARGET_NRF5x/TARGET_SDK_14_2/TARGET_SOFTDEVICE_S132/module.json`) is 23, and I want to change it to another value in `mbed_app.json`.\r\n\r\nThanks!\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6689",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6689/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6689/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6689/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6689",
    "id": 316063501,
    "number": 6689,
    "title": "Mbed config for STDIO_UART_TX not consistently implemented across targets",
    "user": {
      "login": "sg-",
      "id": 496002,
      "avatar_url": "https://avatars1.githubusercontent.com/u/496002?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sg-",
      "html_url": "https://github.com/sg-",
      "followers_url": "https://api.github.com/users/sg-/followers",
      "following_url": "https://api.github.com/users/sg-/following{/other_user}",
      "gists_url": "https://api.github.com/users/sg-/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sg-/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sg-/subscriptions",
      "organizations_url": "https://api.github.com/users/sg-/orgs",
      "repos_url": "https://api.github.com/users/sg-/repos",
      "events_url": "https://api.github.com/users/sg-/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sg-/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-04-19T22:31:06Z",
    "updated_at": "2018-04-30T14:11:56Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "### Issue request type\r\n\r\n<!-- \r\n    Required\r\n    Please add only one X to one of the following types. Do not fill multiple types (split the pull request otherwise) or\r\n    change the layout.\r\n\r\n    [X] Question\r\n    [ ] Enhancement \r\n    [ ] Bug \r\n-->\r\n\r\n- [ ] Question\r\n- [ ] Enhancement\r\n- [x] Bug\r\n\r\n<!-- \r\n    Required\r\n    Add detailed description of what is being reported\r\n    Good example: https://os.mbed.com/docs/latest/reference/workflow.html\r\n    Things to consider sharing:\r\n    - What target does this relate to?\r\n    - What toolchain is being used?\r\n    - What is the SHA of Mbed OS (git log -n1 --oneline)?\r\n    - Steps to reproduce (Did you publish code or a test case that exhibits the problem)\r\n-->\r\n### Description\r\nOCD kicked in and now that that #6687 and #6688 are opened, the real issue is that we seem to have wrapped `MBED_CONF_TARGET_STDIO_UART_RX` around `STDIO_UART_RX` (same for TX) in `PeripheralNames.h` and newer targets (or not all targets) were updated with this capability. This seems like a change that should have been introduced in some common code a stub to connect the default pins from the port. The search link below should highlight the problem.\r\n\r\nhttps://github.com/ARMmbed/mbed-os/search?l=C&q=STDIO_UART_RX&type=\r\n\r\nLooking further at this, opening up config in targets not part of `mbed_lib.json` seems to be another part of the problem with compatibility across targets. https://github.com/ARMmbed/mbed-os/blob/master/targets/targets.json#L715-L718\r\n\r\nSo what we end up with is some targets with this capability and even then, some targets have tried to turn this on in `targets.json` but not wrapped the pins properly but that could be due to the lacking documentation around this define (or enum in some cases) and porting in general.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6684",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6684/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6684/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6684/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6684",
    "id": 316002268,
    "number": 6684,
    "title": "BlockDevice classes should be moved to mbed namespace",
    "user": {
      "login": "AGlass0fMilk",
      "id": 350500,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AGlass0fMilk",
      "html_url": "https://github.com/AGlass0fMilk",
      "followers_url": "https://api.github.com/users/AGlass0fMilk/followers",
      "following_url": "https://api.github.com/users/AGlass0fMilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/AGlass0fMilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AGlass0fMilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AGlass0fMilk/subscriptions",
      "organizations_url": "https://api.github.com/users/AGlass0fMilk/orgs",
      "repos_url": "https://api.github.com/users/AGlass0fMilk/repos",
      "events_url": "https://api.github.com/users/AGlass0fMilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AGlass0fMilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-04-19T19:04:58Z",
    "updated_at": "2018-04-20T16:26:51Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "BlockDevice classes (and all mbed features) should be moved to the mbed namespace and should not #include \"mbed.h\"\r\n\r\nhttps://github.com/ARMmbed/mbed-os/blob/42d77ecd134acae07d9e99f87b0606c454bea00e/features/filesystem/bd/BlockDevice.h#L43\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6674",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6674/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6674/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6674/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6674",
    "id": 315766814,
    "number": 6674,
    "title": "Greentea client isn't outputting to the console",
    "user": {
      "login": "kjbracey-arm",
      "id": 11025917,
      "avatar_url": "https://avatars3.githubusercontent.com/u/11025917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kjbracey-arm",
      "html_url": "https://github.com/kjbracey-arm",
      "followers_url": "https://api.github.com/users/kjbracey-arm/followers",
      "following_url": "https://api.github.com/users/kjbracey-arm/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjbracey-arm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kjbracey-arm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjbracey-arm/subscriptions",
      "organizations_url": "https://api.github.com/users/kjbracey-arm/orgs",
      "repos_url": "https://api.github.com/users/kjbracey-arm/repos",
      "events_url": "https://api.github.com/users/kjbracey-arm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kjbracey-arm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-04-19T07:59:39Z",
    "updated_at": "2018-04-19T16:46:24Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Enhancement \r\n- Related issue: #6660\r\n- Priority: Minor\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\nGreentea client is unnecessarily tied to `RawSerial`, potentially limiting performance, and preventing its use over any other comms interface. It's also causing configuration complications with tracking the serial port settings specified for the stdout console, as illustrated by #6660.\r\n\r\nIt's apparently avoiding the simplest `printf` and `putc` to permit use from interrupt (https://github.com/ARMmbed/greentea-client/commit/ff623719a14c2f22cad8d55fba815ebeac4352b4).\r\n\r\nThis can be now be achieved in a more elegant and portable fashion using `write(STDOUT_FILENO)` - this will in principle work from interrupt, subject to limitations of the `FileHandle` being used for the console. It will currently work with the default non-buffered console, equivalent to `RawSerial`.\r\n\r\nA little more discussion in comments on #6660"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6670",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6670/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6670/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6670/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6670",
    "id": 315536925,
    "number": 6670,
    "title": "Macro definitions in mbed_app.json are not passed to IAR assembler",
    "user": {
      "login": "TeroJaasko",
      "id": 12545862,
      "avatar_url": "https://avatars0.githubusercontent.com/u/12545862?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TeroJaasko",
      "html_url": "https://github.com/TeroJaasko",
      "followers_url": "https://api.github.com/users/TeroJaasko/followers",
      "following_url": "https://api.github.com/users/TeroJaasko/following{/other_user}",
      "gists_url": "https://api.github.com/users/TeroJaasko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TeroJaasko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TeroJaasko/subscriptions",
      "organizations_url": "https://api.github.com/users/TeroJaasko/orgs",
      "repos_url": "https://api.github.com/users/TeroJaasko/repos",
      "events_url": "https://api.github.com/users/TeroJaasko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TeroJaasko/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-04-18T15:44:23Z",
    "updated_at": "2018-05-09T14:18:51Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug \r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F\r\n\r\n**Toolchain:**\r\nIAR\r\n\r\n**Toolchain version:**\r\n8.2\r\n\r\n**mbed-cli version:** \r\n1.5.0\r\n\r\n**mbed-os sha:**\r\ncba28cc (HEAD -> master, origin/master, origin/HEAD) Merge pull request #6221 from codeauroraforum/Add_RNG_LPC54XXX\r\n\r\n**Expected behavior**\r\nCode compiles, macros given in mbed_app.json are passed to assembler.\r\n\r\n**Actual behavior**\r\n```\r\nBuilding project mbed-os-example-blinky (K64F, IAR)\r\nScan: .\r\nScan: mbed\r\nScan: env\r\nScan: FEATURE_LWIP\r\nScan: FEATURE_COMMON_PAL\r\nScan: FEATURE_STORAGE\r\nLink: mbed-os-example-blinky\r\nError[Li005]: no definition for \"mbed_fault_context\" [referenced from\r\n          mbed-os-example-blinky/BUILD/K64F/IAR/mbed-os/rtos/TARGET_CORTEX/TARGET_CORTEX_M/TOOLCHAIN_IAR/except.o]\r\nError[Li005]: no definition for \"mbed_fault_handler\" [referenced from\r\n          mbed-os-example-blinky/BUILD/K64F/IAR/mbed-os/rtos/TARGET_CORTEX/TARGET_CORTEX_M/TOOLCHAIN_IAR/except.o]\r\n[ERROR] Error[Li005]: no definition for \"mbed_fault_context\" [referenced from\r\n          mbed-os-example-blinky/BUILD/K64F/IAR/mbed-os/rtos/TARGET_CORTEX/TARGET_CORTEX_M/TOOLCHAIN_IAR/except.o]\r\nError[Li005]: no definition for \"mbed_fault_handler\" [referenced from\r\n          mbed-os-example-blinky/BUILD/K64F/IAR/mbed-os/rtos/TARGET_CORTEX/TARGET_CORTEX_M/TOOLCHAIN_IAR/except.o]\r\n\r\n[mbed] ERROR: \"/usr/bin/python\" returned error code 1.\r\n[mbed] ERROR: Command \"/usr/bin/python -u mbed-os-example-blinky/mbed-os/tools/make.py -t IAR -m K64F --source . --build ./BUILD/K64F/IAR\" in \"mbed-os-example-blinky\"\r\n```\r\n\r\n**Steps to reproduce**\r\n* clone mbed-os-example-blinky\r\n* compile successfully for ARM: \"mbed compile -m K64F -t ARM\"\r\n* edit mbed_app.json to have macro MBED_FAULT_HANDLER_DISABLED as defined, eg\r\n```\r\n    \"macros\": [\r\n        \"MBED_FAULT_HANDLER_DISABLED\"\r\n    ],\r\n```\r\n* compile successfully for ARM: \"mbed compile -m K64F -t ARM\"\r\n* observe binary size reduction of ~1780 bytes.\r\n* compile for IAR: \"mbed compile -m K64F -t IAR\"\r\n* observe the linker error, caused likely by \"#ifndef MBED_FAULT_HANDLER_DISABLED\" -line failing to work as expected in except.S (https://github.com/ARMmbed/mbed-os/blob/master/rtos/TARGET_CORTEX/TARGET_CORTEX_M/TOOLCHAIN_IAR/except.S#L32)\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nIt seems that the macros in mbed_app.json are not passed to the IAR's assembler, or at least command lines for compiling except.S in ARM and IAR are quite different and IAR is missing reference to mbed_config.h:\r\n\r\nARM:\r\n```\r\narmcc -c --gnu -Otime --split_sections --apcs=interwork --brief_diagnostics --restrict --multibyte_chars -O3 --cpu=Cortex-M4.fp -D__CORTEX_M4 -DCPU_MK64FN1M0VMD12 -DARM_MATH_CM4 -D__FPU_PRESENT=1 -D__MBED_CMSIS_RTOS_CM -D__CMSIS_RTOS -DFSL_RTOS_MBED --via ./BUILD/K64F/ARM/.includes_24c7dc53f90030b3047073a06c584023.txt --preinclude=./BUILD/K64F/ARM/mbed_config.h -E -o BUILD/K64F/ARM/mbed-os/rtos/TARGET_CORTEX/TARGET_CORTEX_M/TOOLCHAIN_ARM/.temp/except.o.E.s ./mbed-os/rtos/TARGET_CORTEX/TARGET_CORTEX_M/TOOLCHAIN_ARM/except.S\r\n```\r\n\r\nIAR:\r\n```\r\niasmarm --cpu Cortex-M4F -D__CORTEX_M4 -DCPU_MK64FN1M0VMD12 -DARM_MATH_CM4 -D__FPU_PRESENT=1 -D__MBED_CMSIS_RTOS_CM -D__CMSIS_RTOS -DFSL_RTOS_MBED -o BUILD/K64F/IAR/mbed-os/rtos/TARGET_CORTEX/TARGET_CORTEX_M/TOOLCHAIN_IAR/except.o ./mbed-os/rtos/TARGET_CORTEX/TARGET_CORTEX_M/TOOLCHAIN_IAR/except.S\r\n```\r\n\r\n**Suggested enhancement**\r\nPass the content of mbed_config.h to iasmarm somehow.\r\n\r\n**Pros**\r\n\r\n**Cons**\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**How to?**\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6664",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6664/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6664/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6664/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6664",
    "id": 315401880,
    "number": 6664,
    "title": "Wait function using us_ticker_read",
    "user": {
      "login": "bcostm",
      "id": 5803932,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5803932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bcostm",
      "html_url": "https://github.com/bcostm",
      "followers_url": "https://api.github.com/users/bcostm/followers",
      "following_url": "https://api.github.com/users/bcostm/following{/other_user}",
      "gists_url": "https://api.github.com/users/bcostm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bcostm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bcostm/subscriptions",
      "organizations_url": "https://api.github.com/users/bcostm/orgs",
      "repos_url": "https://api.github.com/users/bcostm/repos",
      "events_url": "https://api.github.com/users/bcostm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bcostm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-04-18T09:31:33Z",
    "updated_at": "2018-04-18T10:36:21Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\nIt would be nice to have a \"wait\" function that uses us_ticker_read instead of using the wait_us function. In many situations the wait_us is not appropriated (deepsleep, I2C, ...)\r\n\r\nSome work has already been started in PR #6069 and PR #6538 but it would be better to have it in mbed common files.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6661",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6661/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6661/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6661/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6661",
    "id": 315305210,
    "number": 6661,
    "title": "MCUXpresso exporter - bad assembler flags can cause HardFault on Thread exit",
    "user": {
      "login": "bmcdonnell-ionx",
      "id": 34172339,
      "avatar_url": "https://avatars2.githubusercontent.com/u/34172339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmcdonnell-ionx",
      "html_url": "https://github.com/bmcdonnell-ionx",
      "followers_url": "https://api.github.com/users/bmcdonnell-ionx/followers",
      "following_url": "https://api.github.com/users/bmcdonnell-ionx/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmcdonnell-ionx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmcdonnell-ionx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmcdonnell-ionx/subscriptions",
      "organizations_url": "https://api.github.com/users/bmcdonnell-ionx/orgs",
      "repos_url": "https://api.github.com/users/bmcdonnell-ionx/repos",
      "events_url": "https://api.github.com/users/bmcdonnell-ionx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmcdonnell-ionx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 25,
    "created_at": "2018-04-18T02:19:05Z",
    "updated_at": "2018-05-10T19:10:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor | Major\r\n\r\n(EDIT: Original title: \"exiting thread after printf() causes HardFault\".)\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nLPC4088 (EA QuickStart Board)\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\nMCUXpresso IDE v10.1.1 [Build 606] [2018-01-02] \r\n\r\n**mbed-cli version:** \r\n1.5.0\r\n\r\n**mbed-os sha:**\r\n`f9ee4e849 (tag: mbed-os-5.8.2, origin/mbed-os-5.8, mbed-os-5.8) Merge pull request #6579 from ARMmbed/release-candidate`\r\n\r\n**DAPLink version:**\r\n\r\n**Expected behavior**\r\n\r\nThread doesn't cause HardFault on exit. Can call `join()` on an `mbed::Thread` before or after it exits.\r\n\r\n**Actual behavior**\r\n\r\nExiting thread causes HardFault.\r\n\r\nI suspect it has something to do with the `printf()` not finishing before the thread exits.\r\n\r\n**Steps to reproduce**\r\n\r\n```\r\n#include \"mbed.h\"\r\n\r\nstatic UARTSerial SerialPort(USBTX, USBRX, 115200);\r\n\r\n// redirect stdio to this serial port\r\nFileHandle *mbed::mbed_override_console(int fd)\r\n{\r\n   return &SerialPort;\r\n}\r\n\r\nstatic void bgThreadTask()\r\n{\r\n   while (true)\r\n   {\r\n      osEvent ose = Thread::signal_wait(0);\r\n\r\n      if (ose.value.v == 1)\r\n      {\r\n         printf(\"\\r\\nSignal received!\\r\\n\");\r\n         break;\r\n      }\r\n   }\r\n};\r\n\r\nint main()\r\n{\r\n   Thread bgThread;\r\n\r\n   Callback<void()> bgThreadCB(bgThreadTask);\r\n\r\n   bgThread.start(bgThreadCB);\r\n   bgThread.signal_set(1);\r\n\r\n   bgThread.join();\r\n\r\n   // indicator LED if we get this far\r\n   DigitalOut led2(LED2, 0); // on\r\n\r\n   while (true)\r\n   {\r\n      sleep();\r\n   }\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6650",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6650/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6650/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6650/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6650",
    "id": 314930245,
    "number": 6650,
    "title": "Greentea UDP/TCP packet pressure test cases are failing on platforms with large memory",
    "user": {
      "login": "mikaleppanen",
      "id": 13345641,
      "avatar_url": "https://avatars1.githubusercontent.com/u/13345641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikaleppanen",
      "html_url": "https://github.com/mikaleppanen",
      "followers_url": "https://api.github.com/users/mikaleppanen/followers",
      "following_url": "https://api.github.com/users/mikaleppanen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikaleppanen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikaleppanen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikaleppanen/subscriptions",
      "organizations_url": "https://api.github.com/users/mikaleppanen/orgs",
      "repos_url": "https://api.github.com/users/mikaleppanen/repos",
      "events_url": "https://api.github.com/users/mikaleppanen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikaleppanen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-04-17T07:02:53Z",
    "updated_at": "2018-05-17T06:46:17Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Related issue: None\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNUCLEO_F767ZI\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n6-2017-q2\r\n\r\n**Expected behavior**\r\n\r\nGreentea UDP and TCP packet pressure tests should pass:\r\n\r\n    mbed-os-tests-netsocket-tcp_packet_pressure\r\n    mbed-os-tests-netsocket-tcp_packet_pressure_parallel\r\n    mbed-os-tests-netsocket-udp_packet_pressure\r\n    mbed-os-tests-netsocket-udp_packet_pressure_parallel\r\n\r\n**Actual behavior**\r\n\r\nGreentea UDP and TCP packet pressure tests fail on platforms with large memories. \r\n\r\nThis is due to overflow on lwip socket send/receive where application socket buffer length is cast from uint32 to uint16 without checking if value is larger than uint16. \r\n\r\nAlso, in case platform has more memory than configured maximum, test case generate_buffer() routine does not divide the reserved memory by four, before trying to allocate it.\r\n\r\nFixes needed to both lwip and test cases.\r\n\r\n**Steps to reproduce**\r\n\r\nRun tests on platform with large memory (more than >128kbytes)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6649",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6649/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6649/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6649/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6649",
    "id": 314913742,
    "number": 6649,
    "title": "LoRaWAN should have API for SNR and RSSI",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-04-17T05:46:10Z",
    "updated_at": "2018-04-18T07:42:50Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type:  Enhancement \r\n- Related issue: #6389\r\n- Priority: Minor\r\n\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\nSee also #6389. If you receive a message from the LoRaWAN stack it'd be useful to see RSSI and SNR (and probably some other stuff, f.e. was this a confirmed message?) of that packet for debugging purposes. Also I'd like some information on which session was used to retrieve this message, in case we're gonna have multiple sessions. Maybe stuff like whether it was multicast message, and on which group. If we do this in a struct we can easily add in the future.\r\n\r\n**Suggested enhancement**\r\n\r\nChange the receive function so it takes in a struct, and put the information on there; instead of the out parameters that we use now. \r\n\r\n**Pros**\r\n\r\nGet more debug information.\r\n\r\n**Cons**\r\n\r\nChange the API again (third time in three releases :-)).\r\n\r\n@kivaisan @hasnainvirk "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6643",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6643/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6643/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6643/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6643",
    "id": 314486782,
    "number": 6643,
    "title": "features-nvstore-tests-nvstore-functionality failed when can not accept max_test_keys",
    "user": {
      "login": "soramame21",
      "id": 17120422,
      "avatar_url": "https://avatars0.githubusercontent.com/u/17120422?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soramame21",
      "html_url": "https://github.com/soramame21",
      "followers_url": "https://api.github.com/users/soramame21/followers",
      "following_url": "https://api.github.com/users/soramame21/following{/other_user}",
      "gists_url": "https://api.github.com/users/soramame21/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soramame21/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soramame21/subscriptions",
      "organizations_url": "https://api.github.com/users/soramame21/orgs",
      "repos_url": "https://api.github.com/users/soramame21/repos",
      "events_url": "https://api.github.com/users/soramame21/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soramame21/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-04-16T03:12:43Z",
    "updated_at": "2018-04-17T09:23:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\nTMPM46B failed features-nvstore-tests-nvstore-functionality. features\\nvstore\\TESTS\\nvstore\\functionality\\main.cpp\r\nBecause the chip has fixed sector size 32K and page size 4K, therefore the maximum acceptable key number is 7, but our test case set the key number is 20.\r\n\r\n## Question\r\n\r\n**Q1: Why the test case set the key number 20? is it the minimum number to support?**\r\n\r\n**Q2: In the test case, can we set the key number with value of maximum acceptable key number instead of a fixed number?**\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6641",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6641/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6641/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6641/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6641",
    "id": 314427137,
    "number": 6641,
    "title": "Question about NVStore::set_max_keys(uint16_t num_keys)",
    "user": {
      "login": "soramame21",
      "id": 17120422,
      "avatar_url": "https://avatars0.githubusercontent.com/u/17120422?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soramame21",
      "html_url": "https://github.com/soramame21",
      "followers_url": "https://api.github.com/users/soramame21/followers",
      "following_url": "https://api.github.com/users/soramame21/following{/other_user}",
      "gists_url": "https://api.github.com/users/soramame21/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soramame21/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soramame21/subscriptions",
      "organizations_url": "https://api.github.com/users/soramame21/orgs",
      "repos_url": "https://api.github.com/users/soramame21/repos",
      "events_url": "https://api.github.com/users/soramame21/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soramame21/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-15T15:52:37Z",
    "updated_at": "2018-04-17T01:56:41Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type:  Question\r\n- Priority:  Major\r\nI have question about **NVStore::set_max_keys()** at features\\nvstore\\source\\nvstore.cpp under following condition over TMPM46B (Tohisba). \r\n\r\n1. NVStore::set_max_keys is called\r\n2. Then get_max_possible_keys() is called at line X ASSERT verification.\r\n3. In get_max_possible_keys(), line Y, _size is sector size 32K, and _min_prog_size is page size 4K, so max_possible_keys = 7.\r\n4. When return back NVStore::set_max_keys() line X, the num_keys to be set must be smaller than max_possible_keys, therefore the maximum acceptable num_keys must be 6.   \r\n\r\n```\r\nuint16_t NVStore::get_max_possible_keys()\r\n{\r\n;;\r\nY    size_t max_possible_keys = _size / align_up(sizeof(nvstore_record_header_t) * 2, _min_prog_size) - 1;\r\n    return (uint16_t)std::min(max_possible_keys, (size_t) last_reserved_key);\r\n}\r\n\r\nvoid NVStore::set_max_keys(uint16_t num_keys)\r\n{\r\nX    MBED_ASSERT(num_keys < get_max_possible_keys());\r\n    _max_keys = num_keys;\r\n;;\r\n}\r\n\r\n```\r\n## Question\r\n\r\n**Q1. Why should max_possible_keys not be 8 at line Y? in case sector size is 32K and page size is 4K.**\r\n\r\n**Q2. Why should num_keys be smaller then max_possible_keys without equal condition at line X?**\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6639",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6639/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6639/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6639/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6639",
    "id": 314321268,
    "number": 6639,
    "title": "How to access MDIO on STM32F7xx",
    "user": {
      "login": "GeorgeStephens",
      "id": 8162303,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8162303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GeorgeStephens",
      "html_url": "https://github.com/GeorgeStephens",
      "followers_url": "https://api.github.com/users/GeorgeStephens/followers",
      "following_url": "https://api.github.com/users/GeorgeStephens/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeorgeStephens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GeorgeStephens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeorgeStephens/subscriptions",
      "organizations_url": "https://api.github.com/users/GeorgeStephens/orgs",
      "repos_url": "https://api.github.com/users/GeorgeStephens/repos",
      "events_url": "https://api.github.com/users/GeorgeStephens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GeorgeStephens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-04-14T11:20:14Z",
    "updated_at": "2018-04-19T18:04:03Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Question\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**I want to be able to read (`HAL_ETH_ReadPHYRegister`) and write (`HAL_ETH_WritePHYRegister`) to PHY registers via MDIO from an application, but how to I get an instance of `ETH_HandleTypeDef`?** \r\n\r\nThe application I am writing requires changes to the configuration of the Ethernet PHY throughout the lifetime of the program. I am struggling to find a way to do this as I can't see how to get an instance of `ETH_HandleTypeDef`. The aim is to simply call `HAL_ETH_ReadPHYRegister(heth, address, mdioValue);` from main (or any other part of the application)."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6633",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6633/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6633/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6633/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6633",
    "id": 314058339,
    "number": 6633,
    "title": "Avoid truncating .isr_table from custom linker section on LPC176X",
    "user": {
      "login": "0x6d61726b",
      "id": 25281946,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25281946?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x6d61726b",
      "html_url": "https://github.com/0x6d61726b",
      "followers_url": "https://api.github.com/users/0x6d61726b/followers",
      "following_url": "https://api.github.com/users/0x6d61726b/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x6d61726b/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x6d61726b/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x6d61726b/subscriptions",
      "organizations_url": "https://api.github.com/users/0x6d61726b/orgs",
      "repos_url": "https://api.github.com/users/0x6d61726b/repos",
      "events_url": "https://api.github.com/users/0x6d61726b/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x6d61726b/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-04-13T10:43:19Z",
    "updated_at": "2018-04-17T10:44:21Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug | Question\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug / Question\r\n\r\n**Target**\r\nLPC176X\r\n\r\n**Toolchain:**\r\nGCC_ARM (GNUARM)\r\n\r\n**Expected behavior**\r\nCustom \".isr\" section shall be present in output .hex file\r\n\r\n**Actual behavior**\r\nCustom \".isr\" section is missing in output .hex file\r\n\r\n**Steps to reproduce**\r\n0. Compile and link the project with an unmodified .ld file from /targets/TARGET_NXP/TARGET_LPC176X/device/TOOLCHAIN_GCC_ARM/LPC1768.ld\r\n\r\n1. Modify the linker file to place the \".isr_vector\" into a custom \".isr\" section (LPC1768_isr.ld)\r\n\r\n2. Compile and link the project with modified LPC1768_isr.ld file\r\n\r\n3. List and compare the section headers of both .elf files with: arm-eabi-readelf -S <name>.elf\r\n```\r\n   Relevant entry of unmodified sections:\r\n   Section Headers:\r\n     [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\r\n     [ 0]                   NULL            00000000 000000 000000 00      0   0  0\r\n     [ 1] .text             PROGBITS        00000000 010000 00f530 00  AX  0   0  8\r\n\r\n   Relevant entry of modified sections:\r\n   Section Headers:\r\n     [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\r\n     [ 0]                   NULL            00000000 000000 000000 00      0   0  0\r\n     [ 1] .isr              PROGBITS        00000000 0202e4 0000cc 00      0   0  4\r\n     [ 2] .text             PROGBITS        00002000 002000 00f460 00  AX  0   0  8\r\n   .hex file content:\r\n     Block  0  Starts at: 0x2000  Ends at: 0x11683 (Length: 0xF684=63108)\r\n     00002000:  10 B5 05 4C  23 78 33 B9   04 4B 13 B1  04 48 AF F3  ...L#x3..K...H..\r\n     00002010:  00 80 01 23  23 70 10 BD   E8 02 00 10  00 00 00 00  ...##p..........\r\n     00002020:  5C 14 01 00  08 4B 10 B5   1B B1 08 49  08 48 AF F3  \\....K.....I.H..\r\n     00002030:  00 80 08 48  03 68 03 B9   10 BD 07 4B  00 2B FB D0  ...H.h.....K.+..\r\n     00002040:  BD E8 10 40  18 47 00 BF   00 00 00 00  EC 02 00 10  ...@.G..........\r\n     00002050:  5C 14 01 00  E4 02 00 10   00 00 00 00  15 4B 00 2B  \\............K.+\r\n```\r\n4. Patch the startup file and assign the \".isr_vector\" the section attribute \"allocated\" in file /targets/TARGET_NXP/TARGET_LPC176X/device/TOOLCHAIN_GCC_ARM/startup_LPC17xx.S\r\n```\r\n   63c63\r\n   <     .section .isr_vector\r\n   ---\r\n   >     .section .isr_vector,\"a\"\r\n```\r\n5. List the section headers of the patched version with the modified LPC1768_isr.ld file\r\n```\r\n   Section Headers:\r\n     [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\r\n     [ 0]                   NULL            00000000 000000 000000 00      0   0  0\r\n     [ 1] .isr              PROGBITS        00000000 010000 0000cc 00   A  0   0  4\r\n     [ 2] .text             PROGBITS        00002000 012000 00f460 00  AX  0   0  8\r\n   .hex file content:\r\n     Block  0  Starts at: 0x   0  Ends at: 0x  CB (Length: 0xCC=204)\r\n     Block  1  Starts at: 0x2000  Ends at: 0x11683 (Length: 0xF684=63108)\r\n     00000000:  E0 7F 00 10  55 A6 00 00   85 A6 00 00  87 A6 00 00  . ..U...........\r\n     00000010:  89 A6 00 00  8B A6 00 00   8D A6 00 00  00 00 00 00  ................\r\n     00000020:  00 00 00 00  00 00 00 00   00 00 00 00  45 C5 00 00  ............E...\r\n     00000030:  91 A6 00 00  00 00 00 00   AF C5 00 00  E5 C5 00 00  ................\r\n     00000040:  97 A6 00 00  97 A6 00 00   97 A6 00 00  97 A6 00 00  ................\r\n     00000050:  97 A6 00 00  97 A6 00 00   97 A6 00 00  97 A6 00 00  ................\r\n     00000060:  97 A6 00 00  97 A6 00 00   97 A6 00 00  97 A6 00 00  ................\r\n     00000070:  97 A6 00 00  97 A6 00 00   97 A6 00 00  97 A6 00 00  ................\r\n     00000080:  97 A6 00 00  97 A6 00 00   97 A6 00 00  97 A6 00 00  ................\r\n     00000090:  97 A6 00 00  97 A6 00 00   97 A6 00 00  97 A6 00 00  ................\r\n     000000A0:  97 A6 00 00  97 A6 00 00   97 A6 00 00  97 A6 00 00  ................\r\n     000000B0:  97 A6 00 00  97 A6 00 00   97 A6 00 00  97 A6 00 00  ................\r\n     000000C0:  97 A6 00 00  97 A6 00 00   97 A6 00 00               ............    \r\n     00002000:  10 B5 05 4C  23 78 33 B9   04 4B 13 B1  04 48 AF F3  ...L#x3..K...H..\r\n     00002010:  00 80 01 23  23 70 10 BD   E8 02 00 10  00 00 00 00  ...##p..........\r\n     00002020:  5C 14 01 00  08 4B 10 B5   1B B1 08 49  08 48 AF F3  \\....K.....I.H..\r\n     00002030:  00 80 08 48  03 68 03 B9   10 BD 07 4B  00 2B FB D0  ...H.h.....K.+..\r\n     00002040:  BD E8 10 40  18 47 00 BF   00 00 00 00  EC 02 00 10  ...@.G..........\r\n     00002050:  5C 14 01 00  E4 02 00 10   00 00 00 00  15 4B 00 2B  \\............K.+\r\n```\r\n----------------------------------------------------------------\r\n## Question\r\n\r\n- Is there a way to define the \"allocated\" section attribute in the linker file?\r\n- Is it a suitable way to extend mbed-os LPC17xx.S startup file to avoid this bug?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6624",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6624/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6624/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6624/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6624",
    "id": 313909362,
    "number": 6624,
    "title": "LocalFileSystem & wait() triggers MbedOS Fault Handler",
    "user": {
      "login": "yennster",
      "id": 6963725,
      "avatar_url": "https://avatars2.githubusercontent.com/u/6963725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yennster",
      "html_url": "https://github.com/yennster",
      "followers_url": "https://api.github.com/users/yennster/followers",
      "following_url": "https://api.github.com/users/yennster/following{/other_user}",
      "gists_url": "https://api.github.com/users/yennster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yennster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yennster/subscriptions",
      "organizations_url": "https://api.github.com/users/yennster/orgs",
      "repos_url": "https://api.github.com/users/yennster/repos",
      "events_url": "https://api.github.com/users/yennster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yennster/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-12T22:28:58Z",
    "updated_at": "2018-04-30T21:24:29Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "## Bug\r\n\r\n**Target**\r\nLPC1768\r\n\r\n**Toolchain:**\r\nGCC_ARM & Online Compiler\r\n\r\n**Toolchain version:**\r\ngcc-arm-none-eabi-7-2017-q4-major\r\n\r\n**mbed-cli version:** \r\n1.5.0\r\n\r\n**mbed-os sha:**\r\n0b37629 (HEAD -> master, origin/master, origin/HEAD) Merge pull request #114 from adbridge/master\r\n\r\n**Steps to reproduce**\r\nI wrote up a simple `LocalFileSystem` example for the Mbed Application board that writes 100 integer values to a .csv file:\r\n```\r\n#include \"mbed.h\"\r\nLocalFileSystem local(\"local\");\r\nint main() {\r\n    FILE *fp = fopen(\"/local/test.csv\",\"w\");\r\n    for (int i = 0; i < 100; i++) {\r\n        fprintf(fp, \"%d\\n\", i);\r\n    }\r\n    fclose(fp);\r\n}\r\n```\r\nThe above code works and a `TEST.CSV` file is created in the local filesystem with integer values 0-99. However, when I add a `wait` function to the `for` loop, the MbedOS Fault Handler is triggered:\r\n\r\n```\r\n#include \"mbed.h\"\r\nLocalFileSystem local(\"local\");\r\nint main() {\r\n    FILE *fp = fopen(\"/local/test.csv\",\"w\");\r\n    for (int i = 0; i < 100; i++) {\r\n        fprintf(fp, \"%d\\n\", i);\r\n        wait(0.05); // triggers ++ MbedOS Fault Handler ++\r\n    }\r\n    fclose(fp);\r\n}\r\n```\r\nNo values are stored into the csv file as the application doesn't get to `fclose(fp);`\r\n\r\n**Expected behavior**\r\nThat the fault handler is not triggered and the for loop waits for 0.05 seconds, then saves a test.csv file with the 100 integer values.\r\n\r\n**Actual behavior**\r\nOutput to the serial terminal of the Fault Handler error message:\r\n```\r\n                                        ++ MbedOS Fault Handler ++\r\n\r\n                                                                  FaultType: HardFault\r\n\r\n                                                                                      Context:\r\n                                                                                              R0   : 00000005\r\n                                                                                                             R1   : 100025AC\r\n                                                                                                                            R2   : 00000122\r\n                                                                                                                                           R3   : 00000000\r\n          R4   : 00000005\r\n                         R5   : 100025AC\r\n                                        R6   : 10002920\r\n                                                       R7   : 10000288\r\n                                                                      R8   : 10000288\r\n                                                                                     R9   : 00000000\r\n                                                                                                    R10  : 00000000\r\n                                                                                                                   R11  : 00000000\r\n                                                                                                                                  R12  : 00002CD9\r\n SP   : 100025A8\r\n                LR   : 00000CF1\r\n                               PC   : 00001794\r\n                                              xPSR : 01000000\r\n                                                             PSP  : 10002588\r\n                                                                            MSP  : 10007FB8\r\n                                                                                           CPUID: 412FC230\r\n                                                                                                          HFSR : 80000000\r\n                                                                                                                         MMFSR: 00000000\r\n                                                                                                                                        BFSR : 00000000\r\n       UFSR : 00000000\r\n                      DFSR : 00000002\r\n                                     AFSR : 00000000\r\n                                                    SHCSR: 00000000\r\n                                                                   Mode : Thread\r\n                                                                                Priv : Privileged\r\n                                                                                                 Stack: PSP\r\n\r\n                                                                                                           Thread Info:\r\n                                                                                                                       Current:\r\n                                                                                                                               State: 00000002 EntryFn: 00001CF1 Stack Size: 00001000 Mem: 10001648 SP: 100025D0\r\n                                                                Next:\r\n                                                                     State: 00000002 EntryFn: 00001CF1 Stack Size: 00001000 Mem: 10001648 SP: 100025D0\r\n      Wait Threads:\r\n                   State: 00000083 EntryFn: 00003A8D Stack Size: 00000300 Mem: 10000F78 SP: 10001210\r\n                                                                                                    Delay Threads:\r\n                                                                                                                  Idle Thread:\r\n                                                                                                                              State: 00000001 EntryFn: 00001E79 Stack Size: 00000200 Mem: 10001278 SP: 10001420\r\n\r\n                                                               -- MbedOS Fault Handler --\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6623",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6623/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6623/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6623/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6623",
    "id": 313832622,
    "number": 6623,
    "title": "SPI Clock Not Initialized Properly",
    "user": {
      "login": "AGlass0fMilk",
      "id": 350500,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AGlass0fMilk",
      "html_url": "https://github.com/AGlass0fMilk",
      "followers_url": "https://api.github.com/users/AGlass0fMilk/followers",
      "following_url": "https://api.github.com/users/AGlass0fMilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/AGlass0fMilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AGlass0fMilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AGlass0fMilk/subscriptions",
      "organizations_url": "https://api.github.com/users/AGlass0fMilk/orgs",
      "repos_url": "https://api.github.com/users/AGlass0fMilk/repos",
      "events_url": "https://api.github.com/users/AGlass0fMilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AGlass0fMilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-04-12T18:09:19Z",
    "updated_at": "2018-04-23T23:00:03Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug/Question\r\n- Priority: Minor\r\n\r\nNot completely sure if this is an issue, but it caused me some head scratching. It can be fixed by the application by initializing the pin as a DigitalOut and manually setting the clock pin to the idle state. But I think this should be taken care of by the driver.\r\n\r\nSee attached image\r\n\r\n![spi_clk_issue_nordic](https://user-images.githubusercontent.com/350500/38695652-e3284d10-3e5a-11e8-9e10-aa7905eb5b1b.png)\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNordic nRF52832-based targets\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n\r\n**mbed-cli version:** \r\n1.2.2\r\n\r\n**Expected behavior**\r\nSPI Clock pin should be initialized to idle state (depending on mode) when SPI driver is initialized.\r\n\r\n**Actual behavior**\r\nSPI clock pin is not initialized to idle state until first transaction starts, which could cause issues. It shows up on my Saleae logic analyzer as an incorrect setting/error\r\n\r\n**Steps to reproduce**\r\nUse SPI driver in mode 0 on nRF52832 targets and capture first transaction on a logic analyzer. The state of the clock pin will be incorrect.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6622",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6622/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6622/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6622/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6622",
    "id": 313812566,
    "number": 6622,
    "title": "Add nanostack support for KW41Z",
    "user": {
      "login": "mmahadevan108",
      "id": 16884721,
      "avatar_url": "https://avatars3.githubusercontent.com/u/16884721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmahadevan108",
      "html_url": "https://github.com/mmahadevan108",
      "followers_url": "https://api.github.com/users/mmahadevan108/followers",
      "following_url": "https://api.github.com/users/mmahadevan108/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmahadevan108/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmahadevan108/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmahadevan108/subscriptions",
      "organizations_url": "https://api.github.com/users/mmahadevan108/orgs",
      "repos_url": "https://api.github.com/users/mmahadevan108/repos",
      "events_url": "https://api.github.com/users/mmahadevan108/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmahadevan108/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 642056257,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20preceding%20PR",
        "name": "needs: preceding PR",
        "color": "fef250",
        "default": false
      },
      {
        "id": 144902129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20work",
        "name": "needs: work",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 20,
    "created_at": "2018-04-12T17:04:05Z",
    "updated_at": "2018-05-24T15:28:11Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6622",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6622",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6622.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6622.patch"
    },
    "body": "Signed-off-by: Mahesh Mahadevan <mahesh.mahadevan@nxp.com>\r\n\r\n### Description\r\nAdd Thread support for FRDM KW41Z board. This was tested using the [mesh-minimal](https://github.com/ARMmbed/mbed-os-example-mesh-minimal) application. \r\n<!-- \r\n    Required\r\n    Add here detailed changes summary, testing results, dependencies \r\n    Good example: https://os.mbed.com/docs/latest/reference/guidelines.html#workflow (Pull request template)\r\n-->\r\n\r\n\r\n### Pull request type\r\n\r\n<!-- \r\n    Required\r\n    Please tick only one of the following types. Do not tick more or change the layout.\r\n\r\n    [ ] Fix\r\n    [ ] Refactor\r\n    [ ] New target\r\n    [X] Feature\r\n    [ ] Breaking change\r\n-->\r\n\r\n[ ] Fix  \r\n[ ] Refactor  \r\n[ ] New target  \r\n[X] Feature  \r\n[ ] Breaking change\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6617",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6617/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6617/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6617/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6617",
    "id": 313587659,
    "number": 6617,
    "title": "Request to incorporate the revision of RTX5 for Cortex-A",
    "user": {
      "login": "TomoYamanaka",
      "id": 9958200,
      "avatar_url": "https://avatars3.githubusercontent.com/u/9958200?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomoYamanaka",
      "html_url": "https://github.com/TomoYamanaka",
      "followers_url": "https://api.github.com/users/TomoYamanaka/followers",
      "following_url": "https://api.github.com/users/TomoYamanaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomoYamanaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomoYamanaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomoYamanaka/subscriptions",
      "organizations_url": "https://api.github.com/users/TomoYamanaka/orgs",
      "repos_url": "https://api.github.com/users/TomoYamanaka/repos",
      "events_url": "https://api.github.com/users/TomoYamanaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomoYamanaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345118,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20rtos",
        "name": "component: rtos",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-04-12T06:02:04Z",
    "updated_at": "2018-05-23T07:20:10Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\nThe problem that program abort occurs when run `Mbed Cloud Client` sample program on GR-PEACH / GR-LYCHEE.\r\nAs a result of our analysis, we faced unexpected behavior if interrupt is fired during `SVC` in RTX5.\r\nThere are three problem points in each `irq_ca.s` file, We already submitted the issue to Arm CMSIS_5 team and asked the revise to them.\r\nFor your information, it seems that this symptom occurs only Cortex-A.\r\nThe following commit that relating fix is incorporated into CMSIS-5 repo.\r\n https://github.com/ARM-software/CMSIS_5/commit/815dfadcec8465a9185a51bb1566bc40e08b7752\r\n https://github.com/ARM-software/CMSIS_5/commit/0b7a4a9f170f6693db98c1fab15318ec7fd28510\r\n\r\nSince we confirmed that this multi interrupt issue was resolved, could you cherry-pick their commit to mbed-os master branch ?\r\n\r\n\r\n\r\n\r\n\r\n\r\n- Type: Bug \r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nRZ_A1H | GR_LYCHEE\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6597",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6597/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6597/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6597/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6597",
    "id": 313223315,
    "number": 6597,
    "title": "Reinforce usage of gcc v6 as gcc v5 doesn't work",
    "user": {
      "login": "MarceloSalazar",
      "id": 1931553,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarceloSalazar",
      "html_url": "https://github.com/MarceloSalazar",
      "followers_url": "https://api.github.com/users/MarceloSalazar/followers",
      "following_url": "https://api.github.com/users/MarceloSalazar/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarceloSalazar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarceloSalazar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarceloSalazar/subscriptions",
      "organizations_url": "https://api.github.com/users/MarceloSalazar/orgs",
      "repos_url": "https://api.github.com/users/MarceloSalazar/repos",
      "events_url": "https://api.github.com/users/MarceloSalazar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarceloSalazar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-11T08:32:54Z",
    "updated_at": "2018-04-11T11:11:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug & need enhancement\r\n- Priority:  Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\nDuring training, we've found out that some developers had gcc v5 installed and were able to compile/link and program the target. However, the app doesn't work.\r\n\r\n**Target**\r\nK64F and others\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n\r\ngcc v5 --> problem\r\ngcc v6 --> supported & works fine\r\nhttps://os.mbed.com/docs/v5.8/tools/index.html\r\n\r\n**Expected behavior**\r\n\r\nWhen using gcc v5, the Mbed tools should display a message saying that toolchain is not supported.\r\n\r\n**Actual behavior**\r\n\r\nIt silently compiles and links, giving no indication to the user that there is a problem with an unsupported toolchain that won't work.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6594",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6594/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6594/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6594/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6594",
    "id": 313144802,
    "number": 6594,
    "title": "LoRa Phy AU915 channel parameters not being used, causing Up-links at 500khz",
    "user": {
      "login": "tpet93",
      "id": 26135231,
      "avatar_url": "https://avatars0.githubusercontent.com/u/26135231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tpet93",
      "html_url": "https://github.com/tpet93",
      "followers_url": "https://api.github.com/users/tpet93/followers",
      "following_url": "https://api.github.com/users/tpet93/following{/other_user}",
      "gists_url": "https://api.github.com/users/tpet93/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tpet93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tpet93/subscriptions",
      "organizations_url": "https://api.github.com/users/tpet93/orgs",
      "repos_url": "https://api.github.com/users/tpet93/repos",
      "events_url": "https://api.github.com/users/tpet93/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tpet93/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-04-11T01:43:41Z",
    "updated_at": "2018-04-11T12:35:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "\r\n### Description\r\n- Type: Bug \r\n- Priority:  Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\nI was having issues with the min and max data rates for each channel for the AU915 Region.\r\n\r\nIn the function ```LoRaPHY::enabled_channel_count```,\r\nThe values returned by \r\n```phy_params.channels.channel_list[i].dr_range.fields.max``` and ```phy_params.channels.channel_list[i].dr_range.fields.min```\r\nappear to be semi-random as if not initialized.\r\n\r\ncausing the valid channels for a specific data-rate to return unexpected values.\r\n\r\nThis frequently causes the up-links to be sent on one of the 500khz channels (64-71).\r\n\r\nMost other regions include the block of code below in LoRaPHYXXXXX.cpp\r\naround line 255 above the line     ```phy_params.bands.table = (void *) bands;```\r\n\r\n```\r\n    // set default channels\r\n    phy_params.channels.channel_list = channels;\r\n    phy_params.channels.channel_list_size = AU915_MAX_NB_CHANNELS;\r\n    phy_params.channels.mask = channel_mask;\r\n    phy_params.channels.default_mask = default_channel_mask;\r\n    phy_params.channels.mask_size = AU915_CHANNEL_MASK_SIZE;\r\n```\r\n\r\nadding the above block of code into LoRaPHYAU915.cpp around line 266 appears to fix the issue.\r\n\r\n-----------------------------------------------------------------"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6591",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6591/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6591/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6591/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6591",
    "id": 313012470,
    "number": 6591,
    "title": "lp_ticker and RTC tests failing for platforms based on STM32F412xx",
    "user": {
      "login": "ashok-rao",
      "id": 17567812,
      "avatar_url": "https://avatars1.githubusercontent.com/u/17567812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashok-rao",
      "html_url": "https://github.com/ashok-rao",
      "followers_url": "https://api.github.com/users/ashok-rao/followers",
      "following_url": "https://api.github.com/users/ashok-rao/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashok-rao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashok-rao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashok-rao/subscriptions",
      "organizations_url": "https://api.github.com/users/ashok-rao/orgs",
      "repos_url": "https://api.github.com/users/ashok-rao/repos",
      "events_url": "https://api.github.com/users/ashok-rao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashok-rao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 15,
    "created_at": "2018-04-10T17:08:11Z",
    "updated_at": "2018-05-04T07:27:38Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug | Question\r\n- Related PR's: #6511 and #6423 \r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nMTB_USI_BN-BM-22 and MTB_ADV_WISE_1530\r\n\r\n**Toolchain:**\r\nARM\r\n\r\n**Expected behavior**\r\nAll greentea tests should pass for the targets.\r\n\r\n**Actual behavior**\r\nLP_Ticker, LP_timer and RTC tests are failing on ARMCC 5.06 update 3.\r\n\r\n**Steps to reproduce**\r\nRun greentea on these 2 targets with ARMCC\r\n\r\n**Greentea logs are attached in the PR**: https://github.com/ARMmbed/mbed-os/pull/6511#issue-178369355 \r\nAnd failing tests for ADV_WISE_1530 are added as comments here: https://github.com/ARMmbed/mbed-os/pull/6423#issuecomment-377179117"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6589",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6589/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6589/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6589/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6589",
    "id": 312893537,
    "number": 6589,
    "title": "Add compiler in test result summary",
    "user": {
      "login": "bcostm",
      "id": 5803932,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5803932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bcostm",
      "html_url": "https://github.com/bcostm",
      "followers_url": "https://api.github.com/users/bcostm/followers",
      "following_url": "https://api.github.com/users/bcostm/following{/other_user}",
      "gists_url": "https://api.github.com/users/bcostm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bcostm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bcostm/subscriptions",
      "organizations_url": "https://api.github.com/users/bcostm/orgs",
      "repos_url": "https://api.github.com/users/bcostm/repos",
      "events_url": "https://api.github.com/users/bcostm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bcostm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-04-10T12:07:11Z",
    "updated_at": "2018-04-13T08:57:24Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\nAt the end of the generated test report (mbed5 or mbed2) there is mention of the number of FAIL/OK/TIMEOUT/SKIPPED... like this:\r\n\r\n`6 FAIL / 56 SKIPPED / 1450 OK / 3 ERROR` for mbed5\r\nor\r\n`Result: 3 OK / 2 FAIL` for mbed2\r\n\r\nIt would be interesting to detail this summary per compiler.\r\n\r\nSomething like for mbed5:\r\n\r\n```\r\nARM: 2 FAIL / 10 OK / 3 TIMEOUT\r\nGCC_ARM: 10 OK / 5 TIMEOUT\r\nIAR: 15 OK\r\n```\r\nand for mbed2:\r\n`Result ARM: 3 OK / 2 FAIL`\r\n`Result GCC_ARM: 5 OK`\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6585",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6585/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6585/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6585/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6585",
    "id": 312849322,
    "number": 6585,
    "title": "CMake exported build fails with multiple --source arguments",
    "user": {
      "login": "vidavidorra",
      "id": 12871315,
      "avatar_url": "https://avatars1.githubusercontent.com/u/12871315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vidavidorra",
      "html_url": "https://github.com/vidavidorra",
      "followers_url": "https://api.github.com/users/vidavidorra/followers",
      "following_url": "https://api.github.com/users/vidavidorra/following{/other_user}",
      "gists_url": "https://api.github.com/users/vidavidorra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vidavidorra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vidavidorra/subscriptions",
      "organizations_url": "https://api.github.com/users/vidavidorra/orgs",
      "repos_url": "https://api.github.com/users/vidavidorra/repos",
      "events_url": "https://api.github.com/users/vidavidorra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vidavidorra/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-04-10T09:47:59Z",
    "updated_at": "2018-04-19T21:10:57Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Bug\r\n- Related issue: #6143 and ARMmbed/mbed-cli#590\r\n- Priority: Blocker\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nAll targets (e.g. `TARGET_NUCLEO_F103RB`)\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n7.2.1\r\n\r\n**mbed-cli version:** \r\n1.5.0\r\n\r\n**mbed-os sha:**\r\n192a8e509\r\n\r\n---------------------------------------------------------------\r\nFolder structure I use for my project:\r\n```\r\n├── project.cmake\r\n├── src\r\n│   └── main.cpp\r\n└── submodules\r\n    ├── mbed-memory-status\r\n    └── mbed-os\r\n```\r\n\r\n**Expected behavior**\r\n```\r\nmbed config MBED_OS_DIR submodules/mbed-os\r\nmbed export -i make_gcc_arm -m NUCLEO_F103RB --source src --source submodules --build .\r\nmake -j\r\n```\r\n\r\nThis generates the file `src.elf` since it automatically names the project what I give as the first `--source`. This builds successfully.\r\n\r\n**Actual behavior**\r\n\r\n```\r\nmbed config MBED_OS_DIR submodules/mbed-os\r\nmbed export -i cmake_gcc_arm -m NUCLEO_F103RB --source src --source submodules --build .\r\ncmake .\r\nmake all\r\n\r\n...\r\n\r\n[100%] Linking CXX executable src\r\n/usr/local/Cellar/gcc-arm-none-eabi-74/20171218/bin/../lib/gcc/arm-none-eabi/7.2.1/../../../../arm-none-eabi/bin/ld: cannot open output file src: Is a directory\r\ncollect2: error: ld returned 1 exit status\r\n```\r\nTries to generate the file `src` which results in an error in the linker since it has the same name as my `src` folder with no extension. In my opinion this file should get the `elf` extension, which would resolve the problem. I also expect to be able to specify the project name to the export command, which at the moment is not possible according to the mbed-cli [arguments](https://github.com/ARMmbed/mbed-cli/blob/master/mbed/mbed.py#L2578-L2585) to the export tool.\r\n\r\n**Steps to reproduce**\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\nThe workaround I found to do mostly what I want is to add a line in `project.cmake` that changes the `OUTPUT_NAME` of the target property to the name specified as the first `--source` argument.\r\n\r\n```\r\nset_target_properties(src PROPERTIES OUTPUT_NAME \"mbed-os-example\")\r\n```\r\nbut as said, that is merely a workaround\r\n\r\n**Reason to enhance or problem with existing solution**\r\nBuild (linker) files on CMake export with multiple `--source` arguments\r\n\r\n**Suggested enhancement**\r\nI suggest adding a argument to the mbed-cli (and other parts of the export) to specify the project name e.g. `-p mbed-os-example` or `--project mbed-os-example` that adds a line to the `CMakeLists.txt` to specify the output name. Ideally the output extension for the CMake export should be changed to `elf` like the `make_gcc_arm` export does.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6583",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6583/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6583/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6583/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6583",
    "id": 312740750,
    "number": 6583,
    "title": "K64F i2c Method Error",
    "user": {
      "login": "JAICHANGPARK",
      "id": 19484515,
      "avatar_url": "https://avatars0.githubusercontent.com/u/19484515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JAICHANGPARK",
      "html_url": "https://github.com/JAICHANGPARK",
      "followers_url": "https://api.github.com/users/JAICHANGPARK/followers",
      "following_url": "https://api.github.com/users/JAICHANGPARK/following{/other_user}",
      "gists_url": "https://api.github.com/users/JAICHANGPARK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JAICHANGPARK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JAICHANGPARK/subscriptions",
      "organizations_url": "https://api.github.com/users/JAICHANGPARK/orgs",
      "repos_url": "https://api.github.com/users/JAICHANGPARK/repos",
      "events_url": "https://api.github.com/users/JAICHANGPARK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JAICHANGPARK/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-10T01:22:04Z",
    "updated_at": "2018-04-11T01:21:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "\r\n### Description\r\n- Type: Bug | Question\r\n\r\n## Bug\r\n\r\n**Target**\r\nK64F|Hexiwear\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**Now I'm Using hexiwear in Mbed online compiler **\r\nI'd like to disable I2C 2 Driver in MK64 MPU.\r\n\r\nFirst, I import <fsl_i2c.h>\r\nThen, I called <I2C_MasterDeinit(I2C2);>\r\n\r\n```\r\n#include \"mbed.h\"\r\n#include \"fsl_i2c.h\"\r\nDigitalOut led1(LED1);\r\n\r\n// main() runs in its own thread in the OS\r\nint main() {\r\n    \r\n    I2C_MasterDeinit(I2C2);\r\n    while (true) {\r\n        led1 = !led1;\r\n        wait(0.5);\r\n    }\r\n}\r\n```\r\n\r\n I also tried <I2C_Enable()> Method ( Same Error below)\r\nHow to fix this problem?\r\n\r\n## Code Result\r\n\r\n```\r\n++ MbedOS Fault Handler ++\r\n\r\nFaultType: HardFault\r\n\r\nContext:\r\nR0   : 400E6000\r\nR1   : 00000000\r\nR2   : 00000000\r\nR3   : 00000000\r\nR4   : 00000000\r\nR5   : 00000000\r\nR6   : 00000000\r\nR7   : 00000000\r\nR8   : 00000000\r\nR9   : 00000000\r\nR10  : 00000000\r\nR11  : 00000000\r\nR12  : 00000001\r\nSP   : 20001D40\r\nLR   : 000058D7\r\nPC   : 00004132\r\nxPSR : 61000000\r\nPSP  : 20001CD8\r\nMSP  : 2002FFD8\r\nCPUID: 410FC241\r\nHFSR : 40000000\r\nMMFSR: 00000000\r\nBFSR : 00000082\r\nUFSR : 00000000\r\nDFSR : 00000008\r\nAFSR : 00000000\r\nSHCSR: 00000000\r\nBFAR : 400E6002\r\nMode : Thread\r\nPriv : Privileged\r\nStack: PSP\r\n\r\nThread Info:\r\nCurrent:\r\nState: 00000002 EntryFn: 00007201 Stack Size: 00001000 Mem: 20000D48 SP: 20001D08\r\nNext:\r\nState: 00000002 EntryFn: 00007201 Stack Size: 00001000 Mem: 20000D48 SP: 20001D08\r\nWait Threads:\r\nState: 00000083 EntryFn: 00006E29 Stack Size: 00000300 Mem: 20000548 SP: 200007D8\r\nDelay Threads:\r\nIdle Thread:\r\nState: 00000001 EntryFn: 00006369 Stack Size: 00000200 Mem: 20000348 SP: 20000508\r\n\r\n-- MbedOS Fault Handler \r\n\r\n> \r\n\r\n```\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6582",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6582/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6582/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6582/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6582",
    "id": 312697022,
    "number": 6582,
    "title": "Implement zoomable html-flamegraph memap output",
    "user": {
      "login": "theotherjimmy",
      "id": 685409,
      "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theotherjimmy",
      "html_url": "https://github.com/theotherjimmy",
      "followers_url": "https://api.github.com/users/theotherjimmy/followers",
      "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
      "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
      "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
      "repos_url": "https://api.github.com/users/theotherjimmy/repos",
      "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147112891,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20review",
        "name": "needs: review",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 21,
    "created_at": "2018-04-09T21:38:21Z",
    "updated_at": "2018-05-08T15:45:09Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6582",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6582",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6582.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6582.patch"
    },
    "body": "### Description\r\n\r\nSample: http://mbed-os.s3-eu-west-1.amazonaws.com/builds/fat-fs_map.html\r\n\r\n ### Pull request type\r\n\r\n[ ] Fix  \r\n[X] Refactor  \r\n[ ] New target  \r\n[ ] Feature  \r\n[ ] Breaking change"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6581",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6581/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6581/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6581/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6581",
    "id": 312614518,
    "number": 6581,
    "title": "custom_targets.json and modular target board support packages",
    "user": {
      "login": "loverdeg-ep",
      "id": 24318071,
      "avatar_url": "https://avatars0.githubusercontent.com/u/24318071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loverdeg-ep",
      "html_url": "https://github.com/loverdeg-ep",
      "followers_url": "https://api.github.com/users/loverdeg-ep/followers",
      "following_url": "https://api.github.com/users/loverdeg-ep/following{/other_user}",
      "gists_url": "https://api.github.com/users/loverdeg-ep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loverdeg-ep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loverdeg-ep/subscriptions",
      "organizations_url": "https://api.github.com/users/loverdeg-ep/orgs",
      "repos_url": "https://api.github.com/users/loverdeg-ep/repos",
      "events_url": "https://api.github.com/users/loverdeg-ep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loverdeg-ep/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-09T17:14:57Z",
    "updated_at": "2018-05-22T12:57:05Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Question, possible enhancement\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n@theotherjimmy @0xc0170 \r\n\r\n## Background\r\n\r\nAssume I create a custom target and want to use that target in multiple applications.\r\nThe most elegant approach I can think of with my limited understanding of the config system, would be to create a git repository that contains the following:\r\n\r\n* PinNames.h\r\n* device.h\r\n* custom_targets.json\r\n* git submodules of any of the board's IC drivers not already included with mbedOS\r\n\r\nThis repository would then be imported as a git submodule of any applications I develop for the board.\r\n\r\n(or, if the application is hardware agnostic enough, I might create a new repository that includes both the application and BSP as  git submodules)\r\n\r\nKnown Issues to using this approach:\r\n* custom_targets.json needs to be in the root of the \"project\"\r\n* managing mbedOS version dependencies \r\n\r\n## Questions\r\n\r\n* What currently is the cleanest way to accomplish modular custom target support for an application?\r\n\r\n* What, if anything, could be done to 'enhance' custom target support?\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6578",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6578/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6578/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6578/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6578",
    "id": 312542344,
    "number": 6578,
    "title": "LPC1768, hard fault when calling fopen() after Ethernet connect",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-09T13:59:03Z",
    "updated_at": "2018-04-13T09:14:50Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nLPC1768\r\n\r\n**Toolchain:**\r\nARM\r\n\r\n**mbed-os sha:**\r\nMbed OS 5.4 - 5.8, Mbed OS 5.3 and Mbed 2 not affected.\r\n\r\n**Expected behavior**\r\n\r\nCalling `fopen()` after calling `connect` on the ethernet interface does not throw an error.\r\n\r\n**Actual behavior**\r\n\r\nIt hard faults.\r\n\r\n**Steps to reproduce**\r\n\r\nExample program is here https://os.mbed.com/questions/80658/HardFault-occurs-when-fopen-is-called-af/\r\n\r\nUser verified working behavior on Mbed 2 and Mbed OS 5.3; broken behavior on 5.4 and 5.8.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6571",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6571/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6571/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6571/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6571",
    "id": 312470128,
    "number": 6571,
    "title": "Single thread mode",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-09T10:06:32Z",
    "updated_at": "2018-04-10T08:39:53Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\nMbed RTOS has a significant RAM overhead, even when non of the RTOS features are used. A K64F running mbed-os-example-blinky uses 6.3K more static RAM, even though it does not use any of the RTOS features. I suspect this memory goes into setting up all the RTOS contexts. What I'd like to see is some configuration option - not enabled by default - which still keeps the RTOS and features such as Semaphores, but without the RAM overhead. We could call it single thread mode. In addition, we could offer to enable newlib-nano / the ARMCC equivalent for these devices, shrinking memory usage even further.\r\n\r\nThis would make it easier to run Mbed OS on smaller targets like the DISCO-LRWAN1 which has 20K SRAM, and uses 19K of this when you have the LoRaWAN stack loaded; or even the xDot which has 32K SRAM. Often you want to squeeze as much out of these MCUs as possible, and switching to a single thread model is not such a bad idea if that means you can save 10K of RAM.\r\n\r\nHere are some numbers (mbed-os-example-blinky on K64F with `printf` used, running a develop profile):\r\n\r\n| Configuration  | Static RAM |\r\n| ------------- | ------------- |\r\n| With RTOS  | 12264  |\r\n| Without RTOS  | 5876  |\r\n| Without RTOS + newlib-nano | 3276 |\r\n\r\n**Suggested enhancement**\r\n\r\nIntroduce a single thread mode. All RTOS functions (except Thread?) should still be available, so this will work with LwIP and the Ethernet interfaces where RTOS functions are used for synchronisation. But memory usage should be similar to running without the RTOS.\r\n\r\n**Pros**\r\n\r\nMore space on device, without having to rewrite some code because all the RTOS / synchronisation features are lost. F.e. Semaphore is very useful for switching between ISR and main thread, but is no longer available when removing the RTOS right now. Also a good way to show OEMs how to shrink down their application, and gives us a supported path for smaller MCUs.\r\n\r\n**Cons**\r\n\r\nCould maybe lead to people writing non-thread safe drivers.\r\n\r\n/cc @geky @marcuschangarm @deepikabhavnani @ithinuel "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6563",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6563/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6563/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6563/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6563",
    "id": 312070777,
    "number": 6563,
    "title": "Export to EmBitz problem",
    "user": {
      "login": "Testato",
      "id": 6893841,
      "avatar_url": "https://avatars1.githubusercontent.com/u/6893841?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Testato",
      "html_url": "https://github.com/Testato",
      "followers_url": "https://api.github.com/users/Testato/followers",
      "following_url": "https://api.github.com/users/Testato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Testato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Testato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Testato/subscriptions",
      "organizations_url": "https://api.github.com/users/Testato/orgs",
      "repos_url": "https://api.github.com/users/Testato/repos",
      "events_url": "https://api.github.com/users/Testato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Testato/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      },
      {
        "id": 534372905,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20online%20deployment",
        "name": "type: online deployment",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-04-06T18:19:44Z",
    "updated_at": "2018-05-22T22:40:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I tried to export from Online Compiler to EmBitz this project\r\nhttps://os.mbed.com/users/testato/code/Testato-mbed-dev-Bluepill/\r\n\r\nbut i received this error\r\n![capture](https://user-images.githubusercontent.com/6893841/38437268-35a8739a-39d7-11e8-9619-94cd19153f3d.JPG)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6562",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6562/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6562/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6562/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6562",
    "id": 311994588,
    "number": 6562,
    "title": "Network interface functionality",
    "user": {
      "login": "DrakoshaNarkosha",
      "id": 38135449,
      "avatar_url": "https://avatars2.githubusercontent.com/u/38135449?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrakoshaNarkosha",
      "html_url": "https://github.com/DrakoshaNarkosha",
      "followers_url": "https://api.github.com/users/DrakoshaNarkosha/followers",
      "following_url": "https://api.github.com/users/DrakoshaNarkosha/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrakoshaNarkosha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrakoshaNarkosha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrakoshaNarkosha/subscriptions",
      "organizations_url": "https://api.github.com/users/DrakoshaNarkosha/orgs",
      "repos_url": "https://api.github.com/users/DrakoshaNarkosha/repos",
      "events_url": "https://api.github.com/users/DrakoshaNarkosha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrakoshaNarkosha/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-06T14:20:57Z",
    "updated_at": "2018-05-22T13:00:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Enhancement | Question\r\n- Priority: Major\r\n\r\n**Target**\r\nAll\r\n\r\nI want to check WiFi connection in STA mode on U-Blox ODIN-W2 modem. I found, that function \r\n<code>\r\nnsapi_connection_status_t NetworkInterface::get_connection_status() const\r\n</code>\r\nreturn UNSUPPORTED_FEATURE. \r\nAfter that i tryed to use callbacks, but function attach() is empty!!! \r\n<code>\r\nvoid NetworkInterface::attach(mbed::Callback<void(nsapi_event_t, intptr_t)> status_cb)\r\n{\r\n}\r\n</code>\r\nIs there any updates of NetworkInterface class in future? Or there is another way to check connection to AP in STA mode?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6560",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6560/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6560/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6560/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6560",
    "id": 311988117,
    "number": 6560,
    "title": "HardFault on return from main() since mbed-os-5.8.0",
    "user": {
      "login": "bmcdonnell-ionx",
      "id": 34172339,
      "avatar_url": "https://avatars2.githubusercontent.com/u/34172339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmcdonnell-ionx",
      "html_url": "https://github.com/bmcdonnell-ionx",
      "followers_url": "https://api.github.com/users/bmcdonnell-ionx/followers",
      "following_url": "https://api.github.com/users/bmcdonnell-ionx/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmcdonnell-ionx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmcdonnell-ionx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmcdonnell-ionx/subscriptions",
      "organizations_url": "https://api.github.com/users/bmcdonnell-ionx/orgs",
      "repos_url": "https://api.github.com/users/bmcdonnell-ionx/repos",
      "events_url": "https://api.github.com/users/bmcdonnell-ionx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmcdonnell-ionx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-04-06T14:02:55Z",
    "updated_at": "2018-05-22T13:01:44Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major | Minor\r\n\r\nIn previous versions through `mbed-os-5.7.7`, the OS would handle a return from `main()` gracefully. As of `mbed-os-5.8.0`, doing so produces a Hard Fault.\r\n\r\nI know it is typical in embedded systems not to return from `main()`, as there is (at least conceptually) nothing to return to. **Please EITHER**\r\n- **patch `mbed-os-5.8` to produce the previous behavior**, OR\r\n- **update the documentation and all examples to reflect the current behavior.**\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nLPC4088\r\nEDIT: Embedded Artists' [LPC4088 QuickStart Board](https://www.embeddedartists.com/products/boards/lpc4088_qsb.php)\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\nWhatever comes with MCUXpresso IDE v10.1.1 [Build 606] [2018-01-02].\r\n\r\n**mbed-cli version:** \r\n1.5.0\r\nwith https://github.com/ARMmbed/mbed-cli/pull/642\r\n\r\n**mbed-os sha:**\r\n`addec7ba1 (HEAD -> mbed-os-5.8, tag: mbed-os-5.8.1, tag: latest, origin/mbed-os-5.8) Merge pull request #6461 from ARMmbed/release-candidate`\r\n\r\n**DAPLink version:**\r\n\r\n**Expected behavior**\r\n\r\nEither:\r\n- Mbed OS handles `return` from `main()` gracefully as before, OR\r\n- all examples do not `return` from `main()`, and documentation explains why.\r\n\r\n**Actual behavior**\r\n\r\nFor example, using the latest [mbed-os-example-filesystem](https://github.com/ARMmbed/mbed-os-example-filesystem) (with `mbed-os-5.8.1`), I get this console output at the end.\r\n\r\n```\r\n[snip]\r\nUnmounting... OK\r\nMbed OS filesystem example done!\r\n++ MbedOS Fault Handler ++\r\n\r\nFaultType: HardFault\r\n\r\nContext:\r\nR0   : 100020D0\r\nR1   : 00000000\r\nR2   : 10000E2C\r\nR3   : 10000110\r\nR4   : 00000000\r\nR5   : 00000000\r\nR6   : 00000000\r\nR7   : 00000000\r\nR8   : 00000000\r\nR9   : 00000000\r\nR10  : 00000000\r\nR11  : 00000000\r\nR12  : 10003090\r\nSP   : 1000FFB0\r\nLR   : FFFFFFED\r\nPC   : 00003450\r\nxPSR : 410F000B\r\nPSP  : 100030B0\r\nMSP  : 1000FF90\r\nCPUID: 410FC241\r\nHFSR : 40000000\r\nMMFSR: 00000000\r\nBFSR : 00000004\r\nUFSR : 00000000\r\nDFSR : 00000008\r\nAFSR : 00000000\r\nSHCSR: 00000080\r\nMode : Handler\r\nPriv : Privileged\r\nStack: MSP\r\n\r\nThread Info:\r\nCurrent:\r\nState: 00000000 EntryFn: 0000349B Stack Size: 00000000 Mem: 00001B39 SP: 0000348B\r\nNext:\r\nState: 00000002 EntryFn: 00007E5D Stack Size: 00000200 Mem: 10000EC0 SP: 10001080\r\nWait Threads:\r\nState: 00000083 EntryFn: 000076ED Stack Size: 00000300 Mem: 100010C0 SP: 10001328\r\nDelay Threads:\r\nIdle Thread:\r\nState: 00000002 EntryFn: 00007E5D Stack Size: 00000200 Mem: 10000EC0 SP: 10001080\r\n\r\n-- MbedOS Fault Handler --\r\n```\r\n\r\nParsing that with [crash_log_parser](https://github.com/ARMmbed/mbed-os/tree/master/tools/debug_tools/crash_log_parser), I get this.\r\n\r\n```\r\n$ ./crash_log_parser.py crash-log--mbed-os-example-filesystem.txt mbed-os-example-filesystem.axf mbed-os-example-filesystem.map\r\n\r\nCrash Info:\r\n        Crash location = SVC_ContextSwitch [0x00003450] (based on PC value)\r\n        Caller location = __exidx_start [0xFFFFFFED] (based on LR value)\r\n        Stack Pointer at the time of crash = [1000FFB0]\r\n        Target and Fault Info:\r\n                Processor Arch: ARM-V7M or above\r\n                Processor Variant: C24\r\n                Forced exception, a fault with configurable priority has been escalated to HardFault\r\n                Imprecise data access error has occurred\r\n```\r\n\r\n**Steps to reproduce**\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6555",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6555/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6555/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6555/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6555",
    "id": 311805927,
    "number": 6555,
    "title": "Update the STM32 USB driver to the new API",
    "user": {
      "login": "c1728p9",
      "id": 2916772,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2916772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/c1728p9",
      "html_url": "https://github.com/c1728p9",
      "followers_url": "https://api.github.com/users/c1728p9/followers",
      "following_url": "https://api.github.com/users/c1728p9/following{/other_user}",
      "gists_url": "https://api.github.com/users/c1728p9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/c1728p9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/c1728p9/subscriptions",
      "organizations_url": "https://api.github.com/users/c1728p9/orgs",
      "repos_url": "https://api.github.com/users/c1728p9/repos",
      "events_url": "https://api.github.com/users/c1728p9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/c1728p9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147112891,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20review",
        "name": "needs: review",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-04-05T23:47:21Z",
    "updated_at": "2018-05-23T16:08:28Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6555",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6555",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6555.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6555.patch"
    },
    "body": "Take the code from mbed-os\\features\\unsupported\\USBDevice\\targets\\TARGET_STM as a starting point and use it to fill in the USBPhy template for STM32 devices.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6551",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6551/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6551/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6551/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6551",
    "id": 311737071,
    "number": 6551,
    "title": "VBLUNO51 variants fail have a configuration error in target definition",
    "user": {
      "login": "theotherjimmy",
      "id": 685409,
      "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theotherjimmy",
      "html_url": "https://github.com/theotherjimmy",
      "followers_url": "https://api.github.com/users/theotherjimmy/followers",
      "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
      "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
      "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
      "repos_url": "https://api.github.com/users/theotherjimmy/repos",
      "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-04-05T19:21:00Z",
    "updated_at": "2018-04-06T15:25:24Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "\r\n### Description\r\n- Type: Bug\r\n- Priority: Major?\r\n\r\n**Target**\r\nvbluno51_legacy|vbluno51_boot|vbluno51_ota\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR| online compiler\r\n\r\n**Toolchain version:**\r\n\r\n**mbed-cli version:** \r\nAll\r\n\r\n**mbed-os sha:**\r\n5.8.0 (ad284b280) first bad release: 5.7.4. Added by: dba38b62509f2c0a5067f2d7bdca469d63f0fb3e\r\n\r\n**Actual behavior**\r\n```\r\n# mbed compile -t gcc_arm -m vbluno51_ota\r\n[ERROR] Attempt to override undefined parameter 'uart_hwfc' in 'target:VBLUNO51_OTA'\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6546",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6546/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6546/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6546/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6546",
    "id": 311607842,
    "number": 6546,
    "title": "CRC Thread safety",
    "user": {
      "login": "daniel-cesarini-tridonic-com",
      "id": 16016924,
      "avatar_url": "https://avatars0.githubusercontent.com/u/16016924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daniel-cesarini-tridonic-com",
      "html_url": "https://github.com/daniel-cesarini-tridonic-com",
      "followers_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/followers",
      "following_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/following{/other_user}",
      "gists_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/subscriptions",
      "organizations_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/orgs",
      "repos_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/repos",
      "events_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daniel-cesarini-tridonic-com/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-04-05T13:22:25Z",
    "updated_at": "2018-04-18T10:19:35Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Enhancement | Question\r\n- Priority: Major\r\n\r\n## Enhancement/Question\r\n\r\n**Reason to enhance or problem with existing solution**\r\nIn the current implementation of CRC in mbed-os thread safety is not guaranteed: \r\nhttps://github.com/ARMmbed/mbed-os/pull/5911#issuecomment-363901405\r\n\r\n**How to?**\r\nHow do you envision to solve the issue?\r\n\r\n**Suggested enhancement**\r\nWe implemented some time ago a CRC Class (https://github.com/ARMmbed/mbed-os/pull/3443/files) that deals with Thread safety by storing intermediate results in a local variables, such that no \"lower level\" context is needed, and only the time of accessing the lower layers should be mutexed / protected.\r\nIs that approach fitting your needs?\r\n\r\n@deepikabhavnani @sg- @MarceloSalazar \r\n\r\nFYI: @markus-becker-tridonic-com\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6545",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6545/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6545/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6545/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6545",
    "id": 311506898,
    "number": 6545,
    "title": "DTLS handshake fails on Ublox ODIN-W2",
    "user": {
      "login": "juhaylinen",
      "id": 32567893,
      "avatar_url": "https://avatars1.githubusercontent.com/u/32567893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhaylinen",
      "html_url": "https://github.com/juhaylinen",
      "followers_url": "https://api.github.com/users/juhaylinen/followers",
      "following_url": "https://api.github.com/users/juhaylinen/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhaylinen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhaylinen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhaylinen/subscriptions",
      "organizations_url": "https://api.github.com/users/juhaylinen/orgs",
      "repos_url": "https://api.github.com/users/juhaylinen/repos",
      "events_url": "https://api.github.com/users/juhaylinen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhaylinen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 531808219,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20ublox",
        "name": "devices: ublox",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2018-04-05T07:54:09Z",
    "updated_at": "2018-05-23T09:32:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nUBLOX_EVK_ODIN_W2\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**mbed-cli version:** \r\n(`1.2.2`)\r\n\r\n**mbed-os sha:**\r\nad284b280 (mbed-os-5.8.0)\r\nor\r\naddec7ba1 (mbed-os-5.8.1)\r\n\r\n**Expected behavior**\r\nDTLS handshake works and device connects to mbed cloud\r\n\r\n**Actual behavior**\r\nDTLS handshake fails and device fails to connect to mbed cloud\r\n\r\n**Steps to reproduce**\r\nclone https://github.com/ARMmbed/mbed-cloud-client-example\r\n\r\nEdit file mbed_cloud_client_user_config.h to change transport mode from TCP to UDP\r\n-#define MBED_CLOUD_CLIENT_TRANSPORT_MODE_TCP\r\n+#define MBED_CLOUD_CLIENT_TRANSPORT_MODE_UDP\r\n\r\nupdate mbed-os version to 5.8.0 or 5.8.1\r\ncompile the client example for UBLOX_EVK_ODIN_W2\r\n\r\n---------------------------------------------------------------\r\nConnection works if TCP is used\r\nWorkaround for UDP connection issue is to disable SHA256 hardware acceleration from file\r\nhttps://github.com/ARMmbed/mbed-os/blob/master/features/mbedtls/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F439xI/mbedtls_device.h\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6543",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6543/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6543/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6543/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6543",
    "id": 311487562,
    "number": 6543,
    "title": "Build error occurs at SysTimer file when defining LPTICKER on Cortex-A",
    "user": {
      "login": "TomoYamanaka",
      "id": 9958200,
      "avatar_url": "https://avatars3.githubusercontent.com/u/9958200?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomoYamanaka",
      "html_url": "https://github.com/TomoYamanaka",
      "followers_url": "https://api.github.com/users/TomoYamanaka/followers",
      "following_url": "https://api.github.com/users/TomoYamanaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomoYamanaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomoYamanaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomoYamanaka/subscriptions",
      "organizations_url": "https://api.github.com/users/TomoYamanaka/orgs",
      "repos_url": "https://api.github.com/users/TomoYamanaka/repos",
      "events_url": "https://api.github.com/users/TomoYamanaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomoYamanaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-04-05T06:31:29Z",
    "updated_at": "2018-04-19T19:12:51Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\nCurrently, Renesas are implementing **Low Power Ticker** feature that was introduced at last week's workshop.\r\nOur mbed board's H/W incorporates Cortex-A, however, we faced the below build error because it seem that `SysTimer.cpp` was based on only Cortex-M.\r\nRefs are here:\r\n[Ref 1](https://github.com/ARMmbed/mbed-os/blob/feature-hal-spec-ticker/rtos/TARGET_CORTEX/SysTimer.cpp#L27), [Ref 2](https://github.com/ARMmbed/mbed-os/blob/feature-hal-spec-ticker/rtos/TARGET_CORTEX/SysTimer.cpp#L108)\r\n\r\nCould you please provide `SysTimer.cpp` that can work on not only Cortex-M but Cortex-A?\r\n\r\n- Type: Bug \r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nRZ_A1H | GR_LYCHEE\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Expected behavior**\r\nBuild success\r\n\r\n**Actual behavior**\r\nBuild error\r\nErr message is here:\r\n```\r\n        [Error] rtx_core_cm.h@626,22: 'SCB' was not declared in this scope\r\n        [Error] rtx_core_cm.h@626,35: 'SCB_ICSR_PENDSVSET_Msk' was not declared in this scope\r\n        [Error] rtx_core_cm.h@631,3: 'SCB' was not declared in this scope\r\n        [Error] rtx_core_cm.h@631,15: 'SCB_ICSR_PENDSVCLR_Msk' was not declared in this scope\r\n        [Error] rtx_core_cm.h@636,3: 'SCB' was not declared in this scope\r\n        [Error] rtx_core_cm.h@636,15: 'SCB_ICSR_PENDSVSET_Msk' was not declared in this scope\r\n        [Error] rtx_core_ca.h@362,22: redefinition of 'void SVC_Initialize()'\r\n        [Error] rtx_core_ca.h@367,25: redefinition of 'uint8_t GetPendSV()'\r\n        [Error] rtx_core_ca.h@372,22: redefinition of 'void ClrPendSV()'\r\n        [Error] rtx_core_ca.h@377,22: redefinition of 'void SetPendSV()'\r\n        [Error] SysTimer.cpp@108,5: 'SCB' was not declared in this scope\r\n        [Error] SysTimer.cpp@108,17: 'SCB_ICSR_PENDSTSET_Msk' was not declared in this scope\r\n\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6525",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6525/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6525/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6525/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6525",
    "id": 310651159,
    "number": 6525,
    "title": "I2C Asynch -> Schedule transfer in callback",
    "user": {
      "login": "AGlass0fMilk",
      "id": 350500,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AGlass0fMilk",
      "html_url": "https://github.com/AGlass0fMilk",
      "followers_url": "https://api.github.com/users/AGlass0fMilk/followers",
      "following_url": "https://api.github.com/users/AGlass0fMilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/AGlass0fMilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AGlass0fMilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AGlass0fMilk/subscriptions",
      "organizations_url": "https://api.github.com/users/AGlass0fMilk/orgs",
      "repos_url": "https://api.github.com/users/AGlass0fMilk/repos",
      "events_url": "https://api.github.com/users/AGlass0fMilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AGlass0fMilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-03T00:11:54Z",
    "updated_at": "2018-04-03T15:27:12Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n---------------------------------------------------------------\r\n## Question\r\n\r\nI'm trying to write an asynchronous read function for a sensor (Silicon Labs Si7006). I found some slightly old example code that schedules another asynchronous I2C transfer during the first event's callback. This allows a single call to get the temperature and humidity readings from the device asynchronously.\r\n\r\nSee the library code here (https://os.mbed.com/teams/SiliconLabs/code/SILABS_RHT/)\r\n\r\nIronically I found this while reading an article \"Using the mbed asynchronous APIs\"\r\n\r\nWhile writing unit tests for my driver, I get a Mutex error. I've narrowed it down to the fact that the I2C::transfer call tries to lock a mutex, which isn't allowed in an ISR context (which the callback is executing in?)\r\n\r\nIs there a way I can schedule another I2C transfer during the first transfer's callback without relying on user code/thread context? I'm aware of the events library but it seems like a lot of code to pull in for an I2C device driver.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6521",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6521/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6521/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6521/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6521",
    "id": 310345355,
    "number": 6521,
    "title": "mbed_error_vfprintf retargeting",
    "user": {
      "login": "pavels",
      "id": 244128,
      "avatar_url": "https://avatars2.githubusercontent.com/u/244128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pavels",
      "html_url": "https://github.com/pavels",
      "followers_url": "https://api.github.com/users/pavels/followers",
      "following_url": "https://api.github.com/users/pavels/following{/other_user}",
      "gists_url": "https://api.github.com/users/pavels/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pavels/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pavels/subscriptions",
      "organizations_url": "https://api.github.com/users/pavels/orgs",
      "repos_url": "https://api.github.com/users/pavels/repos",
      "events_url": "https://api.github.com/users/pavels/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pavels/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-04-01T18:55:35Z",
    "updated_at": "2018-04-09T09:25:38Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "## Enhancement\r\n\r\nWe now have retargeting for stdout and stderr which is greate. We can use SWO for this stuff pretty easy and that is realy greate.\r\n\r\nThere is one thing left behind\r\n`mbed_error_vfprintf` (in `/mbed-os/platform/mbed_board.c`)\r\n\r\nThis is used to print out debug messages when the firmware crashes. It would be nice if this thing can somehow use the retargeting system as well (so we can send error messages to SWO as well)\r\n\r\nI am thinking something like this \r\n```\r\nvoid mbed_error_vfprintf(const char * format, va_list arg) {\r\n    #define ERROR_BUF_SIZE      (128)\r\n    core_util_critical_section_enter();\r\n    char buffer[ERROR_BUF_SIZE];\r\n    int size = vsnprintf(buffer, ERROR_BUF_SIZE, format, arg);\r\n    if (size > 0) {\r\n        for (int i = 0; i < size; i++) {\r\n            putc(buffer[i], stderr);\r\n        }\r\n    }\r\n    core_util_critical_section_exit();\r\n}\r\n```\r\n\r\nI can make PR if it is OK, but maybe it is not, maybe there is some side effects i am missing. What do you think?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6515",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6515/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6515/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6515/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6515",
    "id": 310034762,
    "number": 6515,
    "title": "Only schedule mbed_ticker interrupt if queue->head is changed",
    "user": {
      "login": "marcemmers",
      "id": 35759328,
      "avatar_url": "https://avatars0.githubusercontent.com/u/35759328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcemmers",
      "html_url": "https://github.com/marcemmers",
      "followers_url": "https://api.github.com/users/marcemmers/followers",
      "following_url": "https://api.github.com/users/marcemmers/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcemmers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcemmers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcemmers/subscriptions",
      "organizations_url": "https://api.github.com/users/marcemmers/orgs",
      "repos_url": "https://api.github.com/users/marcemmers/repos",
      "events_url": "https://api.github.com/users/marcemmers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcemmers/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 642056257,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20preceding%20PR",
        "name": "needs: preceding PR",
        "color": "fef250",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 29,
    "created_at": "2018-03-30T10:35:18Z",
    "updated_at": "2018-05-18T09:18:43Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6515",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6515",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6515.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6515.patch"
    },
    "body": "Reverts change from commit 10577201142eb2064ffe3a76dea8a1ddb4bdeef2\r\n\r\n### Description\r\nIt seems to me it is unneccesary to schedule a new interrupt the new event is further in the queue and head is still the same. This is essentially the same as is done in the remove_event function: only reschedule if the head is removed.\r\n\r\nDoesn't really fix any issues but does result in better response time. Only tested on a STM32L072 in low power configuration.\r\n\r\n### Pull request type\r\n\r\n[ ] Fix  \r\n[x] Refactor  \r\n[ ] New target  \r\n[ ] Feature  \r\n[ ] Breaking change\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6504",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6504/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6504/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6504/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6504",
    "id": 309547757,
    "number": 6504,
    "title": "Planned PR for interrupt-based SPISlave",
    "user": {
      "login": "bmcdonnell-ionx",
      "id": 34172339,
      "avatar_url": "https://avatars2.githubusercontent.com/u/34172339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmcdonnell-ionx",
      "html_url": "https://github.com/bmcdonnell-ionx",
      "followers_url": "https://api.github.com/users/bmcdonnell-ionx/followers",
      "following_url": "https://api.github.com/users/bmcdonnell-ionx/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmcdonnell-ionx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmcdonnell-ionx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmcdonnell-ionx/subscriptions",
      "organizations_url": "https://api.github.com/users/bmcdonnell-ionx/orgs",
      "repos_url": "https://api.github.com/users/bmcdonnell-ionx/repos",
      "events_url": "https://api.github.com/users/bmcdonnell-ionx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmcdonnell-ionx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-28T22:01:08Z",
    "updated_at": "2018-04-05T12:42:15Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement | Question\r\n- Priority: Minor\r\n\r\nThe main reason I'm posting this as an issue instead of just submitting the pull request (PR) is because of the rumored \"upcoming SPI spec\", and the fact that I can't post the PR right away. Details below.\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\nI have (as-yet unpublished) changes to the `SPISlave` class and `spi_api` which allow for interrupt-based SPI handling. I plan to offer this as a PR, maybe in a couple weeks or so, as I have a little vacation coming up, and some other priorities going on.\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\nA `SPISlave` needs to keep up with the serial clock driven by master. I'm not sure how the current polling implementation could be used so as to guarantee it could keep up. Polling in a high priority thread? Then how do you get anything else done?\r\n\r\nPlus it's much more efficient to idle/sleep and wake on interrupts as needed.\r\n\r\n**Suggested enhancement**\r\n\r\nAllow attaching interrupt handlers to SPISlave. (This is what I did. It's modeled after the `CAN` driver and `can_api`.)\r\n\r\n**Pros**\r\n\r\n- Enable an application to keep up\r\n- Allows a more \"traditional\" embedded implementation, I think (compared to whatever non-interrupt workaround there may be)\r\n- More efficient than polling\r\n\r\n**Cons**\r\n\r\n- I've only implemented `spi_api.c` for LPC4088. However, I modeled it after `can_api`, so I think adding other targets would be straightforward, if not even \"easy\".\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\nIn https://github.com/ARMmbed/mbed-os/pull/6365#issuecomment-374603745, @0xc0170 mentions that there is an\r\n\r\n> upcoming SPI spec (to define well the API, tests and then targets implementation).\r\n\r\nWhen will the Mbed OS team start work on this, and what interface changes may it make?\r\n\r\nWhat's the best way forward to keep my upcoming PR and your SPI spec aligned? I hope not to have you start/finish work on changing the existing `SPISlave`/`spi_api` interfaces before I submit my PR."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6499",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6499/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6499/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6499/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6499",
    "id": 309537268,
    "number": 6499,
    "title": "Yotta still in use? Best way to unit test?",
    "user": {
      "login": "AGlass0fMilk",
      "id": 350500,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AGlass0fMilk",
      "html_url": "https://github.com/AGlass0fMilk",
      "followers_url": "https://api.github.com/users/AGlass0fMilk/followers",
      "following_url": "https://api.github.com/users/AGlass0fMilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/AGlass0fMilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AGlass0fMilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AGlass0fMilk/subscriptions",
      "organizations_url": "https://api.github.com/users/AGlass0fMilk/orgs",
      "repos_url": "https://api.github.com/users/AGlass0fMilk/repos",
      "events_url": "https://api.github.com/users/AGlass0fMilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AGlass0fMilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 15,
    "created_at": "2018-03-28T21:24:15Z",
    "updated_at": "2018-05-23T23:05:45Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n---------------------\r\n\r\n## Question\r\nIs the yotta platform still in development/recommended for use?\r\n\r\nI'm currently using mbed-cli and my project is fairly engrained in that build system. I'm trying to start implementing unit tests with the greentea framework and other utilities provided by mbed. The greentea documentation mentions that it uses yotta, but I remember seeing somewhere that yotta is no longer in development?\r\n\r\nAny recommendations on \"official\" unit testing frameworks/methods to use? Also, are custom targets/boards supported by greentea?\r\n\r\nIs there a way to use the DAPLink host on an mbed enabled dev board to talk to a custom target/board?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6470",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6470/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6470/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6470/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6470",
    "id": 308870660,
    "number": 6470,
    "title": "New ticker tests are not adapted to variable-width tickers.",
    "user": {
      "login": "stevew817",
      "id": 4510034,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4510034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevew817",
      "html_url": "https://github.com/stevew817",
      "followers_url": "https://api.github.com/users/stevew817/followers",
      "following_url": "https://api.github.com/users/stevew817/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevew817/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevew817/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevew817/subscriptions",
      "organizations_url": "https://api.github.com/users/stevew817/orgs",
      "repos_url": "https://api.github.com/users/stevew817/repos",
      "events_url": "https://api.github.com/users/stevew817/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevew817/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-03-27T08:31:31Z",
    "updated_at": "2018-04-11T13:51:51Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n\r\n@0xc0170 What we talked about earlier.\r\n@LMESTM I guess you're having the same issues.\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nEFM32\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**mbed-os sha:**\r\n458e726b1\r\n\r\n**Expected behavior**\r\nUnit tests work with all tickers corresponding to the new requirements (width between 16 bits and 32 bits, frequency between 250kHz and 8MHz).\r\n\r\n**Actual behavior**\r\nAt various stages in the unit test (https://github.com/ARMmbed/mbed-os/blob/458e726b1e2c32fb2ea6238771190d6fdd78e18d/TESTS/mbed_hal/common_tickers/main.cpp) there are steps that don't account for getting a potential overflow on a fast-running short-width timer.\r\n\r\nExamples:\r\n* https://github.com/ARMmbed/mbed-os/blob/458e726b1e2c32fb2ea6238771190d6fdd78e18d/TESTS/mbed_hal/common_tickers/main.cpp#L52 - When the ticker overflows during counting, the count will be wildly off. Neither this counting function or the dependant test account for potential overflows.\r\n* https://github.com/ARMmbed/mbed-os/blob/458e726b1e2c32fb2ea6238771190d6fdd78e18d/TESTS/mbed_hal/common_tickers/main.cpp#L106 - Operation is illegal according to the specification, since you might be trying to set an interrupt for a timestamp that is greater than the maximum timer value.\r\n* https://github.com/ARMmbed/mbed-os/blob/458e726b1e2c32fb2ea6238771190d6fdd78e18d/TESTS/mbed_hal/common_tickers/main.cpp#L114 - Big risk for this loop to loop forever with a non-32-bit ticker.\r\n* https://github.com/ARMmbed/mbed-os/blob/458e726b1e2c32fb2ea6238771190d6fdd78e18d/TESTS/mbed_hal/common_tickers/main.cpp#L385 - Gets used for both us_ticker and lp_ticker tests, but is only adapted for the lp_ticker case. When using a us_ticker you want a larger backoff time, since it is running way faster.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6458",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6458/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6458/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6458/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6458",
    "id": 308602356,
    "number": 6458,
    "title": "Remove unused watchdog feature flag from feature struct",
    "user": {
      "login": "scartmell-arm",
      "id": 30798917,
      "avatar_url": "https://avatars1.githubusercontent.com/u/30798917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scartmell-arm",
      "html_url": "https://github.com/scartmell-arm",
      "followers_url": "https://api.github.com/users/scartmell-arm/followers",
      "following_url": "https://api.github.com/users/scartmell-arm/following{/other_user}",
      "gists_url": "https://api.github.com/users/scartmell-arm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scartmell-arm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scartmell-arm/subscriptions",
      "organizations_url": "https://api.github.com/users/scartmell-arm/orgs",
      "repos_url": "https://api.github.com/users/scartmell-arm/repos",
      "events_url": "https://api.github.com/users/scartmell-arm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scartmell-arm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 407548740,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/do%20not%20merge",
        "name": "do not merge",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 16,
    "created_at": "2018-03-26T14:43:01Z",
    "updated_at": "2018-05-22T11:10:37Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6458",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6458",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6458.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6458.patch"
    },
    "body": "### Description\r\nupdate_config support was removed from the Watchdog API, the flag is no longer needed so can be removed.\r\n\r\n\r\n### Pull request type\r\n[ ] Fix\r\n\r\n@0xc0170 \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6457",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6457/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6457/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6457/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6457",
    "id": 308597502,
    "number": 6457,
    "title": "Mbed os 5.8 simulator support",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 144902129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20work",
        "name": "needs: work",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-03-26T14:31:12Z",
    "updated_at": "2018-05-25T10:07:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6457",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6457",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6457.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6457.patch"
    },
    "body": "### Description\r\n\r\nJust opening this pull request to spark some discussion. This is adding a new simulator target to Mbed OS 5.8. It modifies a couple of files (`Ticker.h` which I think fixes a bug, and `mbed_retarget.h`, which I'm not sure how to fix otherwise, and then some changes in netsocket so it does not require RTOS, which I think is a bug too). In addition you'll notice that some files are overridden in the simulator target folder. These are swapped out in the build process for the simulator, so not through Mbed CLI at this point.\r\n\r\nThe reason that I want this in Mbed OS core is that it should be much easier to keep up to date. In addition I'd like to have support for this in CLI as well, and integrate this nicely in our tools. This is not something we can do in a single release, but by adding it to the core at least we know when we break something.\r\n\r\nOpinions?\r\n\r\nThis branch is used in https://github.com/janjongboom/mbed-simulator/tree/upstream-mbed-os by the way, which updates the simulator branch to this version of Mbed OS. Work in progress of course.\r\n\r\n### Pull request type\r\n\r\n[ ] Fix  \r\n[ ] Refactor  \r\n[X] New target  \r\n[X] Feature  \r\n[ ] Breaking change"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6454",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6454/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6454/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6454/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6454",
    "id": 308550462,
    "number": 6454,
    "title": "Consecutive ticker callbacks result more timer interval interrupt requests than expected",
    "user": {
      "login": "gaborkertesz",
      "id": 25458114,
      "avatar_url": "https://avatars0.githubusercontent.com/u/25458114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaborkertesz",
      "html_url": "https://github.com/gaborkertesz",
      "followers_url": "https://api.github.com/users/gaborkertesz/followers",
      "following_url": "https://api.github.com/users/gaborkertesz/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaborkertesz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaborkertesz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaborkertesz/subscriptions",
      "organizations_url": "https://api.github.com/users/gaborkertesz/orgs",
      "repos_url": "https://api.github.com/users/gaborkertesz/repos",
      "events_url": "https://api.github.com/users/gaborkertesz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaborkertesz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2018-03-26T12:26:11Z",
    "updated_at": "2018-05-22T13:38:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "- Type: Bug\r\n- Priority: Major\r\n\r\n**Target**\r\nARM_CM3DS_MPS2 \r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**mbed-os sha:**\r\n458e726b1e2c32fb2ea6238771190d6fdd78e18d\r\n\r\n**Expected behavior**\r\nIn the example two 1sec callbacks are requested and 120 interval timestamps in us_ticker_set_interrupt are collected. In best case only in every other second would be a new interval request, which means 120 samples would be collected after 120 seconds.\r\nChained callbacks would be great to trigger 1 interrupt instead of small delay and 2 interrupts.\r\n\r\n**Actual behavior**\r\nAfter 28seconds the 120 samples are collected, the first 20 attached.\r\nFor every registered callback there are two interval requests and there is a small interval request between the requested callbacks (check 2->3 or 4->5)\r\nindex   usec interval\r\n[0]    1879048232\r\n[1]    1021242\r\n[2]    1021242\r\n[3]    1021387\r\n[4]    1021387\r\n[5] \t2021242\r\n[6] \t2021242\r\n[7] \t2021387\r\n[8]  \t2021387\r\n[9] \t3021242\r\n[10]\t3021242\r\n[11]\t3021387\r\n[12]\t3021387\r\n[13]\t4021242\r\n[14]\t4021242\r\n[15]\t4021387\r\n[16]\t4021387\r\n[17]\t5021242\r\n[18]\t5021242\r\n[19]\t5021387\r\n[20]\t5021387\r\n\r\n**Steps to reproduce**\r\nCheck the requested ticker intervals for the following example.\r\nExample of main.cpp\r\n#include \"mbed.h\"\r\n\r\nTicker ticker1;\r\nTicker ticker2;\r\n\r\n#define NR_OF_COUNTERS      2\r\n#define CALLBACK_DELAY_SEC  1\r\n\r\nint counters[NR_OF_COUNTERS] = {0,0};\r\n\r\nvoid callback1() {\r\n    counters[0]++;\r\n}\r\n\r\nvoid callback2() {\r\n    counters[1]++;\r\n}\r\n\r\nint main() {\r\n    printf(\"ticker callbacks test\\n\");\r\n    int prev_counters[NR_OF_COUNTERS];\r\n\r\n    ticker1.attach(&callback1, CALLBACK_DELAY_SEC);\r\n    ticker2.attach(&callback2, CALLBACK_DELAY_SEC);\r\n\r\n    for(;;) {\r\n        for(int i=0; i< NR_OF_COUNTERS; i++)\r\n        if (prev_counters[i] != counters[i]) {\r\n            prev_counters[i] = counters[i];\r\n            printf(\"%d: %d\\n\",i, counters[i]);\r\n        }\r\n    }\r\n}\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6451",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6451/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6451/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6451/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6451",
    "id": 308479238,
    "number": 6451,
    "title": "Add option to read out if serial transmission is done",
    "user": {
      "login": "marcemmers",
      "id": 35759328,
      "avatar_url": "https://avatars0.githubusercontent.com/u/35759328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcemmers",
      "html_url": "https://github.com/marcemmers",
      "followers_url": "https://api.github.com/users/marcemmers/followers",
      "following_url": "https://api.github.com/users/marcemmers/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcemmers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcemmers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcemmers/subscriptions",
      "organizations_url": "https://api.github.com/users/marcemmers/orgs",
      "repos_url": "https://api.github.com/users/marcemmers/repos",
      "events_url": "https://api.github.com/users/marcemmers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcemmers/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345182,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20drivers",
        "name": "component: drivers",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-26T08:38:25Z",
    "updated_at": "2018-03-26T08:46:54Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Minor\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nWhen running in a low power setup we are experiencing issues with serial transmission. When we transmit one or multiple characters using for example puts of putc the transmission will loop until all characters are put into the tx buffer of the peripheral. This however doesn't check if the last char has been transmitted.\r\n\r\nWhen the device goes to deepsleep before the last char has been transmitted the peripheral will halt because the clock disappears, causing corrupt data transfers.\r\n\r\n**Suggested enhancement**\r\nI want to add an option to the drivers to be able to read out the transmission status, just like readable and writable. Then it will be up to the user if they want to use the function after a transmission or if they don't care.\r\n\r\nI have implemented this for the STM series but am not sure about the names:\r\n\"serial_api.c\"\r\n```\r\nint serial_tx_complete(serial_t *obj)\r\n{\r\n    struct serial_s *obj_s = SERIAL_S(obj);\r\n    UART_HandleTypeDef *huart = &uart_handlers[obj_s->index];\r\n\r\n    // Check if data is transmitted\r\n    return (__HAL_UART_GET_FLAG(huart, UART_FLAG_TC) != RESET) ? 1 : 0;\r\n}\r\n```\r\n\r\n\"SerialBase.cpp\"\r\n```\r\nint SerialBase::tx_complete() {\r\n    lock();\r\n    int ret = serial_tx_complete(&_serial);\r\n    unlock();\r\n    return ret;    \r\n}\r\n```\r\n\r\n**Pros**\r\nAdd function to get some more information from the serial peripheral.\r\nSolves issue for very low power use.\r\n\r\n**Cons**\r\nNone to my knowledge other than implementation time for all processors.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6444",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6444/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6444/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6444/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6444",
    "id": 308209998,
    "number": 6444,
    "title": "crash_log_parser crashes",
    "user": {
      "login": "bmcdonnell-ionx",
      "id": 34172339,
      "avatar_url": "https://avatars2.githubusercontent.com/u/34172339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmcdonnell-ionx",
      "html_url": "https://github.com/bmcdonnell-ionx",
      "followers_url": "https://api.github.com/users/bmcdonnell-ionx/followers",
      "following_url": "https://api.github.com/users/bmcdonnell-ionx/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmcdonnell-ionx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmcdonnell-ionx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmcdonnell-ionx/subscriptions",
      "organizations_url": "https://api.github.com/users/bmcdonnell-ionx/orgs",
      "repos_url": "https://api.github.com/users/bmcdonnell-ionx/repos",
      "events_url": "https://api.github.com/users/bmcdonnell-ionx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmcdonnell-ionx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-03-24T00:00:22Z",
    "updated_at": "2018-05-02T16:03:55Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "I'm troubleshooting an intermittent \"imprecise\" HardFault. `crash_log_parser` crashed when trying to parse a crash log from firmware where I had disabled the write buffer use during default memory map access with the instruction `SCnSCB->ACTLR &= ~(SCnSCB_ACTLR_DISDEFWBUF_Msk);`.\r\n\r\nReferences:\r\nhttps://community.nxp.com/docs/DOC-103810\r\nhttp://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0553a/CHDCBHEE.html\r\n\r\nEDIT: Update here: https://github.com/ARMmbed/mbed-os/issues/6444#issuecomment-376232035.\r\n\r\n### Description\r\n- Type: Bug\r\n- Priority: Major | Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nLPC4088\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\nMCUXpresso IDE v10.1.1 [Build 606] [2018-01-02] \r\n(and whatever version of GCC_ARM that comes with)\r\n\r\n**mbed-cli version:** \r\n1.5.0 (with https://github.com/ARMmbed/mbed-cli/pull/642)\r\n\r\n**mbed-os sha:**\r\n`ad284b280 (tag: mbed-os-5.8.0-rc2, tag: mbed-os-5.8.0, arm/mbed-os-5.8, mbed-os-5.8) Merge pull request #6352 from ARMmbed/release-candidate`\r\n\r\n**DAPLink version:**\r\n\r\n**Expected behavior**\r\n\r\n[crash_log_parser](https://github.com/ARMmbed/mbed-os/tree/master/tools/debug_tools/crash_log_parser) successfully parses a crash log to produce crash info.\r\n\r\n**Actual behavior**\r\n\r\n```\r\nme@pc ~/Documents/proj/troubleshooting\r\n$ ./crash_log_parser.py crash-log.txt fw-build-dbg.axf fw-build-dbg.map\r\n\r\nCrash Info:\r\nTraceback (most recent call last):\r\n  File \"./crash_log_parser.py\", line 194, in <module>\r\n    main(args.crashlog, elfhelper)\r\n  File \"./crash_log_parser.py\", line 164, in main\r\n    print(\"\\tCrash location = %s [0x%s] (based on PC value)\" % (pc_name.strip(), str(pc_val)))\r\nUnboundLocalError: local variable 'pc_name' referenced before assignment\r\n```\r\n\r\n**Steps to reproduce (maybe)**\r\n\r\n- Write a program that crashes with a HardFault on an ARM Cortex-M4. (Might need to be \"imprecise\"; IDK. Cortex-M3 would probably work.)\r\n- Include the instruction `SCnSCB->ACTLR &= ~(SCnSCB_ACTLR_DISDEFWBUF_Msk);` to force precise faults.\r\n- Export to MCUXpresso IDE. Build. Load and run firmware.\r\n- Make/watch it crash. Capture the `MbedOS Fault Handler` output, and run the `crash_log_parser` on it.\r\n- Observe failure to parse as above. Maybe."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6426",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6426/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6426/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6426/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6426",
    "id": 307671780,
    "number": 6426,
    "title": "STM32L0xx: (tickless using lp_ticker) Becomes unresponsive after indeterminate time",
    "user": {
      "login": "marcemmers",
      "id": 35759328,
      "avatar_url": "https://avatars0.githubusercontent.com/u/35759328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcemmers",
      "html_url": "https://github.com/marcemmers",
      "followers_url": "https://api.github.com/users/marcemmers/followers",
      "following_url": "https://api.github.com/users/marcemmers/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcemmers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcemmers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcemmers/subscriptions",
      "organizations_url": "https://api.github.com/users/marcemmers/orgs",
      "repos_url": "https://api.github.com/users/marcemmers/repos",
      "events_url": "https://api.github.com/users/marcemmers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcemmers/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 20,
    "created_at": "2018-03-22T14:39:26Z",
    "updated_at": "2018-05-25T11:58:14Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nSTM32L072, possibly more\r\n\r\n**mbed-os sha:**\r\n5.7.7 16bac101a6b7b4724023dcf86ece1548e3a23cbf\r\n\r\n**Issue**\r\nWe are experiencing some problems where the device becomes unresponsive after an indeterminate time. This can be anywhere between several minutes and a couple of hours.\r\n\r\nThe configuration we are using is the following:\r\n```\r\n// Configuration parameters\r\n#define MBED_CONF_APP_THREAD_STACK_SIZE                   1024        \r\n#define MBED_CONF_EVENTS_PRESENT                          1           \r\n#define MBED_CONF_TARGET_LOWPOWERTIMER_LPTIM              0           \r\n#define MBED_CONF_APP_MAIN_STACK_SIZE                     2048        \r\n#define MBED_CONF_PLATFORM_STDIO_BAUD_RATE                115200      \r\n#define CLOCK_SOURCE                                      USE_PLL_HSI \r\n#define MBED_CONF_EVENTS_SHARED_HIGHPRIO_STACKSIZE        1024        \r\n#define MBED_CONF_PLATFORM_DEFAULT_SERIAL_BAUD_RATE       9600        \r\n#define MBED_CONF_RTOS_PRESENT                            1           \r\n#define MBED_CONF_EVENTS_SHARED_DISPATCH_FROM_APPLICATION 1           \r\n#define MBED_CONF_EVENTS_SHARED_EVENTSIZE                 1024        \r\n#define MBED_CONF_EVENTS_SHARED_STACKSIZE                 2048        \r\n#define MBED_CONF_EVENTS_USE_LOWPOWER_TIMER_TICKER        1           \r\n#define MBED_CONF_TARGET_LSE_AVAILABLE                    1           \r\n#define MBED_CONF_EVENTS_SHARED_HIGHPRIO_EVENTSIZE        512         \r\n\r\n// Macros\r\n#define MBED_TICKLESS                                                 \r\n#define NO_SYSTICK                                                    \r\n```\r\n\r\nAfter some testing using some gpio pins I have found out that the processor hangs in a continuous loop of the following functions:\r\n```\r\nrtc_irq\r\n    lp_ticker_irq_handler()\r\n        irq_handler() default -> ticker_irq_handler\r\n            ticker_irq_handler()\r\n                first loop\r\n                    Set systick irq\r\n                second loop\r\n                    schedule_interrupt()\r\n                        rtc_set_wake_up_timer()\r\nexit_irq\r\n\r\nsystick_irq\r\n    SysTick_Handler()\r\n        osRtxTick_Handler()\r\n            OS_Tick_AcknowledgeIRQ()\r\n                os_timer->schedule_tick() with default delta = 1\r\n                    insert_absolute()\r\n                        ticker_insert_event_us()\r\n                            update_present_time()\r\n                            schedule_interrupt()\r\n                                fire_interrupt()\r\nexit_irq\r\n```\r\nThe rtc_irq sets the systick_irq request and vice versa.\r\n\r\nWhen the processor hangs it seems the in the os_timer->_tick is out of date. Whereas normally it is in sync with the lp_data->queue->present_time. This causes the interrupt to be scheduled in the systick irq handler to fire immediately because the event is requested in the past. The synchronization should happen in the critical section of the default_idle_hook but this seems to have stopped for some reason.\r\n\r\nI will continue to investigate the problem but there is an issue here.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6417",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6417/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6417/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6417/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6417",
    "id": 307261899,
    "number": 6417,
    "title": "Remove References to Yotta, module.json, and other OS3 stuff",
    "user": {
      "login": "loverdeg-ep",
      "id": 24318071,
      "avatar_url": "https://avatars0.githubusercontent.com/u/24318071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loverdeg-ep",
      "html_url": "https://github.com/loverdeg-ep",
      "followers_url": "https://api.github.com/users/loverdeg-ep/followers",
      "following_url": "https://api.github.com/users/loverdeg-ep/following{/other_user}",
      "gists_url": "https://api.github.com/users/loverdeg-ep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loverdeg-ep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loverdeg-ep/subscriptions",
      "organizations_url": "https://api.github.com/users/loverdeg-ep/orgs",
      "repos_url": "https://api.github.com/users/loverdeg-ep/repos",
      "events_url": "https://api.github.com/users/loverdeg-ep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loverdeg-ep/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-21T14:12:56Z",
    "updated_at": "2018-05-22T13:06:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "\r\n### Description\r\n- Type: Enhancement\r\n- Related issue: [Handbook-#462](https://github.com/ARMmbed/Handbook/issues/462#issuecomment-374846529)\r\n- Priority: Minor\r\n\r\n## Enhancement\r\n\r\nWhen perusing the mbed OS source files I often come across preprocessor references to yotta, which as far as I know, is no longer used in any capacity for mbed development. Though a minor distraction and usually found in FEATURE_STORAGE, it does nonetheless cause me to double take.\r\n\r\nThere also seems to be some module.json files laying around as well this seems to have caused confusion on at least 2 occasions in myself and [Handbook-#462](https://github.com/ARMmbed/Handbook/issues/462#issuecomment-374846529)\r\n\r\n**Suggested enhancement**\r\n\r\nDoes it make sense to remove some of these references?\r\n\r\n**Pros**\r\n\r\nFeel free to fill this in for me\r\n\r\n**Cons**\r\n\r\nFeel free to fill this in for me\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6410",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6410/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6410/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6410/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6410",
    "id": 307065580,
    "number": 6410,
    "title": "Zero delay (attach) test fails for REALTEK_RTL8195AM",
    "user": {
      "login": "studavekar",
      "id": 25986241,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25986241?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/studavekar",
      "html_url": "https://github.com/studavekar",
      "followers_url": "https://api.github.com/users/studavekar/followers",
      "following_url": "https://api.github.com/users/studavekar/following{/other_user}",
      "gists_url": "https://api.github.com/users/studavekar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/studavekar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/studavekar/subscriptions",
      "organizations_url": "https://api.github.com/users/studavekar/orgs",
      "repos_url": "https://api.github.com/users/studavekar/repos",
      "events_url": "https://api.github.com/users/studavekar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/studavekar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620926933,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20realtek",
        "name": "devices: realtek",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-03-20T22:44:56Z",
    "updated_at": "2018-04-02T03:39:31Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "May be related to https://github.com/ARMmbed/mbed-os/pull/5106\r\n\r\n### Description\r\n- Type: Bug\r\n- Priority:   Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\n\r\nREALTEk_RTL8195AM\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**mbed-os sha:**\r\n53cb6e0 Merge pull request #6279 from AnttiKauppila/master\r\n\r\n**Steps**\r\nmbed test -t GCC_ARM -m REALTEk_RTL8195AM --run -n tests-mbed_drivers-timeout -v -V\r\n\r\n```\r\n[1521585481.77][CONN][RXD]\r\n[1521585481.78][CONN][RXD] >>> Running case #9: 'Zero delay (attach)'...\r\n[1521585481.79][CONN][INF] found KV pair in stream: {{__testcase_start;Zero delay (attach)}}, queued...\r\n[1521585481.80][CONN][RXD] :204::FAIL: Expected 1 Was 0\r\n[1521585481.81][CONN][INF] found KV pair in stream: {{__testcase_finish;Zero delay (attach);0;1}}, queued...\r\n[1521585481.83][CONN][RXD] >>> 'Zero delay (attach)': 0 passed, 1 failed with reason 'Assertion Failed'\r\n[1521585481.83][CONN][RXD]\r\n[1521585481.85][CONN][RXD] >>> Test cases: 8 passed, 1 failed with reason 'Assertion Failed'\r\n[1521585481.86][CONN][RXD] >>> TESTS FAILED!\r\n[1521585481.86][CONN][INF] found KV pair in stream: {{__testcase_summary;8;1}}, queued...\r\n[1521585481.87][CONN][INF] found KV pair in stream: {{max_heap_usage;0}}, queued...\r\n[1521585481.87][CONN][INF] found KV pair in stream: {{reserved_heap;0}}, queued...\r\n[1521585481.87][HTST][ERR] orphan event in main phase: {{max_heap_usage;0}}, timestamp=1521585481.867801\r\n[1521585481.87][HTST][ERR] orphan event in main phase: {{reserved_heap;0}}, timestamp=1521585481.867805\r\n[1521585481.88][CONN][RXD]\r\n[1521585481.88][CONN][INF] found KV pair in stream: {{end;failure}}, queued...\r\n[1521585481.88][CONN][INF] found KV pair in stream: {{__exit;0}}, queued...\r\n[1521585481.88][HTST][INF] __exit(0)\r\n[1521585481.88][HTST][INF] __notify_complete(False)\r\n[1521585481.88][HTST][INF] __exit_event_queue received\r\n[1521585481.88][HTST][INF] test suite run finished after 1.09 sec...\r\n[1521585481.89][CONN][INF] received special event '__host_test_finished' value='True', finishing\r\n[1521585481.92][HTST][INF] CONN exited with code: 0\r\n[1521585481.92][HTST][INF] Some events in queue\r\n[1521585481.92][HTST][INF] stopped consuming events\r\n[1521585481.92][HTST][INF] host test result() call skipped, received: False\r\n[1521585481.92][HTST][INF] calling blocking teardown()\r\n[1521585481.92][HTST][INF] teardown() finished\r\n[1521585481.92][HTST][INF] {{result;failure}}\r\nmbedgt: retry mbedhtrun 1/1\r\nmbedgt: ['mbedhtrun', '-m', u'REALTEK_RTL8195AM', '-p', '/dev/ttyACM4:9600', '-f', u'\"BUILD/tests/REALTEk_RTL8195AM/GCC_ARM/TESTS/mbed_drivers/timeout/timeout.bin\"', '-e', u'\"TESTS/host_tests\"', '-d', u'/mnt/pci-0000_00_14_0-usb-0_6_1_6_1_0-scsi-0_0_0_0', '-c', 'default', '-t', u'460000000989df4000000000000000000000000097969902', '-r', 'default', '-C', '4', '--sync', '5'] failed after 1 count\r\nmbedgt: checking for GCOV data...\r\nmbedgt: mbed-host-test-runner: stopped and returned 'FAIL'\r\nmbedgt: test on hardware with target id: 460000000989df4000000000000000000000000097969902\r\nmbedgt: test suite 'tests-mbed_drivers-timeout' ...................................................... FAIL in 75.53 sec\r\n        test case: '1 s delay accuracy (attach)' ..................................................... SKIPPED in 0.00 sec\r\n        test case: '1 s delay accuracy (attach_us)' .................................................. SKIPPED in 0.00 sec\r\n        test case: '10 ms delay accuracy (attach)' ................................................... SKIPPED in 0.00 sec\r\n        test case: '10 ms delay accuracy (attach_us)' ................................................ SKIPPED in 0.00 sec\r\n        test case: '5 s delay accuracy (attach)' ..................................................... SKIPPED in 0.00 sec\r\n        test case: '5 s delay accuracy (attach_us)' .................................................. SKIPPED in 0.00 sec\r\n        test case: 'Callback called once (attach)' ................................................... OK in 0.04 sec\r\n        test case: 'Callback called once (attach_us)' ................................................ OK in 0.04 sec\r\n        test case: 'Callback not called when cancelled (attach)' ..................................... OK in 0.04 sec\r\n        test case: 'Callback not called when cancelled (attach_us)' .................................. OK in 0.04 sec\r\n        test case: 'Callback override (attach)' ...................................................... OK in 0.04 sec\r\n        test case: 'Callback override (attach_us)' ................................................... OK in 0.05 sec\r\n        test case: 'Multiple timeouts running in parallel (attach)' .................................. OK in 0.03 sec\r\n        test case: 'Multiple timeouts running in parallel (attach_us)' ............................... OK in 0.04 sec\r\n        test case: 'Timing drift (attach)' ........................................................... SKIPPED in 0.00 sec\r\n        test case: 'Timing drift (attach_us)' ........................................................ SKIPPED in 0.00 sec\r\n        test case: 'Zero delay (attach)' ............................................................. FAIL in 0.02 sec\r\n        test case: 'Zero delay (attach_us)' .......................................................... SKIPPED in 0.00 sec\r\nmbedgt: test case summary: 8 passes, 1 failure\r\nmbedgt: utest test case summary mismatch: utest reported passes and failures miscount!\r\n        reported by utest: passes = 8, failures 1)\r\n        test case result count: passes = 8, failures 10)\r\nmbedgt: all tests finished!\r\nmbedgt: shuffle seed: 0.0683939613\r\nmbedgt: test suite report:\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6409",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6409/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6409/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6409/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6409",
    "id": 307032498,
    "number": 6409,
    "title": "NVIC_SetVector does nothing on NRF51822",
    "user": {
      "login": "Spivoxity",
      "id": 26537869,
      "avatar_url": "https://avatars3.githubusercontent.com/u/26537869?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Spivoxity",
      "html_url": "https://github.com/Spivoxity",
      "followers_url": "https://api.github.com/users/Spivoxity/followers",
      "following_url": "https://api.github.com/users/Spivoxity/following{/other_user}",
      "gists_url": "https://api.github.com/users/Spivoxity/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Spivoxity/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Spivoxity/subscriptions",
      "organizations_url": "https://api.github.com/users/Spivoxity/orgs",
      "repos_url": "https://api.github.com/users/Spivoxity/repos",
      "events_url": "https://api.github.com/users/Spivoxity/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Spivoxity/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 405492686,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nordic",
        "name": "devices: nordic",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-03-20T20:47:50Z",
    "updated_at": "2018-03-24T09:43:12Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNRF51822\r\n\r\n**Expected behavior**\r\nNVIC_SetVector(cmsis_nvic.c) should dynamically change an interrupt vector, allowing a handler to be installed at run time.\r\n\r\n**Actual behavior**\r\nI haven't tried this, but the code to copy the vector table from flash to RAM (two versions of it) is commented out, so it looks to me like the assignment to a vector slot targets flash and therefore has no effect.  I can't see any other provision being made to copy the vectors to RAM, but would appreciate having it pointed out if there is.\r\n\r\nIn fact, Nordic application notes seem to indicate that the chip does not have the resources needed to remap the vector table into RAM.  The suggestion there is to map all interrupts to a handler that looks up the interrupt in a secondary, dynamic table.\r\n\r\nAn implementation for mbed could either follow this suggestion, or not provide NVIC_SetVector at all, either giving a runtime error when it is called or (perhaps preferably) failing at link time.\r\n\r\nmbed-os/targets/TARGET_NORDIC/TARGET_MCU_NRF51822/device/cmsis_nvic.c"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6405",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6405/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6405/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6405/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6405",
    "id": 306899633,
    "number": 6405,
    "title": "Add a blank value API to flash_api",
    "user": {
      "login": "davidsaada",
      "id": 30656454,
      "avatar_url": "https://avatars3.githubusercontent.com/u/30656454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidsaada",
      "html_url": "https://github.com/davidsaada",
      "followers_url": "https://api.github.com/users/davidsaada/followers",
      "following_url": "https://api.github.com/users/davidsaada/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidsaada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidsaada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidsaada/subscriptions",
      "organizations_url": "https://api.github.com/users/davidsaada/orgs",
      "repos_url": "https://api.github.com/users/davidsaada/repos",
      "events_url": "https://api.github.com/users/davidsaada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidsaada/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-03-20T14:51:05Z",
    "updated_at": "2018-03-20T15:17:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "\r\n### Description\r\n- Type: Enhancement \r\n- Priority: Minor\r\n\r\n**Reason to enhance or problem with existing solution**\r\nWe want to allow code to check whether a specific part of a sector is erased. NVStore code, for instance, does it in initialization. In the vast majority of flash components, the erase value is all ones. However, there are a few boards whose erase value is zero. The STM32L151CB is one of these. \r\n\r\n**Suggested enhancement**\r\nAdd a `blank_value` API to flash_api. Should be something like this:\r\n`unsigned char blank_value();`\r\nreturning either 0xFF or 0.\r\n\r\n**How to?**\r\nThis is quite an easy implementation, as the erase value is well known for each component. Should be a one liner function for each board. Once implemented in flash_api, it can be floated via FlashIAP driver to the user.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6400",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6400/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6400/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6400/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6400",
    "id": 306845124,
    "number": 6400,
    "title": "no wifi to wise 1530 ",
    "user": {
      "login": "netanelgonen",
      "id": 17008964,
      "avatar_url": "https://avatars3.githubusercontent.com/u/17008964?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/netanelgonen",
      "html_url": "https://github.com/netanelgonen",
      "followers_url": "https://api.github.com/users/netanelgonen/followers",
      "following_url": "https://api.github.com/users/netanelgonen/following{/other_user}",
      "gists_url": "https://api.github.com/users/netanelgonen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/netanelgonen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/netanelgonen/subscriptions",
      "organizations_url": "https://api.github.com/users/netanelgonen/orgs",
      "repos_url": "https://api.github.com/users/netanelgonen/repos",
      "events_url": "https://api.github.com/users/netanelgonen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/netanelgonen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-20T12:30:45Z",
    "updated_at": "2018-03-21T10:36:37Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Blocker\r\n---------------------------------------------------------------\r\n\r\n## Bug\r\n\r\n**Target**\r\nWise 1530.\r\n\r\nin order to compile the wise 1530 need to use wise 1510 target (according to https://os.mbed.com/modules/advantech-wise-1530/) in wise 1510, there is no WiFi but LoRa. wise 1530 have WiFi.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6396",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6396/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6396/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6396/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6396",
    "id": 306741696,
    "number": 6396,
    "title": "Is malloc() thread-safe in ARMC6?",
    "user": {
      "login": "ccli8",
      "id": 15923441,
      "avatar_url": "https://avatars3.githubusercontent.com/u/15923441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccli8",
      "html_url": "https://github.com/ccli8",
      "followers_url": "https://api.github.com/users/ccli8/followers",
      "following_url": "https://api.github.com/users/ccli8/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccli8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccli8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccli8/subscriptions",
      "organizations_url": "https://api.github.com/users/ccli8/orgs",
      "repos_url": "https://api.github.com/users/ccli8/repos",
      "events_url": "https://api.github.com/users/ccli8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccli8/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-03-20T06:18:07Z",
    "updated_at": "2018-05-23T19:19:05Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n- Priority: Major\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**Target**\r\nNUMAKER_PFM_NUC472\r\n\r\n**Toolchain:**\r\nARM|ARMC6\r\n\r\n**Toolchain version:**\r\nARM: 5.06\r\nARMC6: 6.9\r\n\r\n**mbed-cli version:** \r\n1.4.0\r\n\r\n**mbed-os sha:**\r\nf6bcbfe Merge pull request #6356 from hug-dev/asm-include-flags\r\n\r\n**How to?**\r\nAccording to **Arm C and C++ Libraries and Floating-Point Support User Guide**, `malloc()` can be made thread-safe by implementing the \\_mutex\\_*() functions. I want to check its validity in ARMC6.\r\n\r\nI compile Greentea test code `mbed-os-tests-mbedmicro-rtos-mbed-malloc` with **ARM** toolchain and check generated MAP file `malloc.map`. I can find \\_mutex\\_*() functions (`_mutex_initialize/acquire/release/free`) are included, so I am convinced `malloc()` is thread-safe.\r\n```\r\nmbed test -m NUMAKER_PFM_NUC472 -t ARM -n mbed-os-tests-mbedmicro-rtos-mbed-malloc --compile\r\n```\r\n\r\nBut then I compile the same code with **ARMC6** toolchain and check generated MAP file `malloc.map`. I just find `_mutex_initialize` and doesn't find `_mutex_acquuire/release/free`. Is `malloc` thread-safe in ARMC6, or there's some other mechanism?\r\n```\r\nmbed test -m NUMAKER_PFM_NUC472 -t ARMC6 -n mbed-os-tests-mbedmicro-rtos-mbed-malloc --compile\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6390",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6390/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6390/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6390/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6390",
    "id": 306519214,
    "number": 6390,
    "title": "Need build profiles in Online Compiler",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 823120660,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20compiler",
        "name": "component: compiler",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-03-19T15:46:50Z",
    "updated_at": "2018-05-24T18:02:21Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "\r\n### Description\r\n- Type: Enhancement\r\n\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\nBuild profiles are super useful, you can use them to enable c++11 or switch to newlib-nano. Also they are required for release builds. I want them in the online compiler too. E.g. DISCO-LRWAN1 target can basically only be built if you do some tricks like newlib-nano, which makes developing in the online compiler almost impossible.\r\n\r\n**Suggested enhancement**\r\n\r\nAdd a dropdown in the online compiler to switch between profiles, and also allow profile customization.\r\n\r\n**Pros**\r\n\r\nC++11 and newlib-nano!\r\n\r\n**Cons**\r\n\r\nNo idea how much time it'd take."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6385",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6385/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6385/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6385/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6385",
    "id": 306151514,
    "number": 6385,
    "title": "LoRaWAN HAL does not support sub-band selection in US915 channel plan",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-17T12:09:53Z",
    "updated_at": "2018-04-06T07:36:23Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "\r\n### Description\r\n- Type: Bug\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nAll\r\n\r\n**Toolchain:**\r\nN/A\r\n\r\n**mbed-os sha:**\r\nMbed OS 5.8 RC\r\n\r\n**Expected behavior**\r\n\r\nUS915 uses 64 channels, but most gateways only support 8. Thus the network uses a sub-band of US915 to operate the LoRa network on. We should be able to specify which sub-band to use in code. If you use OTAA it will *eventually* find a right frequency (because it just hops around and at some point a join succeeds) but this is power inefficient and might take a long time. In ABP mode you'll see 7/8 packets lost, depending where we jump.\r\n\r\nI hacked around this by removing all channels except the ones in the sub-band that I use (by modifying the source code of the stack) but that's not a feasible solution. We need an API to specify sub-band in US915 frequency plan. MT stack provides this for example, and I believe LMiC has it too.\r\n\r\nThis is easy to replicate. Take US915 gateway, connect it to TTN, use ABP to send data to the network. Only if channel index 8..15 are used do messages arrive, the rest of messages is lost.\r\n\r\n@hasnainvirk @sg- I'd say this should be fixed in Mbed OS 5.8.1 because the stack appears broken for anyone trying to use it in the US."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6384",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6384/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6384/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6384/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6384",
    "id": 306137420,
    "number": 6384,
    "title": "Is there any way I can use SDIO with filesystem?",
    "user": {
      "login": "savent404",
      "id": 22891432,
      "avatar_url": "https://avatars2.githubusercontent.com/u/22891432?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/savent404",
      "html_url": "https://github.com/savent404",
      "followers_url": "https://api.github.com/users/savent404/followers",
      "following_url": "https://api.github.com/users/savent404/following{/other_user}",
      "gists_url": "https://api.github.com/users/savent404/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/savent404/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/savent404/subscriptions",
      "organizations_url": "https://api.github.com/users/savent404/orgs",
      "repos_url": "https://api.github.com/users/savent404/repos",
      "events_url": "https://api.github.com/users/savent404/events{/privacy}",
      "received_events_url": "https://api.github.com/users/savent404/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-03-17T07:56:22Z",
    "updated_at": "2018-03-27T01:43:05Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Question\r\n- Priority: Major\r\n\r\n## Question\r\n\r\n**As title**\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6383",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6383/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6383/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6383/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6383",
    "id": 306136862,
    "number": 6383,
    "title": "How can I get STM32's IRQ and re-write it",
    "user": {
      "login": "savent404",
      "id": 22891432,
      "avatar_url": "https://avatars2.githubusercontent.com/u/22891432?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/savent404",
      "html_url": "https://github.com/savent404",
      "followers_url": "https://api.github.com/users/savent404/followers",
      "following_url": "https://api.github.com/users/savent404/following{/other_user}",
      "gists_url": "https://api.github.com/users/savent404/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/savent404/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/savent404/subscriptions",
      "organizations_url": "https://api.github.com/users/savent404/orgs",
      "repos_url": "https://api.github.com/users/savent404/repos",
      "events_url": "https://api.github.com/users/savent404/events{/privacy}",
      "received_events_url": "https://api.github.com/users/savent404/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-03-17T07:44:43Z",
    "updated_at": "2018-04-25T13:22:45Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Question\r\n\r\n## Question\r\n\r\n**I want to write a sdio driver for SDFileSystem, How can I get SDIO's IRQ handle in mbed?**\r\nMy way is transplant from STM32F411RE's SD BSP(using SDIO DMA mode with \r\n\r\nI can write interrupt handle but this function is at 0x0800xxxx, and I found nvic vector is at 0x020000xx, so the function i wrote would never be called.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6382",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6382/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6382/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6382/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6382",
    "id": 306068499,
    "number": 6382,
    "title": "LPCXpresso54114 has no PWMOUT - but it's on the hardware",
    "user": {
      "login": "janjongboom",
      "id": 816856,
      "avatar_url": "https://avatars3.githubusercontent.com/u/816856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/janjongboom",
      "html_url": "https://github.com/janjongboom",
      "followers_url": "https://api.github.com/users/janjongboom/followers",
      "following_url": "https://api.github.com/users/janjongboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/janjongboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/janjongboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/janjongboom/subscriptions",
      "organizations_url": "https://api.github.com/users/janjongboom/orgs",
      "repos_url": "https://api.github.com/users/janjongboom/repos",
      "events_url": "https://api.github.com/users/janjongboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/janjongboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-16T20:35:34Z",
    "updated_at": "2018-03-26T07:06:42Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "\r\n\r\n### Description\r\n- Type: Bug\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nLPCXpresso54114\r\n\r\n**Toolchain:**\r\nN/A\r\n\r\n**mbed-os sha:**\r\nMbed OS 5.7.5\r\n\r\n**Expected behavior**\r\n\r\nIn targets.json this board is marked as not having PWM: https://github.com/ARMmbed/mbed-os/blob/7c30faf69de11c84acc5853ed322e8b67a4ce33a/targets/targets.json#L736\r\n\r\nBut that's not correct, the board should support PWM, it's even listed on the board page at https://os.mbed.com/platforms/LPCXpresso54114/. Any idea what's going on?\r\n\r\nhttps://os.mbed.com/questions/80523/PWM-doesnt-work-with-LPCxpresso-54114-Po/\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6380",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6380/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6380/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6380/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6380",
    "id": 305881427,
    "number": 6380,
    "title": "HAL Flash sector erase doesn't work consistently",
    "user": {
      "login": "normads",
      "id": 3591654,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3591654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/normads",
      "html_url": "https://github.com/normads",
      "followers_url": "https://api.github.com/users/normads/followers",
      "following_url": "https://api.github.com/users/normads/following{/other_user}",
      "gists_url": "https://api.github.com/users/normads/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/normads/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/normads/subscriptions",
      "organizations_url": "https://api.github.com/users/normads/orgs",
      "repos_url": "https://api.github.com/users/normads/repos",
      "events_url": "https://api.github.com/users/normads/events{/privacy}",
      "received_events_url": "https://api.github.com/users/normads/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-03-16T10:45:49Z",
    "updated_at": "2018-03-26T08:49:58Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I'm emulating an EEPROM on STM32F746ZG (nucleo board) using sector 6 and 7 and HAL_FLASHEx_Erase(&pEraseInit, &SectorError) does not consistently erase the sector. \r\nchecking whether the sector is erased and erasing again in a loop usually works after 1 or 2 iterations and sometimes rarely takes upto 5 iterations. \r\n\r\nGCC_ARM\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6374",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6374/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6374/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6374/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6374",
    "id": 305531161,
    "number": 6374,
    "title": "fopen() fails on PC-formatted FAT32 SD cards, even after formatting them in mbed-os",
    "user": {
      "login": "amq",
      "id": 4178389,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4178389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amq",
      "html_url": "https://github.com/amq",
      "followers_url": "https://api.github.com/users/amq/followers",
      "following_url": "https://api.github.com/users/amq/following{/other_user}",
      "gists_url": "https://api.github.com/users/amq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amq/subscriptions",
      "organizations_url": "https://api.github.com/users/amq/orgs",
      "repos_url": "https://api.github.com/users/amq/repos",
      "events_url": "https://api.github.com/users/amq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-03-15T12:25:13Z",
    "updated_at": "2018-05-22T17:06:13Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nTested on EFM32PG12\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\n6-2017-q2-update\r\n\r\n**mbed-cli version:** \r\n1.3.0\r\n\r\n**mbed-os sha:**\r\ncaeaa49d68c67ee00275cece10cd88e0ed0f6ed3\r\n\r\n**sd-driver version:**\r\n[`f4ab55d`](https://github.com/ARMmbed/sd-driver/tree/f4ab55df7768cfcb049b522bebd30218ee729c81)\r\n\r\n**Expected behavior**\r\n\r\n`mount()` and `fopen()` should work after a successful `format()`\r\n\r\n**Actual behavior**\r\n\r\n1. Inserted an 8GB Kingston SDHC card into the module and ran the code, everything fine\r\n2. Inserted it into PC, appeared as non-formatted, I formatted it with FAT32, 4096 byte block size\r\n3. Ran the code again, `mount()` and `fopen()` started to constantly fail\r\n4. The card gets formatted just fine on PC, including writing files\r\n\r\nTested with 100 KHz, 1 MHz, 10 MHz and 25 MHz.\r\n\r\n**Steps to reproduce**\r\n\r\n```\r\nconst string SD_MOUNT_PATH = \"sd\";\r\nconst string SD_FILE_PATH = \"/\" + SD_MOUNT_PATH + \"/file.tmp\";\r\n\r\nint main() {\r\n    static SDBlockDevice sd(SDMOSI, SDMISO, SDSCK, SDCS);\r\n    static FATFileSystem fs(SD_MOUNT_PATH.c_str());\r\n\r\n    sd.init(); // returns 0\r\n    fs.format(&sd); // returns 0\r\n    fs.mount(&sd); // returns -2\r\n\r\n    FILE *file = fopen(SD_FILE_PATH.c_str(), \"w+\"); // errno is 2\r\n    if (file != NULL) {\r\n        fclose(file);\r\n    }\r\n\r\n    fs.unmount();\r\n    sd.deinit();\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6362",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6362/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6362/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6362/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6362",
    "id": 305273106,
    "number": 6362,
    "title": "Waking STM32L073 from sleep",
    "user": {
      "login": "donpowrie",
      "id": 8753010,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8753010?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/donpowrie",
      "html_url": "https://github.com/donpowrie",
      "followers_url": "https://api.github.com/users/donpowrie/followers",
      "following_url": "https://api.github.com/users/donpowrie/following{/other_user}",
      "gists_url": "https://api.github.com/users/donpowrie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/donpowrie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/donpowrie/subscriptions",
      "organizations_url": "https://api.github.com/users/donpowrie/orgs",
      "repos_url": "https://api.github.com/users/donpowrie/repos",
      "events_url": "https://api.github.com/users/donpowrie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/donpowrie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 328051906,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20st",
        "name": "devices: st",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 22,
    "created_at": "2018-03-14T18:13:49Z",
    "updated_at": "2018-05-22T13:13:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Bug | Enhancement | Question\r\n- Related issue: `#abc`\r\n- Priority: Blocker | Major | Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nK64F|??\r\n\r\n**Toolchain:**\r\nGCC_ARM|ARM|IAR\r\n\r\n**Toolchain version:**\r\n\r\n**mbed-cli version:** \r\n(`mbed --version`)\r\n\r\n**mbed-os sha:**\r\n(`git log -n1 --oneline`)\r\n\r\n**DAPLink version:**\r\n\r\n**Expected behavior**\r\n\r\n**Actual behavior**\r\n\r\n**Steps to reproduce**\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n\r\n**Suggested enhancement**\r\n\r\n**Pros**\r\n\r\n**Cons**\r\n\r\n-----------------------------------------------------------------\r\n\r\n## Question\r\n\r\n**How to?**\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6355",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6355/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6355/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6355/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6355",
    "id": 305126911,
    "number": 6355,
    "title": "GR-Peach / GR-LYCHEE Thread & Ticker Can't run at the same time",
    "user": {
      "login": "Meano",
      "id": 7509521,
      "avatar_url": "https://avatars3.githubusercontent.com/u/7509521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Meano",
      "html_url": "https://github.com/Meano",
      "followers_url": "https://api.github.com/users/Meano/followers",
      "following_url": "https://api.github.com/users/Meano/following{/other_user}",
      "gists_url": "https://api.github.com/users/Meano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Meano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Meano/subscriptions",
      "organizations_url": "https://api.github.com/users/Meano/orgs",
      "repos_url": "https://api.github.com/users/Meano/repos",
      "events_url": "https://api.github.com/users/Meano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Meano/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 516081004,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20renesas",
        "name": "devices: renesas",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-14T11:50:41Z",
    "updated_at": "2018-05-23T03:15:39Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Bug\r\n- Related issue:\r\n- Priority: Major\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nRZ_A1H|GR_LYCHEE\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\nGCC ARM 6-2017-Q2\r\n\r\n**mbed-cli version:** \r\n1.4.0\r\n\r\n**mbed-os sha:**\r\naf46177a6 (mbed-os-5.4 had no problem)\r\n\r\n**DAPLink version:**\r\nUnconcerned\r\n\r\n**Expected behavior**\r\nThread and Ticker Callback Function runs Well\r\n\r\n**Actual behavior**\r\nThread function stop running after start a while.\r\n\r\n**Steps to reproduce**\r\ncompile the code and run a well, Thread function can't trigger breakpoint.\r\n\r\n```\r\n#include \"mbed.h\"\r\nTicker flipper;\r\nThread thread;\r\nDigitalOut led1(LED1);\r\nDigitalOut led2(LED2);\r\nvoid  trd(){\r\n    while(true){\r\n\tled1 = !led1;\r\n\twait_ms(5);\t \r\n    }\r\n}\r\nvoid flip() {\r\n    led2 = !led2;\r\n}\r\n\r\nint main() {\r\n    led2 = 1;\r\n    flipper.attach(&flip, 0.001);\r\n\tthread.start(trd);\r\n\r\n    while(1) {\r\n        wait(0.2);\r\n    }\r\n}\r\n\r\n```\r\n@TomoYamanaka "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6342",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6342/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6342/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6342/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6342",
    "id": 304636598,
    "number": 6342,
    "title": "Fail to run Greentea test on inherited target",
    "user": {
      "login": "ccli8",
      "id": 15923441,
      "avatar_url": "https://avatars3.githubusercontent.com/u/15923441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccli8",
      "html_url": "https://github.com/ccli8",
      "followers_url": "https://api.github.com/users/ccli8/followers",
      "following_url": "https://api.github.com/users/ccli8/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccli8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccli8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccli8/subscriptions",
      "organizations_url": "https://api.github.com/users/ccli8/orgs",
      "repos_url": "https://api.github.com/users/ccli8/repos",
      "events_url": "https://api.github.com/users/ccli8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccli8/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-13T05:53:39Z",
    "updated_at": "2018-03-13T08:10:17Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n- Priority: Major\r\n\r\n-----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Target**\r\nNUMAKER_PFM_NUC472\r\n\r\n**Toolchain:**\r\nARM\r\n\r\n**mbed-cli version:** \r\n1.4.0\r\n\r\n**python**\r\n2.7.1\r\n\r\n**mbed-os sha:**\r\nf67fe4a Merge pull request #6257 from SenRamakri/sen_FaultHandlerFixes\r\n\r\n-----------------------------------------------------------------\r\n\r\nIf I run on original target **NUMAKER_PFM_NUC472**:\r\n```\r\nmbed test -m NUMAKER_PFM_NUC472 -t ARM\r\n```\r\nEverything goes fine.\r\n\r\n-----------------------------------------------------------------\r\n\r\nIf I add target **NUMAKER_PFM_NUC472_NOXRAM** inheriting **NUMAKER_PFM_NUC472** in `mbed_app.json`:\r\n```\r\n    \"NUMAKER_PFM_NUC472_NOXRAM\": {\r\n        \"inherits\": [\"NUMAKER_PFM_NUC472\"],\r\n        \"extra_labels_remove\": [\"NU_XRAM_SUPPORTED\"],\r\n        \"extra_labels_add\": [\"NU_XRAM_UNSUPPORTED\"]\r\n    }\r\n```\r\nAnd run:\r\n```\r\nmbed test -m NUMAKER_PFM_NUC472_NOXRAM -t ARM\r\n```\r\nI get error:\r\n```\r\nusage: test.py [-h] [-m MCU] [-t TOOLCHAIN] [--color] [--cflags CFLAGS]\r\n               [--asmflags ASMFLAGS] [--ldflags LDFLAGS] [-c]\r\n               [--profile PROFILE] [--app-config APP_CONFIG] [-D MACROS]\r\n               [-j JOBS] [--source SOURCE_DIR] [--build BUILD_DIR] [-l]\r\n               [-p PATHS] [-f FORMAT] [--continue-on-build-fail] [-n NAMES]\r\n               [--test-config TEST_CONFIG] [--test-spec TEST_SPEC]\r\n               [--build-report-junit BUILD_REPORT_JUNIT]\r\n               [--build-data BUILD_DATA] [-v] [--stats-depth STATS_DEPTH]\r\ntest.py: error: argument -m/--mcu: NUMAKER_PFM_NUC472_NOXRAM is not a supported MCU. Supported MCUs are:\r\nARCH_BLE,              ARCH_BLE_BOOT,         ARCH_BLE_OTA,\r\nARCH_GPRS,             ARCH_LINK,             ARCH_LINK_BOOT,\r\nARCH_LINK_OTA,         ARCH_MAX,              ARCH_PRO,\r\nARM_BEETLE_SOC,        ARM_CM3DS_MPS2,        ARM_IOTSS_BEID,\r\nARM_MPS2_M0,           ARM_MPS2_M0P,          ARM_MPS2_M1,\r\nARM_MPS2_M3,           ARM_MPS2_M4,           ARM_MPS2_M7,\r\nB96B_F446VE,           BLUEPILL_F103C8,       DELTA_DFBM_NQ620,\r\nDELTA_DFCM_NNN40,      DELTA_DFCM_NNN40_BOOT, DELTA_DFCM_NNN40_OTA,\r\nDELTA_DFCM_NNN50,      DELTA_DFCM_NNN50_BOOT, DELTA_DFCM_NNN50_OTA,\r\nDISCO_F051R8,          DISCO_F100RB,          DISCO_F303VC,\r\nDISCO_F334C8,          DISCO_F401VC,          DISCO_F407VG,\r\nDISCO_F413ZH,          DISCO_F429ZI,          DISCO_F469NI,\r\nDISCO_F746NG,          DISCO_F769NI,          DISCO_L053C8,\r\nDISCO_L072CZ_LRWAN1,   DISCO_L475VG_IOT01A,   DISCO_L476VG,\r\nEFM32GG_STK3700,       EFM32HG_STK3400,       EFM32LG_STK3600,\r\nEFM32PG12_STK3402,     EFM32PG_STK3401,       EFM32WG_STK3800,\r\nEFM32ZG_STK3200,       ELEKTOR_COCORICO,      ELMO_F411RE,\r\nEV_COG_AD3029LZ,       EV_COG_AD4050LZ,       FF1705_L151CC,\r\nFF_LPC546XX,           GR_LYCHEE,             HEXIWEAR,\r\nHRM1017,               HRM1017_BOOT,          HRM1017_OTA,\r\nK20D50M,               K22F,                  K64F,\r\nK66F,                  K82F,                  KL05Z,\r\nKL25Z,                 KL26Z,                 KL27Z,\r\nKL43Z,                 KL46Z,                 KL82Z,\r\nKW24D,                 KW41Z,                 LPC1114,\r\nLPC11C24,              LPC11U24,              LPC11U24_301,\r\nLPC11U34_421,          LPC11U35_401,          LPC11U35_501,\r\nLPC11U35_501_IBDAP,    LPC11U35_Y5_MBUG,      LPC11U37H_401,\r\nLPC11U37_501,          LPC11U68,              LPC1347,\r\nLPC1549,               LPC1768,               LPC1769,\r\nLPC4088,               LPC4088_DM,            LPC4330_M0,\r\nLPC4330_M4,            LPC4337,               LPC54114,\r\nLPC546XX,              LPC810,                LPC812,\r\nLPC824,                LPCCAPPUCCINO,         MAX32600MBED,\r\nMAX32620HSP,           MAX32625MBED,          MAX32625NEXPAQ,\r\nMAX32630FTHR,          MAXWSNENV,             MBED_CONNECT_ODIN,\r\nMCU_LPC4088,           MCU_LPC546XX,          MICRONFCBOARD,\r\nMIMXRT1050_EVK,        MODULE_UBLOX_ODIN_W2,  MOTE_L152RC,\r\nMTB_ADV_WISE_1510,     MTB_ADV_WISE_1570,     MTB_LAIRD_BL600,\r\nMTB_LAIRD_BL652,       MTB_MTS_DRAGONFLY,     MTB_MTS_XDOT,\r\nMTB_MURATA_ABZ,        MTB_MXCHIP_EMW3166,    MTB_UBLOX_NINA_B1,\r\nMTB_UBLOX_ODIN_W2,     MTM_MTCONNECT04S,      MTM_MTCONNECT04S_BOOT,\r\nMTM_MTCONNECT04S_OTA,  MTS_DRAGONFLY_F411RE,  MTS_GAMBIT,\r\nMTS_MDOT_F405RG,       MTS_MDOT_F411RE,       NCS36510,\r\nNRF51822,              NRF51822_BOOT,         NRF51822_OTA,\r\nNRF51822_Y5_MBUG,      NRF51_DK,              NRF51_DK_BOOT,\r\nNRF51_DK_LEGACY,       NRF51_DK_OTA,          NRF51_DONGLE,\r\nNRF51_DONGLE_BOOT,     NRF51_DONGLE_LEGACY,   NRF51_DONGLE_OTA,\r\nNRF51_MICROBIT,        NRF51_MICROBIT_B,      NRF51_MICROBIT_BOOT,\r\nNRF51_MICROBIT_B_BOOT, NRF51_MICROBIT_B_OTA,  NRF51_MICROBIT_OTA,\r\nNRF52840_DK,           NRF52_DK,              NUCLEO_F030R8,\r\nNUCLEO_F031K6,         NUCLEO_F042K6,         NUCLEO_F070RB,\r\nNUCLEO_F072RB,         NUCLEO_F091RC,         NUCLEO_F103RB,\r\nNUCLEO_F207ZG,         NUCLEO_F302R8,         NUCLEO_F303K8,\r\nNUCLEO_F303RE,         NUCLEO_F303ZE,         NUCLEO_F334R8,\r\nNUCLEO_F401RE,         NUCLEO_F410RB,         NUCLEO_F411RE,\r\nNUCLEO_F412ZG,         NUCLEO_F413ZH,         NUCLEO_F429ZI,\r\nNUCLEO_F439ZI,         NUCLEO_F446RE,         NUCLEO_F446ZE,\r\nNUCLEO_F746ZG,         NUCLEO_F756ZG,         NUCLEO_F767ZI,\r\nNUCLEO_L011K4,         NUCLEO_L031K6,         NUCLEO_L053R8,\r\nNUCLEO_L073RZ,         NUCLEO_L152RE,         NUCLEO_L432KC,\r\nNUCLEO_L433RC_P,       NUCLEO_L476RG,         NUCLEO_L486RG,\r\nNUCLEO_L496ZG,         NUCLEO_L496ZG_P,       NUMAKER_PFM_M453,\r\nNUMAKER_PFM_M487,      NUMAKER_PFM_NANO130,   NUMAKER_PFM_NUC472,\r\nNZ32_SC151,            OC_MBUINO,             OSHCHIP,\r\nRBLAB_BLENANO,         RBLAB_BLENANO2,        RBLAB_BLENANO_BOOT,\r\nRBLAB_BLENANO_OTA,     RBLAB_NRF51822,        RBLAB_NRF51822_BOOT,\r\nRBLAB_NRF51822_OTA,    REALTEK_RTL8195AM,     RO359B,\r\nRZ_A1H,                RZ_A1XX,               SAKURAIO_EVB_01,\r\nSAMD21G18A,            SAMD21J18A,            SAMG55J19,\r\nSAML21J18A,            SAMR21G18A,            SARA_NBIOT_EVK,\r\nSEEED_TINY_BLE,        SEEED_TINY_BLE_BOOT,   SEEED_TINY_BLE_OTA,\r\nSILICA_SENSOR_NODE,    SSCI824,               STEVAL_3DP001V1,\r\nSuper_Target,          TB_SENSE_1,            TB_SENSE_12,\r\nTEENSY3_1,             TMPM066,               TY51822R3,\r\nTY51822R3_BOOT,        TY51822R3_OTA,         UBLOX_C027,\r\nUBLOX_C030_N211,       UBLOX_C030_R410M,      UBLOX_C030_U201,\r\nUBLOX_EVA_NINA,        UBLOX_EVK_NINA_B1,     UBLOX_EVK_ODIN_W2,\r\nUBRIDGE,               USENSE,                VBLUNO51,\r\nVBLUNO51_BOOT,         VBLUNO51_LEGACY,       VBLUNO51_OTA,\r\nVBLUNO52,              VK_RZ_A1H,             WALLBOT_BLE,\r\nWALLBOT_BLE_BOOT,      WALLBOT_BLE_OTA,       WIZWIKI_W7500,\r\nWIZWIKI_W7500ECO,      WIZWIKI_W7500P,        XADOW_M0,\r\nXBED_LPC1768,          XDOT_L151CC\r\n[mbed] ERROR: \"c:\\python27\\python.exe\" returned error code 2.\r\n[mbed] ERROR: Command \"c:\\python27\\python.exe -u C:\\ccli8\\iot\\mbed\\mbed-os\\nu-greentea\\mbed-os\\tools\\test.py -t ARM -m NUMAKER_PFM_NUC472_NOXRAM --source C:\\ccli8\\iot\\mbed\\mbed-os\\nu-greentea --build C:\\ccli8\\iot\\mbed\\mbed-os\\nu-greentea\\BUILD\\tests\\NUMAKER_PFM_NUC472_NOXRAM\\ARM --test-spec C:\\ccli8\\iot\\mbed\\mbed-os\\nu-greentea\\BUILD\\tests\\NUMAKER_PFM_NUC472_NOXRAM\\ARM\\test_spec.json\" in \"C:\\ccli8\\iot\\mbed\\mbed-os\\nu-greentea\"\r\n---\r\n```\r\n\r\n-----------------------------------------------------------------\r\n\r\nIf I add target **NUMAKER_PFM_NUC472_NOXRAM** inheriting **NUMAKER_PFM_NUC472** in `mbed-os/targets/targets.json`:\r\n```\r\n{\r\n   \"NUMAKER_PFM_NUC472_NOXRAM\": {\r\n        \"inherits\": [\"NUMAKER_PFM_NUC472\"],\r\n        \"extra_labels_remove\": [\"NU_XRAM_SUPPORTED\"],\r\n        \"extra_labels_add\": [\"NU_XRAM_UNSUPPORTED\"]\r\n    }\r\n}\r\n```\r\nAnd run:\r\n```\r\nmbed test -m NUMAKER_PFM_NUC472_NOXRAM -t ARM\r\n```\r\nI get error:\r\n```\r\nmbedgt: greentea test automation tool ver. 1.3.1\r\nmbedgt: test specification file 'C:\\ccli8\\iot\\mbed\\mbed-os\\nu-greentea\\BUILD\\tests\\NUMAKER_PFM_NUC472_NOXRAM\\ARM\\test_spec.json' (specified with --test-spec option)\r\nmbedgt: using 'C:\\ccli8\\iot\\mbed\\mbed-os\\nu-greentea\\BUILD\\tests\\NUMAKER_PFM_NUC472_NOXRAM\\ARM\\test_spec.json' from current directory!\r\nmbedgt: detecting connected mbed-enabled devices...\r\n[1520919809.70][mbedls.lstools_base]Call to deprecated function list_mbeds_ext. Functionality has been moved into 'list_mbeds'. Please use list_mbeds with 'unique_names=True' and 'read_details_txt=True'\r\n[1520919810.22][root]Found htm target id, 1302000000C60021011DAC8700000066, for usb target id 1302000000C60021011DAC8700000066\r\nmbedgt: detected 1 device\r\nmbedgt: processing target 'NUMAKER_PFM_NUC472_NOXRAM' toolchain 'ARM' compatible platforms... (note: switch set to --parallel 1)\r\nmbedgt: all tests finished!\r\nmbedgt: shuffle seed: 0.1704255073\r\nmbedgt: no platform/target matching tests were found!\r\nmbedgt: no matching platforms were found!\r\nmbedgt: completed in 0.66 sec\r\nmbedgt: exited with code -110\r\n[mbed] ERROR: \"mbedgt\" returned error code -110.\r\n[mbed] ERROR: Command \"mbedgt --test-spec C:\\ccli8\\iot\\mbed\\mbed-os\\nu-greentea\\BUILD\\tests\\NUMAKER_PFM_NUC472_NOXRAM\\ARM\\test_spec.json\" in \"C:\\ccli8\\iot\\mbed\\mbed-os\\nu-greentea\"\r\n---\r\n\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6339",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6339/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6339/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6339/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6339",
    "id": 304563371,
    "number": 6339,
    "title": "2 Questions about \"targets.json\"",
    "user": {
      "login": "0x6d61726b",
      "id": 25281946,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25281946?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x6d61726b",
      "html_url": "https://github.com/0x6d61726b",
      "followers_url": "https://api.github.com/users/0x6d61726b/followers",
      "following_url": "https://api.github.com/users/0x6d61726b/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x6d61726b/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x6d61726b/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x6d61726b/subscriptions",
      "organizations_url": "https://api.github.com/users/0x6d61726b/orgs",
      "repos_url": "https://api.github.com/users/0x6d61726b/repos",
      "events_url": "https://api.github.com/users/0x6d61726b/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x6d61726b/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-03-12T22:27:39Z",
    "updated_at": "2018-03-29T20:38:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "## Question\r\n\r\n- Is it intended that the `\"Super_Target\"` does not contain the definition `\"public\": false`?\r\n- Are `\"target_overrides\"` expected to be present here (see \"HI2110\") instead within the corresponding library?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6335",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6335/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6335/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6335/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6335",
    "id": 304420025,
    "number": 6335,
    "title": "Exporting to Makefilefile fails to build on larger project in Windows",
    "user": {
      "login": "SeppoTakalo",
      "id": 3104794,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3104794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SeppoTakalo",
      "html_url": "https://github.com/SeppoTakalo",
      "followers_url": "https://api.github.com/users/SeppoTakalo/followers",
      "following_url": "https://api.github.com/users/SeppoTakalo/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeppoTakalo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SeppoTakalo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeppoTakalo/subscriptions",
      "organizations_url": "https://api.github.com/users/SeppoTakalo/orgs",
      "repos_url": "https://api.github.com/users/SeppoTakalo/repos",
      "events_url": "https://api.github.com/users/SeppoTakalo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SeppoTakalo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515347831,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20tools",
        "name": "component: tools",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "theotherjimmy",
      "id": 685409,
      "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theotherjimmy",
      "html_url": "https://github.com/theotherjimmy",
      "followers_url": "https://api.github.com/users/theotherjimmy/followers",
      "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
      "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
      "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
      "repos_url": "https://api.github.com/users/theotherjimmy/repos",
      "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "theotherjimmy",
        "id": 685409,
        "avatar_url": "https://avatars2.githubusercontent.com/u/685409?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theotherjimmy",
        "html_url": "https://github.com/theotherjimmy",
        "followers_url": "https://api.github.com/users/theotherjimmy/followers",
        "following_url": "https://api.github.com/users/theotherjimmy/following{/other_user}",
        "gists_url": "https://api.github.com/users/theotherjimmy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/theotherjimmy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/theotherjimmy/subscriptions",
        "organizations_url": "https://api.github.com/users/theotherjimmy/orgs",
        "repos_url": "https://api.github.com/users/theotherjimmy/repos",
        "events_url": "https://api.github.com/users/theotherjimmy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/theotherjimmy/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2018-03-12T15:28:27Z",
    "updated_at": "2018-05-22T13:16:38Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n## Bug\r\n\r\n**Target**\r\nAny\r\n\r\n**Toolchain:**\r\nAny Makefile based export.\r\n\r\n**Expected behavior**\r\n`mbed export -m <board> -i make_gcc_arm`\r\n`make`\r\n\r\n**Actual behavior**\r\nError code:\r\n`make (e=87): The parameter is incorrect.`\r\n\r\nThis is produced because the final link command is 44,252 characters long.\r\n\r\nWindows CreateProcess() only accepts command line maximum length to be 32,768 characters. [See here.](https://msdn.microsoft.com/en-us/library/windows/desktop/ms682425(v=vs.85).aspx)\r\n\r\nSimilar issue described here: https://stackoverflow.com/questions/12598933/ndk-build-createprocess-make-e-87-the-parameter-is-incorrect\r\n\r\n**Steps to reproduce**\r\nImport mbed-os-example-mesh-minimal\r\n`mbed export -m <board> -i make_gcc_arm`\r\n\r\n**Workarounds**\r\n1. Don't use Makefile builds on Windows.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6331",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6331/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6331/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6331/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6331",
    "id": 304358879,
    "number": 6331,
    "title": "Power-saving behaviour of Nanostack",
    "user": {
      "login": "stevew817",
      "id": 4510034,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4510034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevew817",
      "html_url": "https://github.com/stevew817",
      "followers_url": "https://api.github.com/users/stevew817/followers",
      "following_url": "https://api.github.com/users/stevew817/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevew817/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevew817/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevew817/subscriptions",
      "organizations_url": "https://api.github.com/users/stevew817/orgs",
      "repos_url": "https://api.github.com/users/stevew817/repos",
      "events_url": "https://api.github.com/users/stevew817/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevew817/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345275,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20networking",
        "name": "component: networking",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-03-12T12:52:03Z",
    "updated_at": "2018-03-12T14:13:28Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Question\r\n\r\n@SeppoTakalo \r\n\r\n-----------------------------------------------------------------\r\n## Question\r\nI've been test-driving Nanostack on EFR32 for a bit now, and wanted to ask about its power-saving behaviour. When configured as a sleepy end-node, I can see it turns off the radio during the MAC downtime. So far, so good.\r\nHowever, during the sleepy time, the processor is still being woken up every 10ms. I traced this back to the nanostack event loop in the PAL. Is there any good reason why Nanostack needs a 10ms system ticker, when the underlying RTOS should be able to support all of Nanostack's timing requirements in a tickless way? Is there any work being done to resolve this, and integrate Nanostack into mbed instead of running its own tick-based scheduler on top of the RTOS' scheduler?"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6325",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6325/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6325/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6325/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6325",
    "id": 304145481,
    "number": 6325,
    "title": "LittleFs poor performance",
    "user": {
      "login": "YarivCol",
      "id": 12260153,
      "avatar_url": "https://avatars2.githubusercontent.com/u/12260153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YarivCol",
      "html_url": "https://github.com/YarivCol",
      "followers_url": "https://api.github.com/users/YarivCol/followers",
      "following_url": "https://api.github.com/users/YarivCol/following{/other_user}",
      "gists_url": "https://api.github.com/users/YarivCol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YarivCol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YarivCol/subscriptions",
      "organizations_url": "https://api.github.com/users/YarivCol/orgs",
      "repos_url": "https://api.github.com/users/YarivCol/repos",
      "events_url": "https://api.github.com/users/YarivCol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YarivCol/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-03-11T10:01:28Z",
    "updated_at": "2018-05-23T14:06:57Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Hello!\r\n\r\nIve started using LittleFs after reading about its powerloss resilient features.\r\n\r\nHowever, ive encountered  realy poor performance compared to FAT.\r\n\r\nThe same transaction took the FAT fs 2 read cycles and 2 write cycles while with the LFS it took 254 read cycles and 45 write cycles. \r\n\r\nIs that a standard behavior?\r\n\r\nIm using an eeprom with ths size of 0X1FFFF bytes, and i formated the LFS with 512 bytes for read,progg and erase size and with 32-64 lookhead.\r\n\r\nThx for helpers :)"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6324",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6324/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6324/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6324/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6324",
    "id": 304003665,
    "number": 6324,
    "title": "REALTEK_RTL8195AM exporting is disabled on all the IDEs/Projects",
    "user": {
      "login": "jamesbeyond",
      "id": 34235743,
      "avatar_url": "https://avatars2.githubusercontent.com/u/34235743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesbeyond",
      "html_url": "https://github.com/jamesbeyond",
      "followers_url": "https://api.github.com/users/jamesbeyond/followers",
      "following_url": "https://api.github.com/users/jamesbeyond/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesbeyond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesbeyond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesbeyond/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesbeyond/orgs",
      "repos_url": "https://api.github.com/users/jamesbeyond/repos",
      "events_url": "https://api.github.com/users/jamesbeyond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesbeyond/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620926933,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20realtek",
        "name": "devices: realtek",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-09T22:41:29Z",
    "updated_at": "2018-05-22T13:17:43Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type:  Enhancement / Question\r\n- Priority:  Minor\r\n\r\n----------------------------------------------------------------\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\n `mbed export -S` shows REALTEK_RTL8195AM was disabled for all the type of export.\r\n\r\n**Suggested enhancement**\r\nThe OOB is requiring those features.\r\nShould those exporting features be supported?\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6318",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6318/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6318/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6318/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6318",
    "id": 303955667,
    "number": 6318,
    "title": "test :features-nvstore-tests-nvstore-functionality is failing on EV_COG_AD3029LZ and EV_COG_AD4050LZ",
    "user": {
      "login": "studavekar",
      "id": 25986241,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25986241?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/studavekar",
      "html_url": "https://github.com/studavekar",
      "followers_url": "https://api.github.com/users/studavekar/followers",
      "following_url": "https://api.github.com/users/studavekar/following{/other_user}",
      "gists_url": "https://api.github.com/users/studavekar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/studavekar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/studavekar/subscriptions",
      "organizations_url": "https://api.github.com/users/studavekar/orgs",
      "repos_url": "https://api.github.com/users/studavekar/repos",
      "events_url": "https://api.github.com/users/studavekar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/studavekar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-03-09T19:35:32Z",
    "updated_at": "2018-03-16T02:09:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nEV_COG_AD3029LZ | EV_COG_AD4050LZ\r\n\r\n**Toolchain:**\r\nGCC_ARM | ARM | IAR\r\n\r\n**mbed-os sha:**\r\n\r\nfd54e5eeb8535fb41874a30c3cd9e068d344e602\r\n\r\n**Steps to reproduce**\r\n\r\nUse command run :  mbed  test -m EV_COG_AD3029LZ -t GCC_ARM -n features-nvstore-tests-nvstore-functionality -v\r\n\r\n```\r\n[1520619942.40][GLRM][INF] remote resources reset...\r\n[1520619945.41][GLRM][TXD] mbedmbedmbedmbedmbedmbedmbedmbedmbedmbed\r\n[1520619945.42][CONN][INF] sending up to 10 __sync packets (specified with --sync=10)\r\n[1520619945.42][CONN][INF] sending preamble 'e34b2c3c-b20c-432b-81e7-3bab106aace7'\r\n[1520619945.42][GLRM][TXD] {{__sync;e34b2c3c-b20c-432b-81e7-3bab106aace7}}\r\n[1520619950.45][CONN][INF] resending new preamble '639af901-6815-4004-af34-adfd4c89c2bb' after 5.04 sec\r\n[1520619950.45][GLRM][TXD] {{__sync;639af901-6815-4004-af34-adfd4c89c2bb}}\r\n[1520619950.98][CONN][RXD] mbedmbedmbedmbedmbedmbedmbedmbed\r\n[1520619951.78][CONN][RXD] >>> Running 3 test cases...\r\n[1520619951.78][CONN][RXD] \r\n[1520619951.78][CONN][RXD] >>> Running case #1: 'NVStore: Basic functionality'...\r\n[1520619951.78][CONN][RXD] NVStore areas:\r\n[1520619951.78][CONN][RXD] Area 0: address 0x0003e000, size 4096 (0x1000)\r\n[1520619951.78][CONN][INF] found SYNC in stream: {{__sync;639af901-6815-4004-af34-adfd4c89c2bb}} it is #1 sent, queued...\r\n[1520619951.78][CONN][INF] found KV pair in stream: {{__version;1.3.0}}, queued...\r\n[1520619951.78][CONN][INF] found KV pair in stream: {{__timeout;120}}, queued...\r\n[1520619951.78][CONN][INF] found KV pair in stream: {{__host_test_name;default_auto}}, queued...\r\n[1520619951.78][CONN][INF] found KV pair in stream: {{__testcase_count;3}}, queued...\r\n[1520619951.78][CONN][INF] found KV pair in stream: {{__testcase_name;NVStore: Basic functionality}}, queued...\r\n[1520619951.78][CONN][INF] found KV pair in stream: {{__testcase_name;NVStore: Race test}}, queued...\r\n[1520619951.78][CONN][INF] found KV pair in stream: {{__testcase_name;NVStore: Multiple thread test}}, queued...\r\n[1520619951.78][HTST][INF] sync KV found, uuid=639af901-6815-4004-af34-adfd4c89c2bb, timestamp=1520619951.775586\r\n[1520619951.78][HTST][INF] DUT greentea-client version: 1.3.0\r\n[1520619951.78][HTST][INF] setting timeout to: 120 sec\r\n[1520619951.78][HTST][INF] host test class: '<class 'mbed_host_tests.host_tests.default_auto.DefaultAuto'>'\r\n[1520619951.78][HTST][INF] host test setup() call...\r\n[1520619951.78][HTST][INF] CALLBACKs updated\r\n[1520619951.78][HTST][INF] host test detected: default_auto\r\n[1520619951.79][CONN][INF] found KV pair in stream: {{__testcase_start;NVStore: Basic functionality}}, queued...\r\n[1520619952.46][CONN][RXD] Area 1: address 0x0003f000, size 4096 (0x1000)\r\n[1520620072.76][HTST][INF] test suite run finished after 120.98 sec...\r\n[1520620072.77][CONN][INF] received special event '__host_test_finished' value='True', finishing\r\n[1520620072.77][urllib3.connectionpool]Starting new HTTP connection (1): iron-gatekeeper\r\n[1520620072.88][urllib3.connectionpool]http://iron-gatekeeper:8000 \"PUT /resource/0602000041114e45001a3003b60f0012a6e1000097969900/disconnect HTTP/1.1\" 200 2\r\n[1520620072.88][urllib3.connectionpool]Starting new HTTP connection (1): iron-gatekeeper\r\n[1520620076.16][urllib3.connectionpool]http://iron-gatekeeper:8000 \"PUT /resource/0602000041114e45001a3003b60f0012a6e1000097969900/release HTTP/1.1\" 200 66\r\n[1520620076.16][HTST][INF] CONN exited with code: 0\r\n[1520620076.16][HTST][INF] No events in queue\r\n[1520620076.16][HTST][INF] stopped consuming events\r\n[1520620076.16][HTST][INF] host test result(): None\r\n[1520620076.16][HTST][WRN] missing __exit event from DUT\r\n[1520620076.16][HTST][WRN] missing __exit_event_queue event from host test\r\n[1520620076.16][HTST][ERR] missing __exit_event_queue event from host test and no result from host test, timeout...\r\n[1520620076.16][HTST][INF] calling blocking teardown()\r\n[1520620076.16][HTST][INF] teardown() finished\r\n[1520620076.16][HTST][INF] {{result;timeout}}\r\n```\r\n\r\nCC : @maclobdell @bentcooke "
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6317",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6317/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6317/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6317/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6317",
    "id": 303947135,
    "number": 6317,
    "title": "Question over SIGTRAP Breakpoint at mbed-os\\platform/mbed_semihost_api.h:50",
    "user": {
      "login": "grbd",
      "id": 8965579,
      "avatar_url": "https://avatars0.githubusercontent.com/u/8965579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grbd",
      "html_url": "https://github.com/grbd",
      "followers_url": "https://api.github.com/users/grbd/followers",
      "following_url": "https://api.github.com/users/grbd/following{/other_user}",
      "gists_url": "https://api.github.com/users/grbd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grbd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grbd/subscriptions",
      "organizations_url": "https://api.github.com/users/grbd/orgs",
      "repos_url": "https://api.github.com/users/grbd/repos",
      "events_url": "https://api.github.com/users/grbd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grbd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-03-09T19:05:20Z",
    "updated_at": "2018-05-22T13:18:40Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Question\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Question\r\n\r\n**Target**\r\nLPC1768\r\n**Toolchain:**\r\nGCC_ARM\r\n**Toolchain version:**\r\n7 2017-q4-major\r\n**mbed-cli version:** \r\n1.4.0\r\n\r\n## Question\r\n\r\nHi,\r\nI've been experimenting debugging mbed code using Visual Studio Code, and Cortex-M GDB Plugin\r\nAlong with a JLink Segger\r\n\r\nFor the following board (which is a LPC1769)\r\n\r\n  * https://www.embeddedartists.com/products/lpcxpresso/lpc1769_cmsis_xpr.php\r\n\r\nSo far I've gotten everything working\r\nbut when calling the wait function, the code breakpoints at the following without a breakpoint being set\r\nwhich makes debugging code difficult\r\n\r\n```\r\nProgram\r\n received signal SIGTRAP, Trace/breakpoint trap.\r\n0x00000e38 in __semihost () at .\\mbed-os\\platform/mbed_semihost_api.h:50\r\n50\t    asm volatile (\r\n```\r\n\r\nEven though no breakpoint is set\r\n\r\nIf I disable the RTOS by adding the following to .mbedignore\r\n```\r\nmbed-os/rtos/*\r\nmbed-os/features/FEATURE_CLIENT/*\r\nmbed-os/features/FEATURE_COMMON_PAL/*\r\nmbed-os/features/FEATURE_UVISOR/*\r\nmbed-os/features/FEATURE_LWIP/*\r\nmbed-os/features/frameworks/*\r\nmbed-os/features/net/*\r\nmbed-os/features/netsocket/*\r\nmbed-os/features/storage/*\r\nmbed-os/events/*\r\n```\r\n\r\nThis avoids the breakpoint for simple code with out the rtos\r\nI'm wondering if this is associated with DEVICE_SEMIHOST, which seems to be defined.\r\n\r\nmy local .mbed config file btw is\r\n```\r\nROOT=.\r\nTARGET=LPC1768\r\nTOOLCHAIN=GCC_ARM\r\nGCC_ARM_PATH=C:\\Program Files (x86)\\GNU Tools ARM Embedded\\7 2017-q4-major\\bin\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6307",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6307/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6307/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6307/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6307",
    "id": 303615126,
    "number": 6307,
    "title": "Test: attach stub RTC fails for MAX32630FTHR",
    "user": {
      "login": "studavekar",
      "id": 25986241,
      "avatar_url": "https://avatars3.githubusercontent.com/u/25986241?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/studavekar",
      "html_url": "https://github.com/studavekar",
      "followers_url": "https://api.github.com/users/studavekar/followers",
      "following_url": "https://api.github.com/users/studavekar/following{/other_user}",
      "gists_url": "https://api.github.com/users/studavekar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/studavekar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/studavekar/subscriptions",
      "organizations_url": "https://api.github.com/users/studavekar/orgs",
      "repos_url": "https://api.github.com/users/studavekar/repos",
      "events_url": "https://api.github.com/users/studavekar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/studavekar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 550082561,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20maxim",
        "name": "devices: maxim",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-08T20:10:38Z",
    "updated_at": "2018-03-09T19:59:59Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Major \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nMAX32630FTHR\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**mbed-os sha:**\r\n\r\nf1d493dd0c5786b3ae3e63c16e3a21f16c0909af\r\n\r\n**Steps to reproduce**\r\n\r\nUse command run :  mbed  test -m MAX32630FTHR -t GCC_ARM -n tests-mbed_drivers-rtc -v\r\n\r\n[MAX32630FTHR_GCC_ARM_tests_mbed_drivers_rtc.log](https://github.com/ARMmbed/mbed-os/files/1794629/MAX32630FTHR_GCC_ARM_tests_mbed_drivers_rtc.log)\r\n\r\nCC : @maclobdell @bentcooke \r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6305",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6305/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6305/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6305/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6305",
    "id": 303568645,
    "number": 6305,
    "title": "compiler warnings on several NXP targets",
    "user": {
      "login": "bmcdonnell-ionx",
      "id": 34172339,
      "avatar_url": "https://avatars2.githubusercontent.com/u/34172339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmcdonnell-ionx",
      "html_url": "https://github.com/bmcdonnell-ionx",
      "followers_url": "https://api.github.com/users/bmcdonnell-ionx/followers",
      "following_url": "https://api.github.com/users/bmcdonnell-ionx/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmcdonnell-ionx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmcdonnell-ionx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmcdonnell-ionx/subscriptions",
      "organizations_url": "https://api.github.com/users/bmcdonnell-ionx/orgs",
      "repos_url": "https://api.github.com/users/bmcdonnell-ionx/repos",
      "events_url": "https://api.github.com/users/bmcdonnell-ionx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmcdonnell-ionx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 387014743,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20nxp",
        "name": "devices: nxp",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-08T17:40:28Z",
    "updated_at": "2018-03-09T10:59:35Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Bug\r\n- Priority: Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nMany NXP targets.\r\n\r\n**mbed-os sha:**\r\n`6ff720302 (tag: mbed-os-5.8.0-rc1, origin/mbed-os-5.8, mbed-os-5.8) Add Mbed version block for new minor release.`\r\n\r\n**Description**\r\n\r\nFor many NXP targets (e.g. LPC4088), the `serial_format()` function in `serial_api.c` doesn't handle invalid values of the `SerialParity` parameter correctly, leading to a compiler warning:\r\n\r\n```\r\n../mbed-os/targets/TARGET_NXP/TARGET_LPC408X/TARGET_LPC4088/serial_api.c: In function 'serial_format':\r\n../mbed-os/targets/TARGET_NXP/TARGET_LPC408X/TARGET_LPC4088/serial_api.c:236:43: warning: 'parity_select' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n                    | parity_select        << 4;\r\n                      ~~~~~~~~~~~~~~~~~~~~~^~~~\r\n../mbed-os/targets/TARGET_NXP/TARGET_LPC408X/TARGET_LPC4088/serial_api.c:235:43: warning: 'parity_enable' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n                    | parity_enable        << 3\r\n                      ~~~~~~~~~~~~~~~~~~~~~^~~~\r\n```\r\n\r\nAlso, the handling is not uniform. Various observed correct handling methods include:\r\n\r\n- `return` on the `default` `switch` `case`\r\n- set default values in the `default` `case`\r\n- set default values before the `switch` statement\r\n\r\nTo see all the variants (good and bad), you can do this at a POSIX command line:\r\n\r\n```\r\nfor f in `find targets/TARGET_NXP -name serial_api.c`; do echo $f; awk '/void +serial_format/,/^\\}/' $f; echo; done | less\r\n```\r\n\r\n**Suggested changes**\r\n\r\nChoose a method and apply it uniformly to all. Also make the `MBED_ASSERT`s consistent (add to or remove from all)."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6298",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6298/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6298/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6298/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6298",
    "id": 303300545,
    "number": 6298,
    "title": "Deprecation typo in BLE.h",
    "user": {
      "login": "AGlass0fMilk",
      "id": 350500,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AGlass0fMilk",
      "html_url": "https://github.com/AGlass0fMilk",
      "followers_url": "https://api.github.com/users/AGlass0fMilk/followers",
      "following_url": "https://api.github.com/users/AGlass0fMilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/AGlass0fMilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AGlass0fMilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AGlass0fMilk/subscriptions",
      "organizations_url": "https://api.github.com/users/AGlass0fMilk/orgs",
      "repos_url": "https://api.github.com/users/AGlass0fMilk/repos",
      "events_url": "https://api.github.com/users/AGlass0fMilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AGlass0fMilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515545581,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20ble",
        "name": "component: ble",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-07T23:35:37Z",
    "updated_at": "2018-03-08T07:47:06Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/ARMmbed/mbed-os/blob/79bd2638b8a2626905fdb1f542946b34cc9dce04/features/FEATURE_BLE/ble/BLE.h#L1052-L1063\r\n\r\n### Description\r\n- Type: Bug \r\n- Priority: Minor\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\nWhile updating the UARTService.h to match the new BLE API, I noticed the deprecation suggestion doesn't reflect the actual function. It says to use ble.gap().getGapState() but it should suggest ble.gap().getState()\r\n\r\nQuick fix :)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6293",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6293/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6293/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6293/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/pull/6293",
    "id": 303079881,
    "number": 6293,
    "title": "Reduce .text footprint of the network stack",
    "user": {
      "login": "Taiki-San",
      "id": 731787,
      "avatar_url": "https://avatars2.githubusercontent.com/u/731787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Taiki-San",
      "html_url": "https://github.com/Taiki-San",
      "followers_url": "https://api.github.com/users/Taiki-San/followers",
      "following_url": "https://api.github.com/users/Taiki-San/following{/other_user}",
      "gists_url": "https://api.github.com/users/Taiki-San/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Taiki-San/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Taiki-San/subscriptions",
      "organizations_url": "https://api.github.com/users/Taiki-San/orgs",
      "repos_url": "https://api.github.com/users/Taiki-San/repos",
      "events_url": "https://api.github.com/users/Taiki-San/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Taiki-San/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 144902129,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/needs:%20work",
        "name": "needs: work",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 23,
    "created_at": "2018-03-07T12:30:37Z",
    "updated_at": "2018-05-24T09:34:41Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/ARMmbed/mbed-os/pulls/6293",
      "html_url": "https://github.com/ARMmbed/mbed-os/pull/6293",
      "diff_url": "https://github.com/ARMmbed/mbed-os/pull/6293.diff",
      "patch_url": "https://github.com/ARMmbed/mbed-os/pull/6293.patch"
    },
    "body": "### Description\r\n\r\nPatches to LWIP and some code from netsocket was using `s[n]printf` and `sscanf` to generate and parse strings based on integers. Specifically, converting MAC addresses and IPv6 addresses to and from their hexadecimal form and IPv4 addresses to and from their printable decimal form.\r\n\r\nThe use of those functions in public APIs forced the compiler to bring the full parser necessary to make `*printf/sscanf` work. This parser is massive (in order to handle floating point for instance) and several of its components were in the largest functions in the final binary *independently*, despite the monolithics `tcp_input` and `tcp_output`. \r\n\r\nThe small test program I was using had the following memory breakdown before linking to the network stack when compiling with GCC and a release profile:\r\n```\r\nText 38.2KB Data 1.23KB BSS 9.21KB\r\nROM 39.5KB RAM 10.4KB\r\n```\r\nThe same program using the default network stack (K64F & Ethernet):\r\n```\r\nText 114KB Data 1.76KB BSS 54.4KB\r\nROM 116KB RAM 56.1KB\r\n```\r\nThen the same program using the network stack included in the PR, not using `*printf/sscanf` and thus not linking with the expensive parser:\r\n```\r\nText 87.3KB Data 1.4KB BSS 54.3KB\r\nROM 88.7KB RAM 55.7KB\r\n```\r\n\r\nAlthough the RAM change is negligeable (but still down), the .text impact is massive (-23%).\r\n\r\n|   | No network  | Default network | Patched network | `*printf` parser only |\r\n| ------- | ----------- | --------------- | --------------- | ------------------- |\r\n| ROM change | 1x | 3.03x | 2.24x | 0.71x |\r\n| Overhead | 0kB | 76.5kB | 49.2kB | 27.3kB |\r\n\r\nI couldn't find where to put the small utils I had to write (a basic itoa and two bin2hex) so they are inline and bin2hex had to be duplicated.\r\n\r\n### Pull request type\r\n\r\n- [ ] Fix\r\n- [x] Refactor\r\n- [ ] New target\r\n- [ ] Feature\r\n- [ ] Breaking change\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6259",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6259/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6259/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6259/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6259",
    "id": 302083250,
    "number": 6259,
    "title": "Error during export MBED to uVision for ARM STMicro Nucleo f103RB",
    "user": {
      "login": "juicerman",
      "id": 11136637,
      "avatar_url": "https://avatars3.githubusercontent.com/u/11136637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juicerman",
      "html_url": "https://github.com/juicerman",
      "followers_url": "https://api.github.com/users/juicerman/followers",
      "following_url": "https://api.github.com/users/juicerman/following{/other_user}",
      "gists_url": "https://api.github.com/users/juicerman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juicerman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juicerman/subscriptions",
      "organizations_url": "https://api.github.com/users/juicerman/orgs",
      "repos_url": "https://api.github.com/users/juicerman/repos",
      "events_url": "https://api.github.com/users/juicerman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juicerman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 823120660,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20compiler",
        "name": "component: compiler",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-04T12:50:47Z",
    "updated_at": "2018-05-22T22:42:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Description\r\n- Type: Bug \r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nNucleo-F103RB\r\n\r\n**Toolchain:**\r\nuVision 5\r\n\r\n![2018-03-04_15-31_mbed compiler](https://user-images.githubusercontent.com/11136637/36945767-c155a058-1fc3-11e8-9d70-a54de8e31998.jpg)\r\n![2018-03-04_15-28_mbed compiler](https://user-images.githubusercontent.com/11136637/36945768-c1765f8c-1fc3-11e8-8415-ce42ee3ff84c.jpg)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6258",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6258/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6258/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6258/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6258",
    "id": 301956303,
    "number": 6258,
    "title": "GR-Peach Compile Error Message",
    "user": {
      "login": "Meano",
      "id": 7509521,
      "avatar_url": "https://avatars3.githubusercontent.com/u/7509521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Meano",
      "html_url": "https://github.com/Meano",
      "followers_url": "https://api.github.com/users/Meano/followers",
      "following_url": "https://api.github.com/users/Meano/following{/other_user}",
      "gists_url": "https://api.github.com/users/Meano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Meano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Meano/subscriptions",
      "organizations_url": "https://api.github.com/users/Meano/orgs",
      "repos_url": "https://api.github.com/users/Meano/repos",
      "events_url": "https://api.github.com/users/Meano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Meano/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 516081004,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/devices:%20renesas",
        "name": "devices: renesas",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 28847979,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20bug",
        "name": "type: bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 17,
    "created_at": "2018-03-03T01:48:02Z",
    "updated_at": "2018-05-24T02:51:54Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Note: This is just a template, so feel free to use/remove the unnecessary things\r\n\r\n### Description\r\n- Type: Bug\r\n- Related issue:  \r\n- Priority:  Minor\r\n\r\n---------------------------------------------------------------\r\n## Bug\r\n\r\n**Target**\r\nRZ_A1H|GR_LYCHEE\r\n\r\n**Toolchain:**\r\nGCC_ARM\r\n\r\n**Toolchain version:**\r\nGCC ARM 6-2017-Q2\r\n\r\n**mbed-cli version:** \r\n1.4.0\r\n\r\n**mbed-os sha:**\r\n25321961f (Since Mbed-os-5.7.4)\r\n\r\n**DAPLink version:**\r\nUnconcerned\r\n\r\n**Expected behavior**\r\nNo Error Message\r\n\r\n**Actual behavior**\r\nGR-Peach Compile Show error message Like this \r\n![tim 20180302140225](https://user-images.githubusercontent.com/7509521/36929011-678e1c42-1ec6-11e8-85e5-97ffe0dee6c6.png)\r\n\r\n**Steps to reproduce**\r\nCompile GR-Peach Program by GCC ARM Toolchain"
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6256",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6256/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6256/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6256/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6256",
    "id": 301912052,
    "number": 6256,
    "title": "Documentation clarification for EventQueue::call_every",
    "user": {
      "login": "pauluap",
      "id": 573966,
      "avatar_url": "https://avatars3.githubusercontent.com/u/573966?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pauluap",
      "html_url": "https://github.com/pauluap",
      "followers_url": "https://api.github.com/users/pauluap/followers",
      "following_url": "https://api.github.com/users/pauluap/following{/other_user}",
      "gists_url": "https://api.github.com/users/pauluap/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pauluap/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pauluap/subscriptions",
      "organizations_url": "https://api.github.com/users/pauluap/orgs",
      "repos_url": "https://api.github.com/users/pauluap/repos",
      "events_url": "https://api.github.com/users/pauluap/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pauluap/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345536,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20events",
        "name": "component: events",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847983,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20question",
        "name": "type: question",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-03-02T21:33:52Z",
    "updated_at": "2018-03-06T12:03:44Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I was just working on adding tests to equeue and noticed a behavior that I did not expect.\r\n\r\nIn context of `events/equeue/tests.c`\r\n\r\nI tried running this test - \r\n``` c\r\nvoid dispatch_time_small_does_dispatch(void) {\r\n    equeue_t q;\r\n    int err = equeue_create(&q, 2048);\r\n    test_assert(!err);\r\n\r\n    bool touched = false;\r\n    equeue_call_every(&q, 10, simple_func, &touched);\r\n\r\n    // normal zero dispatch, verify that call occurs\r\n    equeue_dispatch(&q, 0);\r\n    test_assert(touched);\r\n}\r\n```\r\n\r\nAt first, I thought that it was because of the dispatch(0) that was doing an early exit, but digging in, it appears that the first call for the event is scheduled in the future, not immediately.\r\n\r\nThis behavior makes sense for `EventQueue::call_in` but it was surprising to me for `call_every`.  I looked at the documentation at https://os.mbed.com/docs/v5.7/mbed-os-api-doxy/classevents_1_1_event_queue.html#ae2edd53b4d12ab3f01a3c9bda58310f0 and it doesn't say anything one way or another.\r\n\r\nI don't know if I have a preference, there's bound to be people in both camps, so probably the best solution is to add to the documentation to make clear when the first event dispatch will actually occur."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6255",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6255/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6255/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6255/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6255",
    "id": 301885072,
    "number": 6255,
    "title": "ComparatorIn API and HAL interface",
    "user": {
      "login": "AGlass0fMilk",
      "id": 350500,
      "avatar_url": "https://avatars0.githubusercontent.com/u/350500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AGlass0fMilk",
      "html_url": "https://github.com/AGlass0fMilk",
      "followers_url": "https://api.github.com/users/AGlass0fMilk/followers",
      "following_url": "https://api.github.com/users/AGlass0fMilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/AGlass0fMilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AGlass0fMilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AGlass0fMilk/subscriptions",
      "organizations_url": "https://api.github.com/users/AGlass0fMilk/orgs",
      "repos_url": "https://api.github.com/users/AGlass0fMilk/repos",
      "events_url": "https://api.github.com/users/AGlass0fMilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AGlass0fMilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515345395,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20hal",
        "name": "component: hal",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-02T19:52:25Z",
    "updated_at": "2018-03-12T13:45:18Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n- Type: Enhancement\r\n--------------------------------------------------------------\r\n\r\n## Enhancement\r\n\r\n**Reason to enhance or problem with existing solution**\r\nSeveral mbed targets have built-in comparator peripherals that mbed could include a C++ driver/API for. There are a few configuration aspects that differ between targets that would have to be somehow standardized (eg: setting an internal reference/threshold. How do we decide the input type to ComparatorIn.threshold?)\r\n\r\nI understand there's a library driver around for the KL26 platform. I have extended this to work on the nRF52832 with the LPCOMP peripheral (could also use the full COMP peripheral in this case), but the C++ API from that library includes many KL26-specific functions.\r\n\r\nI am opening an issue to discuss common aspects of all integrated comparator peripherals and come up with a HAL framework."
  },
  {
    "url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6253",
    "repository_url": "https://api.github.com/repos/ARMmbed/mbed-os",
    "labels_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6253/labels{/name}",
    "comments_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6253/comments",
    "events_url": "https://api.github.com/repos/ARMmbed/mbed-os/issues/6253/events",
    "html_url": "https://github.com/ARMmbed/mbed-os/issues/6253",
    "id": 301849772,
    "number": 6253,
    "title": "fatfs: Integrate into config system",
    "user": {
      "login": "geky",
      "id": 1075160,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1075160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geky",
      "html_url": "https://github.com/geky",
      "followers_url": "https://api.github.com/users/geky/followers",
      "following_url": "https://api.github.com/users/geky/following{/other_user}",
      "gists_url": "https://api.github.com/users/geky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geky/subscriptions",
      "organizations_url": "https://api.github.com/users/geky/orgs",
      "repos_url": "https://api.github.com/users/geky/repos",
      "events_url": "https://api.github.com/users/geky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 515346312,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/component:%20filesystem",
        "name": "component: filesystem",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 28847981,
        "url": "https://api.github.com/repos/ARMmbed/mbed-os/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "cccccc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-02T17:47:53Z",
    "updated_at": "2018-03-02T17:47:53Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "From here:\r\nhttps://os.mbed.com/questions/80344/mbed-os5-includes-user-configurable-head/\r\n\r\nChanFS provides a handful of configuration options in a header file. These should be provided to application developers.\r\nhttps://github.com/ARMmbed/mbed-os/blob/master/features/filesystem/fat/ChaN/ffconf.h\r\n"
  }
]
